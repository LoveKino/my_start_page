{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./lib/index.js","webpack:///./lib/pageSignalAction/index.js","webpack:///./lib/pageView/index.js","webpack:///./lib/pageView/indexPage.js","webpack:///./lib/view/frameLink.js","webpack:///./lib/view/frameWindow.js","webpack:///./node_modules/basetype/index.js","webpack:///./node_modules/bolzano/index.js","webpack:///./node_modules/bolzano/lib/fp.js","webpack:///./node_modules/bolzano/lib/iterate.js","webpack:///./node_modules/cl-fsm/apply/json/index.js","webpack:///./node_modules/cl-fsm/index.js","webpack:///./node_modules/cl-fsm/node_modules/bolzano/index.js","webpack:///./node_modules/cl-fsm/node_modules/bolzano/lib/fp.js","webpack:///./node_modules/cl-fsm/node_modules/bolzano/lib/iterate.js","webpack:///./node_modules/cl-fsm/src/const.js","webpack:///./node_modules/cl-fsm/src/index.js","webpack:///./node_modules/cl-fsm/src/stateGraphDSL/actionDSL.js","webpack:///./node_modules/cl-fsm/src/stateGraphDSL/graphDSL.js","webpack:///./node_modules/cl-fsm/src/stateGraphDSL/index.js","webpack:///./node_modules/doming/index.js","webpack:///./node_modules/doming/lib/shadowFrame.js","webpack:///./node_modules/doming/lib/startMomenter.js","webpack:///./node_modules/kabanery-lumine/index.js","webpack:///./node_modules/kabanery-lumine/lib/flow/baseSignalActions.js","webpack:///./node_modules/kabanery-lumine/lib/index.js","webpack:///./node_modules/kabanery-lumine/lib/page/flowPfcSPA.js","webpack:///./node_modules/kabanery-lumine/lib/page/simplePager.js","webpack:///./node_modules/kabanery-lumine/lib/request/pfcApis.js","webpack:///./node_modules/kabanery-lumine/lib/request/pfcRequestor.js","webpack:///./node_modules/kabanery-lumine/lib/store/storeProps.js","webpack:///./node_modules/kabanery-lumine/lib/theme/base/actions.js","webpack:///./node_modules/kabanery-lumine/lib/theme/base/bulk.js","webpack:///./node_modules/kabanery-lumine/lib/theme/base/index.js","webpack:///./node_modules/kabanery-lumine/lib/theme/base/layout.js","webpack:///./node_modules/kabanery-lumine/lib/theme/base/widget.js","webpack:///./node_modules/kabanery-lumine/lib/theme/steady/index.js","webpack:///./node_modules/kabanery-lumine/lib/util/classTable.js","webpack:///./node_modules/kabanery-lumine/lib/util/compose.js","webpack:///./node_modules/kabanery-lumine/lib/util/helper.js","webpack:///./node_modules/kabanery-lumine/lib/util/lumineView.js","webpack:///./node_modules/kabanery-lumine/lib/util/lumineViewer.js","webpack:///./node_modules/kabanery-lumine/lib/util/n.js","webpack:///./node_modules/kabanery-lumine/lib/util/treeScript.js","webpack:///./node_modules/kabanery-lumine/lib/view/cssShapes/angle.js","webpack:///./node_modules/kabanery-lumine/lib/view/cssShapes/line.js","webpack:///./node_modules/kabanery-lumine/lib/view/empty/empty.js","webpack:///./node_modules/kabanery-lumine/lib/view/fold/fold.js","webpack:///./node_modules/kabanery-lumine/lib/view/fold/foldArrow.js","webpack:///./node_modules/kabanery-lumine/lib/view/layout/full.js","webpack:///./node_modules/kabanery-lumine/lib/view/layout/fullWindow.js","webpack:///./node_modules/kabanery-lumine/lib/view/loading/pageLoading.js","webpack:///./node_modules/kabanery-lumine/lib/view/loading/textLoading.js","webpack:///./node_modules/kabanery-lumine/lib/view/mask/pageMask.js","webpack:///./node_modules/kabanery-lumine/lib/view/notice/notice.js","webpack:///./node_modules/kabanery-signal-flow/index.js","webpack:///./node_modules/kabanery-signal-flow/lib/index.js","webpack:///./node_modules/kabanery-signal-flow/lib/util.js","webpack:///./node_modules/kabanery-signal-flow/node_modules/tree-script/grammer/tokenTypes.js","webpack:///./node_modules/kabanery-signal-flow/node_modules/tree-script/index.js","webpack:///./node_modules/kabanery-signal-flow/node_modules/tree-script/lib/jsonTree.js","webpack:///./node_modules/kabanery-signal-flow/node_modules/tree-script/lib/util.js","webpack:///./node_modules/kabanery-signal-flow/node_modules/tree-script/res/lr1Table.js","webpack:///./node_modules/kabanery-signal-flow/node_modules/tree-script/src/const.js","webpack:///./node_modules/kabanery-signal-flow/node_modules/tree-script/src/index.js","webpack:///./node_modules/kabanery-signal-flow/node_modules/tree-script/src/parser.js","webpack:///./node_modules/kabanery-signal-flow/node_modules/tree-script/src/stub.js","webpack:///./node_modules/kabanery-signal-flow/node_modules/tree-script/src/util.js","webpack:///./node_modules/kabanery-spa/index.js","webpack:///./node_modules/kabanery-spa/src/index.js","webpack:///./node_modules/kabanery/index.js","webpack:///./node_modules/kabanery/src/const/index.js","webpack:///./node_modules/kabanery/src/event/eventMatrix.js","webpack:///./node_modules/kabanery/src/event/index.js","webpack:///./node_modules/kabanery/src/index.js","webpack:///./node_modules/kabanery/src/n/index.js","webpack:///./node_modules/kabanery/src/n/parseArgs.js","webpack:///./node_modules/kabanery/src/n/parseAttribute.js","webpack:///./node_modules/kabanery/src/n/parseStyle.js","webpack:///./node_modules/kabanery/src/resolver/index.js","webpack:///./node_modules/kabanery/src/resolver/mount.js","webpack:///./node_modules/kabanery/src/resolver/resolveKRenderNode.js","webpack:///./node_modules/kabanery/src/resolver/toDomNode.js","webpack:///./node_modules/kabanery/src/util/index.js","webpack:///./node_modules/kabanery/src/view/index.js","webpack:///./node_modules/kabanery/src/view/isViewNode.js","webpack:///./node_modules/kabanery/src/view/replace/diffNode.js","webpack:///./node_modules/kabanery/src/view/replace/editAttributes.js","webpack:///./node_modules/kabanery/src/view/replace/index.js","webpack:///./node_modules/kabanery/src/view/replace/util.js","webpack:///./node_modules/kabanery/src/view/updateData.js","webpack:///./node_modules/lumine-signal/index.js","webpack:///./node_modules/lumine-signal/lib/index.js","webpack:///./node_modules/lumine-signal/lib/util.js","webpack:///./node_modules/node-libs-browser/node_modules/punycode/punycode.js","webpack:///./node_modules/pfc-compiler/lib/stubAsApis.js","webpack:///./node_modules/pfc-compiler/src/util.js","webpack:///./node_modules/querystring-es3/decode.js","webpack:///./node_modules/querystring-es3/encode.js","webpack:///./node_modules/querystring-es3/index.js","webpack:///./node_modules/stream-token-parser/index.js","webpack:///./node_modules/stream-token-parser/src/buildFSM.js","webpack:///./node_modules/stream-token-parser/src/const.js","webpack:///./node_modules/stream-token-parser/src/findToken.js","webpack:///./node_modules/stream-token-parser/src/index.js","webpack:///./node_modules/stream-token-parser/src/match.js","webpack:///./node_modules/stream-token-parser/src/util.js","webpack:///./node_modules/syntaxer/index.js","webpack:///./node_modules/syntaxer/node_modules/bolzano/index.js","webpack:///./node_modules/syntaxer/node_modules/bolzano/lib/fp.js","webpack:///./node_modules/syntaxer/node_modules/bolzano/lib/iterate.js","webpack:///./node_modules/syntaxer/src/LR/LR1/LR1CanonicalCollection.js","webpack:///./node_modules/syntaxer/src/LR/LR1/LR1Table.js","webpack:///./node_modules/syntaxer/src/LR/LR1/closure.js","webpack:///./node_modules/syntaxer/src/LR/LR1/go.js","webpack:///./node_modules/syntaxer/src/LR/index.js","webpack:///./node_modules/syntaxer/src/base/LR1Item.js","webpack:///./node_modules/syntaxer/src/base/constant.js","webpack:///./node_modules/syntaxer/src/base/ctxFreeGrammer.js","webpack:///./node_modules/syntaxer/src/base/first.js","webpack:///./node_modules/syntaxer/src/index.js","webpack:///./node_modules/syntaxer/src/reduceAst.js","webpack:///./node_modules/tree-script/grammer/tokenTypes.js","webpack:///./node_modules/tree-script/index.js","webpack:///./node_modules/tree-script/lib/jsonTree.js","webpack:///./node_modules/tree-script/lib/util.js","webpack:///./node_modules/tree-script/res/lr1Table.js","webpack:///./node_modules/tree-script/src/const.js","webpack:///./node_modules/tree-script/src/index.js","webpack:///./node_modules/tree-script/src/parser.js","webpack:///./node_modules/tree-script/src/stub.js","webpack:///./node_modules/tree-script/src/util.js","webpack:///./node_modules/url/url.js","webpack:///./node_modules/url/util.js","webpack:///./node_modules/uuid/lib/bytesToUuid.js","webpack:///./node_modules/uuid/lib/rng-browser.js","webpack:///./node_modules/uuid/v4.js","webpack:///(webpack)/buildin/global.js","webpack:///(webpack)/buildin/module.js"],"names":["require","SPA","pageSignalActionMap","pageViewMap","pageOptionsMap","indexPage","localStateStore","localStateStoreWhiteList","defaultPage","wrapBaseSignalActions","module","exports","SimplePager","lumineView","n","FrameLink","ctx","props","style","padding","name","url","toolsites","map","tool","onUrlChange","update","defaultProps","FrameWindow","Fold","hide","display","marginLeft","onclick","e","preventDefault","stopPropagation","window","open","width","value","oninput","target","src","allow","margin","border","height"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAM;AACN;AACA;AACA,cAAM;AACN;AACA;AACA,cAAM;AACN;AACA;AACA;AACA,eAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,YAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qCAA6B;AAC7B,qCAA6B;AAC7B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,6BAAqB,gBAAgB;AACrC;AACA;AACA,aAAK;AACL;AACA;AACA;AACA,6BAAqB,gBAAgB;AACrC;AACA;AACA,aAAK;AACL;AACA;AACA,aAAK;AACL;AACA;AACA,aAAK;AACL;AACA;AACA;AACA,aAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;AACA,aAAK;AACL;AACA;AACA;AACA,aAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,0BAAkB,8BAA8B;AAChD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAM;AACN;AACA;AACA;AACA,eAAO;AACP;AACA;AACA;AACA;AACA,YAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAAoB,2BAA2B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAAmB,cAAc;AACjC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAgB,KAAK;AACrB;AACA;AACA;AACA,cAAM;AACN;AACA;AACA;AACA;AACA;AACA,wBAAgB,YAAY;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAc,4BAA4B;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAM;AACN;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,uBAAe,4BAA4B;AAC3C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,uBAAe,4BAA4B;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAiB,uCAAuC;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAiB,uCAAuC;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAiB,sBAAsB;AACvC;AACA;AACA;AACA,gBAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,kBAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sBAAc,wCAAwC;AACtD;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;AACA;AACA,eAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,iBAAS;AACT;AACA;AACA;AACA;AACA;AACA;AA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;AACA;AACA;;AAEA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,qBAAqB,OAAO,sBAAsB,SAAS,iBAAiB,EAAE;AAC9E;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC1NA;;AAEA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;;AAEA,yBAAyB,WAAW,2DAA2D;;AAE/F;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACtGA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;;AAED,uCAAuC;AACvC;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjGA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,uBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;;;;;;;;;;;;ACnGA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;AClDA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACvCA;;AAEA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;;AAEA,yBAAyB,WAAW,2DAA2D;;AAE/F;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxGA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;;AAED,uCAAuC;AACvC;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;;AAED;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrHA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA,kBAAkB;;AAElB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL,uBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;;;;;;;;;;;;AC1IA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACNA;;AAEA;AACA;AACA,CAAC;;AAED;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,8CAA8C;AAC9C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC3EA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,oBAAoB;AACvC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC/FA;;AAEA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gCAAgC,QAAQ;AACxC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;;AAEA,mBAAmB,kBAAkB;AACrC;AACA;AACA,SAAS;;AAET;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,oFAAoF,KAAK;AACzF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,WAAW;AAC9B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,CAAC;;;;;;;;;;;;;ACtJD;;AAEA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,CAAC;;AAED;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,gDAAgD,QAAQ;AACxD;AACA;AACA,iBAAiB;;AAEjB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,uBAAuB,wBAAwB;AAC/C;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,oBAAoB;AACvC;AACA;AACA;;AAEA;;AAEA,kBAAkB;AAClB;;AAEA;AACA;AACA;AACA,+BAA+B,iBAAiB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kCAAkC;AAClC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET,uBAAuB,oBAAoB;AAC3C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wCAAwC,QAAQ;AAChD;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;;AAET,uBAAuB,oBAAoB;AAC3C;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,CAAC;;;;;;;;;;;;;AChOD;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,mBAAmB,uBAAuB;AAC1C;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnFA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;AC/CA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,2BAA2B,qBAAqB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK,KAAK;AACV,4CAA4C;AAC5C;AACA,SAAS,OAAO;AAChB;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;;AAEA;;;;;;;;;;;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;AC/BA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;AC5BA;;AAEA;AACA;AACA,OAAO,MAAM;AACb,OAAO,8BAA8B;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACdA;;AAEA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA,cAAc;;AAEd;AACA;;AAEA;;AAEA;AACA,kBAAkB;AAClB,0BAA0B;AAC1B,qBAAqB;;AAErB;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;AACD;;AAEA;AACA;AACA;AACA,GAAG,OAAO;AACV;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA,qBAAqB,YAAY,sCAAsC;;AAEvE;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC,KAAK;AACN;AACA;AACA;AACA,CAAC,KAAK;AACN;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;ACnJA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA,qBAAqB;AACrB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,GAAG;AACH;;;;;;;;;;;;;ACzEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,mBAAmB;AAC5C;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;AC1DA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT,6CAA6C,WAAW;AACxD;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;;;;;;;;;;;;;AC9BA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA,kCAAkC;AAClC,OAAO,cAAc;;AAErB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,UAAU;AACV,KAAK;AACL;;AAEA,6BAA6B;AAC7B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,WAAW;AACX;AACA,kJAAkJ,IAAI;AACtJ;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,UAAU;AACV;;AAEA;AACA,MAAM,sBAAsB,KAAK,MAAM;AACvC,mBAAmB,eAAe,GAAG,yBAAyB;;AAE9D;;AAEA;AACA,iBAAiB,IAAI,QAAQ,kBAAkB;AAC/C;;AAEA;AACA;;AAEA,iDAAiD;AACjD,OAAO,SAAS;;AAEhB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;ACnGA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACtBA;;AAEA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,8BAA8B,mBAAmB;AACjD,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACpDA;;AAEA;AACA;AACA;AACA;;AAEA,qCAAqC;AACrC;AACA;AACA;;AAEA;AACA;AACA;;AAEA,iDAAiD;AACjD,uDAAuD;AACvD,uDAAuD;;AAEvD;AACA;AACA;AACA,GAAG;AACH;;;;;;;;;;;;;ACxBA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;AACD;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACjDA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;;AAEH;AACA,yBAAyB,mBAAmB;AAC5C,8BAA8B,mBAAmB;AACjD;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,mBAAmB;AAC5C;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,kCAAkC,mBAAmB;AACrD;;AAEA;AACA;AACA,kCAAkC,kBAAkB;AACpD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACpEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,CAAC;;;;;;;;;;;;;AC9BD;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,CAAC;;AAED;;AAEA;;AAEA;AACA;;AAEA,uBAAuB,kBAAkB,GAAG,MAAM;;AAElD;AACA;AACA;AACA;AACA,gBAAgB,KAAK,GAAG,YAAY,GAAG,KAAK;AAC5C,KAAK;AACL,iBAAiB,YAAY,GAAG,KAAK;AACrC;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,YAAY,GAAG,mBAAmB;AAChD;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,sCAAsC,4BAA4B;AAClE,SAAS;AACT,8BAA8B,cAAc,EAAE,EAAE,kBAAkB;AAClE;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACzFA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,CAAC;;AAED;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,KAAK;AACN;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,iDAAiD;;AAEjD;AACA,iGAAiG;AACjG,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA,qBAAqB;AACrB,OAAO;AACP;AACA,uBAAuB;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA,mDAAmD;AACnD,oEAAoE;AACpE;AACA,GAAG,IAAI;;;AAGP;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;;AAEA;AACA;AACA;;;;;;;;;;;;;AC9FA;;AAEA;AACA,yBAAyB;AACzB;;AAEA;AACA;AACA;;AAEA,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iBAAiB,aAAa;AAC9B;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,kCAAkC;AAClC;AACA,GAAG;AACH;AACA;AACA;;AAEA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjGA;;AAEA;;AAEA;;;;;;;;;;;;;ACJA;;AAEA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,CAAC,KAAK;AACN;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;;AAEP,4EAA4E;AAC5E;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACxKA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;;AAEA;AACA;AACA,GAAG,OAAO;AACV;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;ACzBA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,CAAC,KAAK;AACN;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;AC1BA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,KAAK;AACN;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,2BAA2B,MAAM;AACjC;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;;;;;;;;;;;;ACjDA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,KAAK;AACN;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,MAAM;AACnC;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,6BAA6B,MAAM;AACnC;AACA,KAAK;AACL;;;;;;;;;;;;;AC7BA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;;;;;;;;;;;;;ACZD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;AACD;AACA,CAAC;AACD;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;AC1CD;;AAEA;AACA;AACA,CAAC;;AAED;AACA;;AAEA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH,CAAC;AACD;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;AC1BD;;AAEA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,GAAG;AACH,CAAC;AACD;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;;;;;;;;;;;;ACvBD;;AAEA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;AACD;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;AACD;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;;;;;;;;;;;;ACjCD;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,GAAG;AACH,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;;;;;;;;;;;;;AC9BD;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,CAAC;AACD;AACA,CAAC;AACD;AACA;AACA;AACA,GAAG;AACH,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,sBAAsB,wBAAwB;AAC9C;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;AChDD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;AACD;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;ACrBD;;AAEA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,CAAC;;AAED;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA,CAAC;AACD;AACA,CAAC;AACD;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;;;;;;;;;;;;AC1DD;;;;;;;;;;;;;ACAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,CAAC,KAAK;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mFAAmF,IAAI,cAAc,KAAK;AAC1G;;AAEA;AACA;;AAEA;AACA,kDAAkD;AAClD;AACA,SAAS;AACT;AACA,SAAS;AACT,mFAAmF,KAAK;AACxF;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,mDAAmD;AACnD;;AAEA;AACA,SAAS;AACT;AACA;;AAEA;AACA,oEAAoE;AACpE;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA,2BAA2B;AAC3B;;AAEA;AACA;AACA,2BAA2B;AAC3B;;AAEA;AACA;AACA;;;;;;;;;;;;;ACrMA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;AAED,qJAAqD;;AAErD;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChFA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,iBAAiB;AACjB;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,iBAAiB;AACjB;AACA,KAAK;AACL;AACA;AACA,iBAAiB;AACjB;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC5JA;;;;;;;;;;;;;ACAA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,CAAC,KAAK;AACN;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA,aAAa;AACb;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,uBAAuB,qBAAqB;AAC5C;AACA;AACA,kCAAkC;AAClC,0BAA0B;AAC1B;AACA;AACA;AACA;;AAEA,8CAA8C;AAC9C;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrEA;;AAEA;;AAEA;AACA,oCAAoC;AACpC;AACA,mBAAmB,KAAK,GAAG,4BAA4B;AACvD;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;ACrDA,gBAAgB,SAAS,kJAAkJ,EAAE,kJ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ACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,qBAAqB;AACrB;AACA,CAAC;AACD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,+BAA+B,0BAA0B;AACzD;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,sDAAsD,QAAQ;AAC9D;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS,6CAA6C;AACtD;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA,+BAA+B,mBAAmB;AAClD;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,+BAA+B,mBAAmB;AAClD;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA,aAAa;;AAEb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjNA;;AAEA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA,uBAAuB,mBAAmB;AAC1C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjSA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC,KAAK;AACN;;AAEA;AACA;AACA;;AAEA;AACA,2BAA2B,sBAAsB;AACjD;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,oDAAoD,QAAQ,OAAO,qCAAqC;AACxG;AACA,SAAS,mCAAmC;AAC5C;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,oDAAoD,QAAQ,mEAAmE,qCAAqC;AACpK;AACA;AACA;AACA,2BAA2B,cAAc;AACzC;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA,kEAAkE,qBAAqB,OAAO,MAAM,mEAAmE,qCAAqC;AAC5M;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gDAAgD,KAAK,kCAAkC,oCAAoC;AAC3H;;AAEA;AACA;AACA,wCAAwC,KAAK,+FAA+F,oCAAoC;AAChL;;AAEA;AACA,wCAAwC,KAAK,6FAA6F,oCAAoC;AAC9K;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,gDAAgD,KAAK;AACrD,SAAS;AACT;AACA;AACA;;AAEA,sDAAsD;AACtD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AChJA;AACA,cAAc,cAAc,MAAM,wBAAwB;AAC1D;;AAEA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA,SAAS;;AAET;;AAEA,oCAAoC;AACpC;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACtCA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ,mBAAmB;AAC3B,QAAQ,SAAS;AACjB,6CAA6C;AAC7C;AACA,QAAQ,QAAQ;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,IAAI,YAAY;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,IAAI;AACJ;;;;;;;;;;;;;ACnCA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA,CAAC;;AAED;AACA;AACA,CAAC;;AAED;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,CAAC,KAAK;AACN;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG,KAAK;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjMA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,SAAS;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,wDAAwD;AACxD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,eAAe;AACvB;AACA;AACA,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,IAAI;AACJ;AACA,iBAAiB,QAAQ;AACzB;AACA,2DAA2D;AAC3D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,eAAe;AACvB;AACA,6BAA6B,OAAO;AACpC;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,IAAI;AACJ;AACA,iBAAiB,YAAY;AAC7B;AACA,wCAAwC;AACxC,uDAAuD;AACvD;;;;;;;;;;;;;ACxGA;;AAEA;;AAEA;;AAEA;AACA,8BAA8B,KAAK;AACnC,4CAA4C,KAAK;AACjD;AACA;;;;;;;;;;;;;ACVA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,mBAAmB,qBAAqB;AACxC;AACA;AACA;AACA;;AAEA;AACA,8BAA8B;AAC9B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wCAAwC,sBAAsB,EAAE,KAAK;;;;;;;;;;;;;ACpJrE;;AAEA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC7BA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACpCA;AACA;AACA;AACA;AACA,CAAC;;AAED;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA,8BAA8B;AAC9B;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChGA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,CAAC,KAAK;AACN;AACA,mBAAmB;AACnB;;AAEA;;AAEA;;AAEA,yBAAyB;AACzB;AACA;AACA,GAAG;AACH;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH,mBAAmB,qBAAqB;AACxC;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;ACzFA;;AAEA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,gBAAgB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;;;AClEA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC,KAAK;AACN;AACA;AACA;;AAEA;AACA,mEAAmE,KAAK;AACxE;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAmB,IAAI,IAAI,OAAO;AAClC;;AAEA;AACA;;AAEA;AACA;AACA,eAAe,qBAAqB;AACpC,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;AC7DA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,CAAC;AACD;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,oBAAoB,IAAI,IAAI,MAAM;AAClC;;AAEA;AACA;;AAEA;AACA,0CAA0C,OAAO;AACjD;AACA;;AAEA,eAAe,QAAQ,EAAE,QAAQ,GAAG,gBAAgB,IAAI,QAAQ;AAChE,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjDA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACxCA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;;;;;;;;;;;;ACNA;;AAEA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,CAAC;AACD;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO;AACZ;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;;;;;;;;;;;;;ACvCA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,sBAAsB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,mBAAmB;AACpC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,uBAAuB;AACxC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,wCAAwC,OAAO;AAC/C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACnIA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;;;;;;;;;;;AC/GA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;ACJA;;AAEA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,sBAAsB,YAAY;AAClC;AACA;;AAEA;AACA,+CAA+C,OAAO;AACtD;AACA;;AAEA;AACA,sBAAsB,YAAY;AAClC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;;;;;;;;;;;;;ACjGA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClCA;;AAEA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;;AAED;AACA;AACA,kBAAkB;AAClB;AACA,GAAG,sBAAsB;AACzB;AACA;AACA,GAAG,OAAO;AACV;AACA;AACA;;;;;;;;;;;;;ACpBA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG,OAAO;AACV;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACxCA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,mCAAmC,OAAO;AAC1C;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;;ACzBA;;;;;;;;;;;;;ACAA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,WAAW;AACjE;AACA;AACA,wDAAwD,GAAG;AAC3D;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnGA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,uCAAuC,OAAO;AAC9C;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;sDCxBA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB,cAAc,MAAM;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,MAAM;AAClB,YAAY,SAAS;AACrB;AACA,cAAc,MAAM;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,SAAS;AACrB;AACA,cAAc,MAAM;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,cAAc,MAAM;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA,KAAK;AACL,4BAA4B;AAC5B;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,MAAM;AAClB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,cAAc,OAAO;AACrB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,mCAAmC;AAClE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,aAAa,WAAW;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAwB;;AAExB,yCAAyC,qBAAqB;;AAE9D;AACA;AACA;AACA;AACA;AACA,kCAAkC,oBAAoB;;AAEtD;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,0BAA0B,iBAAiB;AAC3C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,cAAc,iBAAiB;AAC/B;;AAEA;AACA;AACA;;AAEA;AACA;AACA,8BAA8B,oBAAoB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAEA;AACA;AACA;AACA;AACA,GAAG;AAAA;AACH,EAAE,QAaF;;AAEA,CAAC;;;;;;;;;;;;;;ACphBD;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;;AAEA,mCAAmC;AACnC;;AAEA;AACA;AACA;AACA,iGAAiG;AACjG,SAAS;AACT;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;;AAEA;AACA,kBAAkB,SAAS;;AAE3B;AACA;;AAEA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL,gEAAgE,KAAK;AACrE;AACA;;;;;;;;;;;;ACvFA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA,SAAS;;AAET;;AAEA,oCAAoC;AACpC;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;;AAEA;AACA,cAAc,cAAc,MAAM,wBAAwB;AAC1D;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,SAAS;AAC1B;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACnFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,eAAe;AAChC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACpFA;;AAEA;AACA;;;;;;;;;;;;;ACHA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,IAAI;AACJ;AACA,wCAAwC;AACxC,uCAAuC;AACvC,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACtCA;;AAEA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;;;;;;;;;;;;AChCA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACNA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;;AAEA;;AAEA,mBAAmB,SAAS;AAC5B;AACA;;AAEA;AACA;AACA,SAAS,0BAA0B;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,mBAAmB,sBAAsB;AACzC;AACA;AACA,SAAS;;AAET,uBAAuB,uBAAuB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;AC5DA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA,CAAC;;AAED;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;;AAET;;AAEA;;AAEA;AACA,yDAAyD,wBAAwB;AACjF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA,6BAA6B;AAC7B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;;AAEA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,CAAC;AACD;AACA,oBAAoB,SAAS;AAC7B,iBAAiB,MAAM;AACvB,gBAAgB,KAAK;AACrB,uBAAuB;AACvB,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB;AACpB;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,8BAA8B;;AAE9B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA,6CAA6C;AAC7C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,2DAA2D,OAAO,oDAAoD,MAAM;AAC5H;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACrQA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACxBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACZA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,cAAc;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,kBAAkB;AAC1B,QAAQ,aAAa;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,YAAY;AACZ;AACA;AACA,IAAI;AACJ,2BAA2B;AAC3B;AACA;AACA;;;;;;;;;;;;;AC7CA;;AAEA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;;AAEA,yBAAyB,WAAW,2DAA2D;;AAE/F;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxGA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;;AAED,uCAAuC;AACvC;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;;AAED;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrHA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA,kBAAkB;;AAElB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL,uBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;;;;;;;;;;;;AC1IA;;AAEA;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,kBAAkB;AAClB;;AAEA,uBAAuB,sBAAsB;AAC7C;AACA;;AAEA,2BAA2B,oBAAoB;AAC/C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;;;;;;;;;;;;ACzEA;;AAEA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,KAAK;;AAEL;AACA,kBAAkB;;AAElB;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,gCAAgC;AAC7C;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;;;;;;;;;;;;AC7ED;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;;AAEA,kBAAkB;AAClB;AACA;AACA;AACA,SAAS;;AAET;;AAEA,uBAAuB,6BAA6B;AACpD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;AC/EA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,2BAA2B,oBAAoB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET,8DAA8D;AAC9D;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACnEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA,CAAC,KAAK;AACN;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,4DAA4D,WAAW,0BAA0B,WAAW,kCAAkC,MAAM;AACpJ;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA,uDAAuD,MAAM,8BAA8B,WAAW,0BAA0B,WAAW,8BAA8B,MAAM;AAC/K;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD;AACpD;AACA;AACA,0DAA0D,SAAS,iCAAiC,SAAS,IAAI,WAAW,cAAc,WAAW;AACrJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC,oBAAoB;AACpB,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA,wCAAwC,KAAK;AAC7C,KAAK;;AAEL,SAAS,gBAAgB;AACzB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;ACpLA;;AAEA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;;AAEjB;;AAEA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;AC7LA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACNA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;AACD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,6CAA6C;AAC7C;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,UAAU;AAC7B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;ACnGA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA,kDAAkD;AAClD,iBAAiB;AACjB;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,yCAAyC;AACzC;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;;;;;;;;;;;;ACzGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;AC7CA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACzHA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,iBAAiB;AACjB;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;A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AAE,KAAK,wHAAwH,cAAc,yHAAyH,EAAE,SAAS,gGAAgG,iBAAiB,iGAAiG,EAAE,gBAAgB,2BAA2B,EAAE,gBAAgB,6GAA6G,EAAE,SAAS,wHAAwH,iBAAiB,yHAAyH,E;;;;;;;;;;;ACAh1W;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;AC7CA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,qBAAqB;AACrB;AACA,CAAC;AACD;AACA;;AAEA;AACA;AACA;;AAEA;AACA,mBAAmB,gBAAgB;AACnC;AACA;AACA;AACA,SAAS;AACT;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,6CAA6C;AACtD;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA,+BAA+B,mBAAmB;AAClD;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,+BAA+B,mBAAmB;AAClD;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA,aAAa;;AAEb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjKA;;AAEA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA,uBAAuB,mBAAmB;AAC1C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACtQA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC,KAAK;AACN;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oDAAoD,QAAQ,OAAO,qCAAqC;AACxG;AACA,SAAS,mCAAmC;AAC5C;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,oDAAoD,QAAQ,mEAAmE,qCAAqC;AACpK;AACA;AACA;AACA,2BAA2B,cAAc;AACzC;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA,kEAAkE,qBAAqB,OAAO,MAAM,mEAAmE,qCAAqC;AAC5M;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gDAAgD,KAAK,kCAAkC,oCAAoC;AAC3H;;AAEA;AACA;AACA,wCAAwC,KAAK,+FAA+F,oCAAoC;AAChL;;AAEA;AACA,wCAAwC,KAAK,6FAA6F,oCAAoC;AAC9K;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,gDAAgD,KAAK;AACrD,SAAS;AACT;AACA;AACA;;AAEA,sDAAsD;AACtD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACtIA;AACA,cAAc,cAAc,MAAM,wBAAwB;AAC1D;;AAEA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA,SAAS;;AAET;;AAEA,oCAAoC;AACpC;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,gBAAgB,KAAK;;AAErB;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA,2CAA2C,KAAK;AAChD,0CAA0C,KAAK;AAC/C;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,mBAAmB,4BAA4B;AAC/C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,yBAAyB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,2CAA2C,OAAO;AAClD;AACA;AACA;AACA;AACA,0CAA0C,OAAO;AACjD;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,0CAA0C,OAAO;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,mBAAmB;AACrC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAoB,mBAAmB;AACvC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,8BAA8B,QAAQ;AACtC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU,MAAM;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC3tBA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;;;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACvBA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,iCAAiC;;AAEjC;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;;AAEA;AACA,sBAAsB,QAAQ;AAC9B;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;ACjCA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,SAAS;AAC7B;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;;AC5BA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;;AAEA;AACA;AACA,4CAA4C;;AAE5C;;;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA","file":"app.js","sourcesContent":[" \tfunction hotDisposeChunk(chunkId) {\n \t\tdelete installedChunks[chunkId];\n \t}\n \tvar parentHotUpdateCallback = window[\"webpackHotUpdate\"];\n \twindow[\"webpackHotUpdate\"] = // eslint-disable-next-line no-unused-vars\n \tfunction webpackHotUpdateCallback(chunkId, moreModules) {\n \t\thotAddUpdateChunk(chunkId, moreModules);\n \t\tif (parentHotUpdateCallback) parentHotUpdateCallback(chunkId, moreModules);\n \t} ;\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotDownloadUpdateChunk(chunkId) {\n \t\tvar head = document.getElementsByTagName(\"head\")[0];\n \t\tvar script = document.createElement(\"script\");\n \t\tscript.charset = \"utf-8\";\n \t\tscript.src = __webpack_require__.p + \"\" + chunkId + \".\" + hotCurrentHash + \".hot-update.js\";\n \t\t;\n \t\thead.appendChild(script);\n \t}\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotDownloadManifest(requestTimeout) {\n \t\trequestTimeout = requestTimeout || 10000;\n \t\treturn new Promise(function(resolve, reject) {\n \t\t\tif (typeof XMLHttpRequest === \"undefined\") {\n \t\t\t\treturn reject(new Error(\"No browser support\"));\n \t\t\t}\n \t\t\ttry {\n \t\t\t\tvar request = new XMLHttpRequest();\n \t\t\t\tvar requestPath = __webpack_require__.p + \"\" + hotCurrentHash + \".hot-update.json\";\n \t\t\t\trequest.open(\"GET\", requestPath, true);\n \t\t\t\trequest.timeout = requestTimeout;\n \t\t\t\trequest.send(null);\n \t\t\t} catch (err) {\n \t\t\t\treturn reject(err);\n \t\t\t}\n \t\t\trequest.onreadystatechange = function() {\n \t\t\t\tif (request.readyState !== 4) return;\n \t\t\t\tif (request.status === 0) {\n \t\t\t\t\t// timeout\n \t\t\t\t\treject(\n \t\t\t\t\t\tnew Error(\"Manifest request to \" + requestPath + \" timed out.\")\n \t\t\t\t\t);\n \t\t\t\t} else if (request.status === 404) {\n \t\t\t\t\t// no update available\n \t\t\t\t\tresolve();\n \t\t\t\t} else if (request.status !== 200 && request.status !== 304) {\n \t\t\t\t\t// other failure\n \t\t\t\t\treject(new Error(\"Manifest request to \" + requestPath + \" failed.\"));\n \t\t\t\t} else {\n \t\t\t\t\t// success\n \t\t\t\t\ttry {\n \t\t\t\t\t\tvar update = JSON.parse(request.responseText);\n \t\t\t\t\t} catch (e) {\n \t\t\t\t\t\treject(e);\n \t\t\t\t\t\treturn;\n \t\t\t\t\t}\n \t\t\t\t\tresolve(update);\n \t\t\t\t}\n \t\t\t};\n \t\t});\n \t}\n\n \tvar hotApplyOnUpdate = true;\n \t// eslint-disable-next-line no-unused-vars\n \tvar hotCurrentHash = \"854809f4fb836aaf70a4\";\n \tvar hotRequestTimeout = 10000;\n \tvar hotCurrentModuleData = {};\n \tvar hotCurrentChildModule;\n \t// eslint-disable-next-line no-unused-vars\n \tvar hotCurrentParents = [];\n \t// eslint-disable-next-line no-unused-vars\n \tvar hotCurrentParentsTemp = [];\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotCreateRequire(moduleId) {\n \t\tvar me = installedModules[moduleId];\n \t\tif (!me) return __webpack_require__;\n \t\tvar fn = function(request) {\n \t\t\tif (me.hot.active) {\n \t\t\t\tif (installedModules[request]) {\n \t\t\t\t\tif (installedModules[request].parents.indexOf(moduleId) === -1) {\n \t\t\t\t\t\tinstalledModules[request].parents.push(moduleId);\n \t\t\t\t\t}\n \t\t\t\t} else {\n \t\t\t\t\thotCurrentParents = [moduleId];\n \t\t\t\t\thotCurrentChildModule = request;\n \t\t\t\t}\n \t\t\t\tif (me.children.indexOf(request) === -1) {\n \t\t\t\t\tme.children.push(request);\n \t\t\t\t}\n \t\t\t} else {\n \t\t\t\tconsole.warn(\n \t\t\t\t\t\"[HMR] unexpected require(\" +\n \t\t\t\t\t\trequest +\n \t\t\t\t\t\t\") from disposed module \" +\n \t\t\t\t\t\tmoduleId\n \t\t\t\t);\n \t\t\t\thotCurrentParents = [];\n \t\t\t}\n \t\t\treturn __webpack_require__(request);\n \t\t};\n \t\tvar ObjectFactory = function ObjectFactory(name) {\n \t\t\treturn {\n \t\t\t\tconfigurable: true,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: function() {\n \t\t\t\t\treturn __webpack_require__[name];\n \t\t\t\t},\n \t\t\t\tset: function(value) {\n \t\t\t\t\t__webpack_require__[name] = value;\n \t\t\t\t}\n \t\t\t};\n \t\t};\n \t\tfor (var name in __webpack_require__) {\n \t\t\tif (\n \t\t\t\tObject.prototype.hasOwnProperty.call(__webpack_require__, name) &&\n \t\t\t\tname !== \"e\" &&\n \t\t\t\tname !== \"t\"\n \t\t\t) {\n \t\t\t\tObject.defineProperty(fn, name, ObjectFactory(name));\n \t\t\t}\n \t\t}\n \t\tfn.e = function(chunkId) {\n \t\t\tif (hotStatus === \"ready\") hotSetStatus(\"prepare\");\n \t\t\thotChunksLoading++;\n \t\t\treturn __webpack_require__.e(chunkId).then(finishChunkLoading, function(err) {\n \t\t\t\tfinishChunkLoading();\n \t\t\t\tthrow err;\n \t\t\t});\n\n \t\t\tfunction finishChunkLoading() {\n \t\t\t\thotChunksLoading--;\n \t\t\t\tif (hotStatus === \"prepare\") {\n \t\t\t\t\tif (!hotWaitingFilesMap[chunkId]) {\n \t\t\t\t\t\thotEnsureUpdateChunk(chunkId);\n \t\t\t\t\t}\n \t\t\t\t\tif (hotChunksLoading === 0 && hotWaitingFiles === 0) {\n \t\t\t\t\t\thotUpdateDownloaded();\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t};\n \t\tfn.t = function(value, mode) {\n \t\t\tif (mode & 1) value = fn(value);\n \t\t\treturn __webpack_require__.t(value, mode & ~1);\n \t\t};\n \t\treturn fn;\n \t}\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotCreateModule(moduleId) {\n \t\tvar hot = {\n \t\t\t// private stuff\n \t\t\t_acceptedDependencies: {},\n \t\t\t_declinedDependencies: {},\n \t\t\t_selfAccepted: false,\n \t\t\t_selfDeclined: false,\n \t\t\t_disposeHandlers: [],\n \t\t\t_main: hotCurrentChildModule !== moduleId,\n\n \t\t\t// Module API\n \t\t\tactive: true,\n \t\t\taccept: function(dep, callback) {\n \t\t\t\tif (typeof dep === \"undefined\") hot._selfAccepted = true;\n \t\t\t\telse if (typeof dep === \"function\") hot._selfAccepted = dep;\n \t\t\t\telse if (typeof dep === \"object\")\n \t\t\t\t\tfor (var i = 0; i < dep.length; i++)\n \t\t\t\t\t\thot._acceptedDependencies[dep[i]] = callback || function() {};\n \t\t\t\telse hot._acceptedDependencies[dep] = callback || function() {};\n \t\t\t},\n \t\t\tdecline: function(dep) {\n \t\t\t\tif (typeof dep === \"undefined\") hot._selfDeclined = true;\n \t\t\t\telse if (typeof dep === \"object\")\n \t\t\t\t\tfor (var i = 0; i < dep.length; i++)\n \t\t\t\t\t\thot._declinedDependencies[dep[i]] = true;\n \t\t\t\telse hot._declinedDependencies[dep] = true;\n \t\t\t},\n \t\t\tdispose: function(callback) {\n \t\t\t\thot._disposeHandlers.push(callback);\n \t\t\t},\n \t\t\taddDisposeHandler: function(callback) {\n \t\t\t\thot._disposeHandlers.push(callback);\n \t\t\t},\n \t\t\tremoveDisposeHandler: function(callback) {\n \t\t\t\tvar idx = hot._disposeHandlers.indexOf(callback);\n \t\t\t\tif (idx >= 0) hot._disposeHandlers.splice(idx, 1);\n \t\t\t},\n\n \t\t\t// Management API\n \t\t\tcheck: hotCheck,\n \t\t\tapply: hotApply,\n \t\t\tstatus: function(l) {\n \t\t\t\tif (!l) return hotStatus;\n \t\t\t\thotStatusHandlers.push(l);\n \t\t\t},\n \t\t\taddStatusHandler: function(l) {\n \t\t\t\thotStatusHandlers.push(l);\n \t\t\t},\n \t\t\tremoveStatusHandler: function(l) {\n \t\t\t\tvar idx = hotStatusHandlers.indexOf(l);\n \t\t\t\tif (idx >= 0) hotStatusHandlers.splice(idx, 1);\n \t\t\t},\n\n \t\t\t//inherit from previous dispose call\n \t\t\tdata: hotCurrentModuleData[moduleId]\n \t\t};\n \t\thotCurrentChildModule = undefined;\n \t\treturn hot;\n \t}\n\n \tvar hotStatusHandlers = [];\n \tvar hotStatus = \"idle\";\n\n \tfunction hotSetStatus(newStatus) {\n \t\thotStatus = newStatus;\n \t\tfor (var i = 0; i < hotStatusHandlers.length; i++)\n \t\t\thotStatusHandlers[i].call(null, newStatus);\n \t}\n\n \t// while downloading\n \tvar hotWaitingFiles = 0;\n \tvar hotChunksLoading = 0;\n \tvar hotWaitingFilesMap = {};\n \tvar hotRequestedFilesMap = {};\n \tvar hotAvailableFilesMap = {};\n \tvar hotDeferred;\n\n \t// The update info\n \tvar hotUpdate, hotUpdateNewHash;\n\n \tfunction toModuleId(id) {\n \t\tvar isNumber = +id + \"\" === id;\n \t\treturn isNumber ? +id : id;\n \t}\n\n \tfunction hotCheck(apply) {\n \t\tif (hotStatus !== \"idle\") {\n \t\t\tthrow new Error(\"check() is only allowed in idle status\");\n \t\t}\n \t\thotApplyOnUpdate = apply;\n \t\thotSetStatus(\"check\");\n \t\treturn hotDownloadManifest(hotRequestTimeout).then(function(update) {\n \t\t\tif (!update) {\n \t\t\t\thotSetStatus(\"idle\");\n \t\t\t\treturn null;\n \t\t\t}\n \t\t\thotRequestedFilesMap = {};\n \t\t\thotWaitingFilesMap = {};\n \t\t\thotAvailableFilesMap = update.c;\n \t\t\thotUpdateNewHash = update.h;\n\n \t\t\thotSetStatus(\"prepare\");\n \t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\thotDeferred = {\n \t\t\t\t\tresolve: resolve,\n \t\t\t\t\treject: reject\n \t\t\t\t};\n \t\t\t});\n \t\t\thotUpdate = {};\n \t\t\tvar chunkId = \"app\";\n \t\t\t// eslint-disable-next-line no-lone-blocks\n \t\t\t{\n \t\t\t\t/*globals chunkId */\n \t\t\t\thotEnsureUpdateChunk(chunkId);\n \t\t\t}\n \t\t\tif (\n \t\t\t\thotStatus === \"prepare\" &&\n \t\t\t\thotChunksLoading === 0 &&\n \t\t\t\thotWaitingFiles === 0\n \t\t\t) {\n \t\t\t\thotUpdateDownloaded();\n \t\t\t}\n \t\t\treturn promise;\n \t\t});\n \t}\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotAddUpdateChunk(chunkId, moreModules) {\n \t\tif (!hotAvailableFilesMap[chunkId] || !hotRequestedFilesMap[chunkId])\n \t\t\treturn;\n \t\thotRequestedFilesMap[chunkId] = false;\n \t\tfor (var moduleId in moreModules) {\n \t\t\tif (Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\thotUpdate[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif (--hotWaitingFiles === 0 && hotChunksLoading === 0) {\n \t\t\thotUpdateDownloaded();\n \t\t}\n \t}\n\n \tfunction hotEnsureUpdateChunk(chunkId) {\n \t\tif (!hotAvailableFilesMap[chunkId]) {\n \t\t\thotWaitingFilesMap[chunkId] = true;\n \t\t} else {\n \t\t\thotRequestedFilesMap[chunkId] = true;\n \t\t\thotWaitingFiles++;\n \t\t\thotDownloadUpdateChunk(chunkId);\n \t\t}\n \t}\n\n \tfunction hotUpdateDownloaded() {\n \t\thotSetStatus(\"ready\");\n \t\tvar deferred = hotDeferred;\n \t\thotDeferred = null;\n \t\tif (!deferred) return;\n \t\tif (hotApplyOnUpdate) {\n \t\t\t// Wrap deferred object in Promise to mark it as a well-handled Promise to\n \t\t\t// avoid triggering uncaught exception warning in Chrome.\n \t\t\t// See https://bugs.chromium.org/p/chromium/issues/detail?id=465666\n \t\t\tPromise.resolve()\n \t\t\t\t.then(function() {\n \t\t\t\t\treturn hotApply(hotApplyOnUpdate);\n \t\t\t\t})\n \t\t\t\t.then(\n \t\t\t\t\tfunction(result) {\n \t\t\t\t\t\tdeferred.resolve(result);\n \t\t\t\t\t},\n \t\t\t\t\tfunction(err) {\n \t\t\t\t\t\tdeferred.reject(err);\n \t\t\t\t\t}\n \t\t\t\t);\n \t\t} else {\n \t\t\tvar outdatedModules = [];\n \t\t\tfor (var id in hotUpdate) {\n \t\t\t\tif (Object.prototype.hasOwnProperty.call(hotUpdate, id)) {\n \t\t\t\t\toutdatedModules.push(toModuleId(id));\n \t\t\t\t}\n \t\t\t}\n \t\t\tdeferred.resolve(outdatedModules);\n \t\t}\n \t}\n\n \tfunction hotApply(options) {\n \t\tif (hotStatus !== \"ready\")\n \t\t\tthrow new Error(\"apply() is only allowed in ready status\");\n \t\toptions = options || {};\n\n \t\tvar cb;\n \t\tvar i;\n \t\tvar j;\n \t\tvar module;\n \t\tvar moduleId;\n\n \t\tfunction getAffectedStuff(updateModuleId) {\n \t\t\tvar outdatedModules = [updateModuleId];\n \t\t\tvar outdatedDependencies = {};\n\n \t\t\tvar queue = outdatedModules.slice().map(function(id) {\n \t\t\t\treturn {\n \t\t\t\t\tchain: [id],\n \t\t\t\t\tid: id\n \t\t\t\t};\n \t\t\t});\n \t\t\twhile (queue.length > 0) {\n \t\t\t\tvar queueItem = queue.pop();\n \t\t\t\tvar moduleId = queueItem.id;\n \t\t\t\tvar chain = queueItem.chain;\n \t\t\t\tmodule = installedModules[moduleId];\n \t\t\t\tif (!module || module.hot._selfAccepted) continue;\n \t\t\t\tif (module.hot._selfDeclined) {\n \t\t\t\t\treturn {\n \t\t\t\t\t\ttype: \"self-declined\",\n \t\t\t\t\t\tchain: chain,\n \t\t\t\t\t\tmoduleId: moduleId\n \t\t\t\t\t};\n \t\t\t\t}\n \t\t\t\tif (module.hot._main) {\n \t\t\t\t\treturn {\n \t\t\t\t\t\ttype: \"unaccepted\",\n \t\t\t\t\t\tchain: chain,\n \t\t\t\t\t\tmoduleId: moduleId\n \t\t\t\t\t};\n \t\t\t\t}\n \t\t\t\tfor (var i = 0; i < module.parents.length; i++) {\n \t\t\t\t\tvar parentId = module.parents[i];\n \t\t\t\t\tvar parent = installedModules[parentId];\n \t\t\t\t\tif (!parent) continue;\n \t\t\t\t\tif (parent.hot._declinedDependencies[moduleId]) {\n \t\t\t\t\t\treturn {\n \t\t\t\t\t\t\ttype: \"declined\",\n \t\t\t\t\t\t\tchain: chain.concat([parentId]),\n \t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\tparentId: parentId\n \t\t\t\t\t\t};\n \t\t\t\t\t}\n \t\t\t\t\tif (outdatedModules.indexOf(parentId) !== -1) continue;\n \t\t\t\t\tif (parent.hot._acceptedDependencies[moduleId]) {\n \t\t\t\t\t\tif (!outdatedDependencies[parentId])\n \t\t\t\t\t\t\toutdatedDependencies[parentId] = [];\n \t\t\t\t\t\taddAllToSet(outdatedDependencies[parentId], [moduleId]);\n \t\t\t\t\t\tcontinue;\n \t\t\t\t\t}\n \t\t\t\t\tdelete outdatedDependencies[parentId];\n \t\t\t\t\toutdatedModules.push(parentId);\n \t\t\t\t\tqueue.push({\n \t\t\t\t\t\tchain: chain.concat([parentId]),\n \t\t\t\t\t\tid: parentId\n \t\t\t\t\t});\n \t\t\t\t}\n \t\t\t}\n\n \t\t\treturn {\n \t\t\t\ttype: \"accepted\",\n \t\t\t\tmoduleId: updateModuleId,\n \t\t\t\toutdatedModules: outdatedModules,\n \t\t\t\toutdatedDependencies: outdatedDependencies\n \t\t\t};\n \t\t}\n\n \t\tfunction addAllToSet(a, b) {\n \t\t\tfor (var i = 0; i < b.length; i++) {\n \t\t\t\tvar item = b[i];\n \t\t\t\tif (a.indexOf(item) === -1) a.push(item);\n \t\t\t}\n \t\t}\n\n \t\t// at begin all updates modules are outdated\n \t\t// the \"outdated\" status can propagate to parents if they don't accept the children\n \t\tvar outdatedDependencies = {};\n \t\tvar outdatedModules = [];\n \t\tvar appliedUpdate = {};\n\n \t\tvar warnUnexpectedRequire = function warnUnexpectedRequire() {\n \t\t\tconsole.warn(\n \t\t\t\t\"[HMR] unexpected require(\" + result.moduleId + \") to disposed module\"\n \t\t\t);\n \t\t};\n\n \t\tfor (var id in hotUpdate) {\n \t\t\tif (Object.prototype.hasOwnProperty.call(hotUpdate, id)) {\n \t\t\t\tmoduleId = toModuleId(id);\n \t\t\t\t/** @type {TODO} */\n \t\t\t\tvar result;\n \t\t\t\tif (hotUpdate[id]) {\n \t\t\t\t\tresult = getAffectedStuff(moduleId);\n \t\t\t\t} else {\n \t\t\t\t\tresult = {\n \t\t\t\t\t\ttype: \"disposed\",\n \t\t\t\t\t\tmoduleId: id\n \t\t\t\t\t};\n \t\t\t\t}\n \t\t\t\t/** @type {Error|false} */\n \t\t\t\tvar abortError = false;\n \t\t\t\tvar doApply = false;\n \t\t\t\tvar doDispose = false;\n \t\t\t\tvar chainInfo = \"\";\n \t\t\t\tif (result.chain) {\n \t\t\t\t\tchainInfo = \"\\nUpdate propagation: \" + result.chain.join(\" -> \");\n \t\t\t\t}\n \t\t\t\tswitch (result.type) {\n \t\t\t\t\tcase \"self-declined\":\n \t\t\t\t\t\tif (options.onDeclined) options.onDeclined(result);\n \t\t\t\t\t\tif (!options.ignoreDeclined)\n \t\t\t\t\t\t\tabortError = new Error(\n \t\t\t\t\t\t\t\t\"Aborted because of self decline: \" +\n \t\t\t\t\t\t\t\t\tresult.moduleId +\n \t\t\t\t\t\t\t\t\tchainInfo\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"declined\":\n \t\t\t\t\t\tif (options.onDeclined) options.onDeclined(result);\n \t\t\t\t\t\tif (!options.ignoreDeclined)\n \t\t\t\t\t\t\tabortError = new Error(\n \t\t\t\t\t\t\t\t\"Aborted because of declined dependency: \" +\n \t\t\t\t\t\t\t\t\tresult.moduleId +\n \t\t\t\t\t\t\t\t\t\" in \" +\n \t\t\t\t\t\t\t\t\tresult.parentId +\n \t\t\t\t\t\t\t\t\tchainInfo\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"unaccepted\":\n \t\t\t\t\t\tif (options.onUnaccepted) options.onUnaccepted(result);\n \t\t\t\t\t\tif (!options.ignoreUnaccepted)\n \t\t\t\t\t\t\tabortError = new Error(\n \t\t\t\t\t\t\t\t\"Aborted because \" + moduleId + \" is not accepted\" + chainInfo\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"accepted\":\n \t\t\t\t\t\tif (options.onAccepted) options.onAccepted(result);\n \t\t\t\t\t\tdoApply = true;\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"disposed\":\n \t\t\t\t\t\tif (options.onDisposed) options.onDisposed(result);\n \t\t\t\t\t\tdoDispose = true;\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tdefault:\n \t\t\t\t\t\tthrow new Error(\"Unexception type \" + result.type);\n \t\t\t\t}\n \t\t\t\tif (abortError) {\n \t\t\t\t\thotSetStatus(\"abort\");\n \t\t\t\t\treturn Promise.reject(abortError);\n \t\t\t\t}\n \t\t\t\tif (doApply) {\n \t\t\t\t\tappliedUpdate[moduleId] = hotUpdate[moduleId];\n \t\t\t\t\taddAllToSet(outdatedModules, result.outdatedModules);\n \t\t\t\t\tfor (moduleId in result.outdatedDependencies) {\n \t\t\t\t\t\tif (\n \t\t\t\t\t\t\tObject.prototype.hasOwnProperty.call(\n \t\t\t\t\t\t\t\tresult.outdatedDependencies,\n \t\t\t\t\t\t\t\tmoduleId\n \t\t\t\t\t\t\t)\n \t\t\t\t\t\t) {\n \t\t\t\t\t\t\tif (!outdatedDependencies[moduleId])\n \t\t\t\t\t\t\t\toutdatedDependencies[moduleId] = [];\n \t\t\t\t\t\t\taddAllToSet(\n \t\t\t\t\t\t\t\toutdatedDependencies[moduleId],\n \t\t\t\t\t\t\t\tresult.outdatedDependencies[moduleId]\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t\tif (doDispose) {\n \t\t\t\t\taddAllToSet(outdatedModules, [result.moduleId]);\n \t\t\t\t\tappliedUpdate[moduleId] = warnUnexpectedRequire;\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Store self accepted outdated modules to require them later by the module system\n \t\tvar outdatedSelfAcceptedModules = [];\n \t\tfor (i = 0; i < outdatedModules.length; i++) {\n \t\t\tmoduleId = outdatedModules[i];\n \t\t\tif (\n \t\t\t\tinstalledModules[moduleId] &&\n \t\t\t\tinstalledModules[moduleId].hot._selfAccepted\n \t\t\t)\n \t\t\t\toutdatedSelfAcceptedModules.push({\n \t\t\t\t\tmodule: moduleId,\n \t\t\t\t\terrorHandler: installedModules[moduleId].hot._selfAccepted\n \t\t\t\t});\n \t\t}\n\n \t\t// Now in \"dispose\" phase\n \t\thotSetStatus(\"dispose\");\n \t\tObject.keys(hotAvailableFilesMap).forEach(function(chunkId) {\n \t\t\tif (hotAvailableFilesMap[chunkId] === false) {\n \t\t\t\thotDisposeChunk(chunkId);\n \t\t\t}\n \t\t});\n\n \t\tvar idx;\n \t\tvar queue = outdatedModules.slice();\n \t\twhile (queue.length > 0) {\n \t\t\tmoduleId = queue.pop();\n \t\t\tmodule = installedModules[moduleId];\n \t\t\tif (!module) continue;\n\n \t\t\tvar data = {};\n\n \t\t\t// Call dispose handlers\n \t\t\tvar disposeHandlers = module.hot._disposeHandlers;\n \t\t\tfor (j = 0; j < disposeHandlers.length; j++) {\n \t\t\t\tcb = disposeHandlers[j];\n \t\t\t\tcb(data);\n \t\t\t}\n \t\t\thotCurrentModuleData[moduleId] = data;\n\n \t\t\t// disable module (this disables requires from this module)\n \t\t\tmodule.hot.active = false;\n\n \t\t\t// remove module from cache\n \t\t\tdelete installedModules[moduleId];\n\n \t\t\t// when disposing there is no need to call dispose handler\n \t\t\tdelete outdatedDependencies[moduleId];\n\n \t\t\t// remove \"parents\" references from all children\n \t\t\tfor (j = 0; j < module.children.length; j++) {\n \t\t\t\tvar child = installedModules[module.children[j]];\n \t\t\t\tif (!child) continue;\n \t\t\t\tidx = child.parents.indexOf(moduleId);\n \t\t\t\tif (idx >= 0) {\n \t\t\t\t\tchild.parents.splice(idx, 1);\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// remove outdated dependency from module children\n \t\tvar dependency;\n \t\tvar moduleOutdatedDependencies;\n \t\tfor (moduleId in outdatedDependencies) {\n \t\t\tif (\n \t\t\t\tObject.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)\n \t\t\t) {\n \t\t\t\tmodule = installedModules[moduleId];\n \t\t\t\tif (module) {\n \t\t\t\t\tmoduleOutdatedDependencies = outdatedDependencies[moduleId];\n \t\t\t\t\tfor (j = 0; j < moduleOutdatedDependencies.length; j++) {\n \t\t\t\t\t\tdependency = moduleOutdatedDependencies[j];\n \t\t\t\t\t\tidx = module.children.indexOf(dependency);\n \t\t\t\t\t\tif (idx >= 0) module.children.splice(idx, 1);\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Not in \"apply\" phase\n \t\thotSetStatus(\"apply\");\n\n \t\thotCurrentHash = hotUpdateNewHash;\n\n \t\t// insert new code\n \t\tfor (moduleId in appliedUpdate) {\n \t\t\tif (Object.prototype.hasOwnProperty.call(appliedUpdate, moduleId)) {\n \t\t\t\tmodules[moduleId] = appliedUpdate[moduleId];\n \t\t\t}\n \t\t}\n\n \t\t// call accept handlers\n \t\tvar error = null;\n \t\tfor (moduleId in outdatedDependencies) {\n \t\t\tif (\n \t\t\t\tObject.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)\n \t\t\t) {\n \t\t\t\tmodule = installedModules[moduleId];\n \t\t\t\tif (module) {\n \t\t\t\t\tmoduleOutdatedDependencies = outdatedDependencies[moduleId];\n \t\t\t\t\tvar callbacks = [];\n \t\t\t\t\tfor (i = 0; i < moduleOutdatedDependencies.length; i++) {\n \t\t\t\t\t\tdependency = moduleOutdatedDependencies[i];\n \t\t\t\t\t\tcb = module.hot._acceptedDependencies[dependency];\n \t\t\t\t\t\tif (cb) {\n \t\t\t\t\t\t\tif (callbacks.indexOf(cb) !== -1) continue;\n \t\t\t\t\t\t\tcallbacks.push(cb);\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t\tfor (i = 0; i < callbacks.length; i++) {\n \t\t\t\t\t\tcb = callbacks[i];\n \t\t\t\t\t\ttry {\n \t\t\t\t\t\t\tcb(moduleOutdatedDependencies);\n \t\t\t\t\t\t} catch (err) {\n \t\t\t\t\t\t\tif (options.onErrored) {\n \t\t\t\t\t\t\t\toptions.onErrored({\n \t\t\t\t\t\t\t\t\ttype: \"accept-errored\",\n \t\t\t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\t\t\tdependencyId: moduleOutdatedDependencies[i],\n \t\t\t\t\t\t\t\t\terror: err\n \t\t\t\t\t\t\t\t});\n \t\t\t\t\t\t\t}\n \t\t\t\t\t\t\tif (!options.ignoreErrored) {\n \t\t\t\t\t\t\t\tif (!error) error = err;\n \t\t\t\t\t\t\t}\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Load self accepted modules\n \t\tfor (i = 0; i < outdatedSelfAcceptedModules.length; i++) {\n \t\t\tvar item = outdatedSelfAcceptedModules[i];\n \t\t\tmoduleId = item.module;\n \t\t\thotCurrentParents = [moduleId];\n \t\t\ttry {\n \t\t\t\t__webpack_require__(moduleId);\n \t\t\t} catch (err) {\n \t\t\t\tif (typeof item.errorHandler === \"function\") {\n \t\t\t\t\ttry {\n \t\t\t\t\t\titem.errorHandler(err);\n \t\t\t\t\t} catch (err2) {\n \t\t\t\t\t\tif (options.onErrored) {\n \t\t\t\t\t\t\toptions.onErrored({\n \t\t\t\t\t\t\t\ttype: \"self-accept-error-handler-errored\",\n \t\t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\t\terror: err2,\n \t\t\t\t\t\t\t\toriginalError: err\n \t\t\t\t\t\t\t});\n \t\t\t\t\t\t}\n \t\t\t\t\t\tif (!options.ignoreErrored) {\n \t\t\t\t\t\t\tif (!error) error = err2;\n \t\t\t\t\t\t}\n \t\t\t\t\t\tif (!error) error = err;\n \t\t\t\t\t}\n \t\t\t\t} else {\n \t\t\t\t\tif (options.onErrored) {\n \t\t\t\t\t\toptions.onErrored({\n \t\t\t\t\t\t\ttype: \"self-accept-errored\",\n \t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\terror: err\n \t\t\t\t\t\t});\n \t\t\t\t\t}\n \t\t\t\t\tif (!options.ignoreErrored) {\n \t\t\t\t\t\tif (!error) error = err;\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// handle errors in accept handlers and self accepted module load\n \t\tif (error) {\n \t\t\thotSetStatus(\"fail\");\n \t\t\treturn Promise.reject(error);\n \t\t}\n\n \t\thotSetStatus(\"idle\");\n \t\treturn new Promise(function(resolve) {\n \t\t\tresolve(outdatedModules);\n \t\t});\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {},\n \t\t\thot: hotCreateModule(moduleId),\n \t\t\tparents: (hotCurrentParentsTemp = hotCurrentParents, hotCurrentParents = [], hotCurrentParentsTemp),\n \t\t\tchildren: []\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, hotCreateRequire(moduleId));\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/assets\";\n\n \t// __webpack_hash__\n \t__webpack_require__.h = function() { return hotCurrentHash; };\n\n\n \t// Load entry module and return exports\n \treturn hotCreateRequire(\"./lib/index.js\")(__webpack_require__.s = \"./lib/index.js\");\n","'use strict';\n\nconst {\n  SPA\n} = require('kabanery-lumine/lib/page/flowPfcSPA');\nconst pageSignalActionMap = require('./pageSignalAction');\nconst pageViewMap = require('./pageView');\n\nSPA({\n  pageViewMap,\n  pageSignalActionMap,\n  pageOptionsMap: {\n    indexPage: {\n      localStateStore: false,\n      localStateStoreWhiteList: []\n    }\n  },\n  defaultPage: 'indexPage'\n});\n","'use strict';\n\n/**\n * const {} = require('../signals');\n */\nconst {wrapBaseSignalActions} = require('kabanery-lumine/lib/flow/baseSignalActions');\n\n/**\n *\n * {\n *      [pageName]: {\n *          [signalName]: [{\n *              type,       // updateState | sendRequest\n *              content,    // tree-script\n *\n *              response,    // response of sendRequest, tree-script\n *              error,       // error of sendRequest, tree-script\n *              variableMap: {}\n *          }]\n *      }\n * }\n *\n * source tree data in tree-script\n *     updateState: {signal, viewState, localStorage}\n *     response: {response, viewState, localStorage}\n *     error: {errorMsg, error, viewState, localStorage}\n *\n * Special signals:\n *      kabanery_page_render // when this page rendered\n *\n * tree-script: https://github.com/LoveKino/tree-script\n */\nmodule.exports = wrapBaseSignalActions({\n  indexPage: {\n    'kabanery_page_render': []\n  }\n});","'use strict';\n/**\n *  register all pages here in the module\n */\nconst indexPage = require('./indexPage');\n\nmodule.exports = {\n  indexPage\n};","'use strict';\n\nconst SimplePager = require('kabanery-lumine/lib/page/simplePager');\nconst {\n  lumineView,\n  n\n} = require('kabanery-lumine');\nconst FrameLink = require('../view/frameLink');\n\n/**\n * const {} = require('../signals');\n */\n\n// common views\n// const Hn = require('kabanery-lumine/lib/view/layout/hn');\n// const Vn = require('kabanery-lumine/lib/view/layout/vn');\n// const Button = require('kabanery-lumine/lib/view/button/button');\n// const Input = require('kabanery-lumine/lib/view/input/input');\n\n/**\n *  SimplePager encapsulate notice and loading view.\n *\n *      .notice.text\n *      .notice.show\n *      .loading.show\n */\n\n/**\n * syncBindWithKeyMap:\n *     sync child props with parent props\n *     ctx.bn({[parent props]: 'value'})(Input, {})\n */\n\n/**\n * pass signal\n *     demo: n(Button, {onsignal: ctx.pass('click', SIGNAL_TYPE)}, 'save')\n */\nmodule.exports = SimplePager(lumineView(({\n  props\n}, ctx) => {\n  return n('div', {\n    style: {\n      padding: 8\n    }\n  }, [\n    n('h3', 'plan'),\n\n    n('ul', [\n      n('li', 'Learn English (1 hour, suggested time: 13:30-14:30)'),\n      n('li', 'Algorithm (1 hour, suggested time: 17:00-18:00)'),\n      n('li', 'CASACN (1 hour, suggested time: 21:00-22:00)'),\n      n('li', 'Health exercise (1 hour: 18:30-19:30)')\n    ]),\n\n    // TODO\n    n(FrameLink, {\n      name: 'plan service. (TODO design a plan service)',\n      url: ''\n    }),\n\n    n('h3', 'toolsites'),\n    n('ul', [\n      props.toolsites.map((tool) => {\n        // TODO fix fold problem\n        return n('li', [\n          n(FrameLink, {\n            name: tool.name,\n            url: tool.url,\n            onUrlChange: (url) => {\n              tool.url = url;\n              ctx.update();\n            }\n          })\n        ]);\n      })\n    ])\n  ]);\n}, {\n  defaultProps: {\n    toolsites: [\n\n      {\n        name: 'youtube',\n        url: 'https://www.youtube.com/'\n      },\n      {\n        name: 'netflix',\n        url: 'https://www.netflix.com/browse'\n      }, {\n        name: 'facebook messager',\n        url: 'https://www.messenger.com/t/kinolee97'\n      }, {\n        name: 'translator',\n        url: 'https://translate.google.com/'\n      },\n      {\n        name: \"scala api\",\n        url: 'https://www.scala-lang.org/files/archive/api/current/'\n      },\n      {\n        name: \"nodejs doc\",\n        url: 'https://nodejs.org/dist/latest-v10.x/docs/api/'\n      }\n    ]\n  }\n}));\n","'use strict';\n\nconst {\n  n,\n  lumineView\n} = require('kabanery-lumine');\n\nconst FrameWindow = require('./frameWindow');\nconst Fold = require('kabanery-lumine/lib/view/fold/fold');\n\nmodule.exports = lumineView(({\n  props\n}) => {\n  return n('div', {}, [\n    n('div', props.name),\n    n('div', {\n      style: {\n        padding: '0 8 0 8'\n      }\n    }, [\n      n(Fold, {\n        hide: true\n      }, [\n        n('div', {\n          style: {\n            display: 'inline-block'\n          }\n        }, [\n          n('span', 'inside frame'),\n          n(`a href=\"${props.url}\" target=\"_blank\"`, {\n            style: {\n              display: 'inline-block',\n              marginLeft: 10\n            },\n            onclick: (e) => {\n              e.preventDefault();\n              e.stopPropagation();\n              window.open(props.url, '_blank');\n            }\n          }, 'new page'),\n          n('input', {\n            style: {\n              width: 200\n            },\n            value: props.url,\n            onclick: (e) => {\n              e.preventDefault();\n              e.stopPropagation();\n            },\n            oninput: (e) => {\n              props.onUrlChange && props.onUrlChange(e.target.value);\n            }\n          })\n        ]),\n        n('div', [\n          n(FrameWindow, {\n            src: props.url\n          })\n        ])\n      ])\n    ])\n  ]);\n}, {\n  defaultProps: {\n    name: '',\n    url: ''\n  }\n});\n","'use strict';\n\nconst {\n  n,\n  lumineView\n} = require('kabanery-lumine');\n\nmodule.exports = lumineView(({\n  props\n}) => {\n  return n('iframe', {\n    src: props.src,\n    allow: props.allow,\n    style: props.style\n  });\n}, {\n  defaultProps: {\n    allow: 'encrypted-media;camera;microphone;fullscreen;',\n    style: {\n      margin: 0,\n      padding: 0,\n      border: '1px solid #999999',\n      width: '100%',\n      height: 400\n    }\n  }\n});\n","'use strict';\n\n/**\n * basic types\n */\n\nlet truth = () => true;\n\nlet isUndefined = v => v === undefined;\n\nlet isNull = v => v === null;\n\nlet isFalsy = v => !v;\n\nlet likeArray = v => !!(v && typeof v === 'object' && typeof v.length === 'number' && v.length >= 0);\n\nlet isArray = v => Array.isArray(v);\n\nlet isString = v => typeof v === 'string';\n\nlet isObject = v => !!(v && typeof v === 'object');\n\nlet isFunction = v => typeof v === 'function';\n\nlet isNumber = v => typeof v === 'number' && !isNaN(v);\n\nlet isBool = v => typeof v === 'boolean';\n\nlet isNode = (o) => {\n    return (\n        typeof Node === 'object' ? o instanceof Node :\n        o && typeof o === 'object' && typeof o.nodeType === 'number' && typeof o.nodeName === 'string'\n    );\n};\n\nlet isPromise = v => v && typeof v === 'object' && typeof v.then === 'function' && typeof v.catch === 'function';\n\nlet isRegExp = v => v instanceof RegExp;\n\nlet isReadableStream = (v) => isObject(v) && isFunction(v.on) && isFunction(v.pipe);\n\nlet isWritableStream = v => isObject(v) && isFunction(v.on) && isFunction(v.write);\n\n/**\n * check type\n *\n * types = [typeFun]\n */\nlet funType = (fun, types = []) => {\n    if (!isFunction(fun)) {\n        throw new TypeError(typeErrorText(fun, 'function'));\n    }\n\n    if (!likeArray(types)) {\n        throw new TypeError(typeErrorText(types, 'array'));\n    }\n\n    for (let i = 0; i < types.length; i++) {\n        let typeFun = types[i];\n        if (typeFun) {\n            if (!isFunction(typeFun)) {\n                throw new TypeError(typeErrorText(typeFun, 'function'));\n            }\n        }\n    }\n\n    return function() {\n        // check type\n        for (let i = 0; i < types.length; i++) {\n            let typeFun = types[i];\n            let arg = arguments[i];\n            if (typeFun && !typeFun(arg)) {\n                throw new TypeError(`Argument type error. Arguments order ${i}. Argument is ${arg}. function is ${fun}, args are ${arguments}.`);\n            }\n        }\n        // result\n        return fun.apply(this, arguments);\n    };\n};\n\nlet and = (...args) => {\n    if (!any(args, isFunction)) {\n        throw new TypeError('The argument of and must be function.');\n    }\n    return (v) => {\n        for (let i = 0; i < args.length; i++) {\n            let typeFun = args[i];\n            if (!typeFun(v)) {\n                return false;\n            }\n        }\n        return true;\n    };\n};\n\nlet or = (...args) => {\n    if (!any(args, isFunction)) {\n        throw new TypeError('The argument of and must be function.');\n    }\n\n    return (v) => {\n        for (let i = 0; i < args.length; i++) {\n            let typeFun = args[i];\n            if (typeFun(v)) {\n                return true;\n            }\n        }\n        return false;\n    };\n};\n\nlet not = (type) => {\n    if (!isFunction(type)) {\n        throw new TypeError('The argument of and must be function.');\n    }\n    return (v) => !type(v);\n};\n\nlet any = (list, type) => {\n    if (!likeArray(list)) {\n        throw new TypeError(typeErrorText(list, 'list'));\n    }\n    if (!isFunction(type)) {\n        throw new TypeError(typeErrorText(type, 'function'));\n    }\n\n    for (let i = 0; i < list.length; i++) {\n        if (!type(list[i])) {\n            return false;\n        }\n    }\n    return true;\n};\n\nlet exist = (list, type) => {\n    if (!likeArray(list)) {\n        throw new TypeError(typeErrorText(list, 'array'));\n    }\n    if (!isFunction(type)) {\n        throw new TypeError(typeErrorText(type, 'function'));\n    }\n\n    for (let i = 0; i < list.length; i++) {\n        if (type(list[i])) {\n            return true;\n        }\n    }\n    return false;\n};\n\nlet mapType = (map) => {\n    if (!isObject(map)) {\n        throw new TypeError(typeErrorText(map, 'obj'));\n    }\n\n    for (let name in map) {\n        let type = map[name];\n        if (!isFunction(type)) {\n            throw new TypeError(typeErrorText(type, 'function'));\n        }\n    }\n\n    return (v) => {\n        if (!isObject(v)) {\n            return false;\n        }\n\n        for (let name in map) {\n            let type = map[name];\n            let attr = v[name];\n            if (!type(attr)) {\n                return false;\n            }\n        }\n\n        return true;\n    };\n};\n\nlet listType = (type) => {\n    if (!isFunction(type)) {\n        throw new TypeError(typeErrorText(type, 'function'));\n    }\n\n    return (list) => any(list, type);\n};\n\nlet typeErrorText = (v, expect) => {\n    return `Expect ${expect} type, but got type ${typeof v}, and value is ${v}`;\n};\n\nmodule.exports = {\n    isArray,\n    likeArray,\n    isString,\n    isObject,\n    isFunction,\n    isNumber,\n    isBool,\n    isNode,\n    isPromise,\n    isNull,\n    isUndefined,\n    isFalsy,\n    isRegExp,\n    isReadableStream,\n    isWritableStream,\n\n    funType,\n    any,\n    exist,\n\n    and,\n    or,\n    not,\n    mapType,\n    listType,\n    truth\n};\n","'use strict';\n\nlet {\n    isObject, funType, or, isString, isFalsy, likeArray\n} = require('basetype');\n\nlet iterate = require('./lib/iterate');\n\nlet {\n    map, reduce, find, findIndex, forEach, filter, any, exist, compact\n} = require('./lib/fp');\n\nlet contain = (list, item, fopts) => findIndex(list, item, fopts) !== -1;\n\nlet difference = (list1, list2, fopts) => {\n    return reduce(list1, (prev, item) => {\n        if (!contain(list2, item, fopts) &&\n            !contain(prev, item, fopts)) {\n            prev.push(item);\n        }\n        return prev;\n    }, []);\n};\n\nlet union = (list1, list2, fopts) => deRepeat(list2, fopts, deRepeat(list1, fopts));\n\nlet mergeMap = (map1 = {}, map2 = {}) => reduce(map2, setValueKey, reduce(map1, setValueKey, {}));\n\nlet setValueKey = (obj, value, key) => {\n    obj[key] = value;\n    return obj;\n};\n\nlet interset = (list1, list2, fopts) => {\n    return reduce(list1, (prev, cur) => {\n        if (contain(list2, cur, fopts)) {\n            prev.push(cur);\n        }\n        return prev;\n    }, []);\n};\n\nlet deRepeat = (list, fopts, init = []) => {\n    return reduce(list, (prev, cur) => {\n        if (!contain(prev, cur, fopts)) {\n            prev.push(cur);\n        }\n        return prev;\n    }, init);\n};\n\n/**\n * a.b.c\n */\nlet get = funType((sandbox, name = '') => {\n    name = name.trim();\n    let parts = !name ? [] : name.split('.');\n    return reduce(parts, getValue, sandbox, invertLogic);\n}, [\n    isObject,\n    or(isString, isFalsy)\n]);\n\nlet getValue = (obj, key) => obj[key];\n\nlet invertLogic = v => !v;\n\nlet delay = (time) => new Promise((resolve) => {\n    setTimeout(resolve, time);\n});\n\nlet flat = (list) => {\n    if (likeArray(list) && !isString(list)) {\n        return reduce(list, (prev, item) => {\n            prev = prev.concat(flat(item));\n            return prev;\n        }, []);\n    } else {\n        return [list];\n    }\n};\n\nmodule.exports = {\n    flat,\n    contain,\n    difference,\n    union,\n    interset,\n    map,\n    reduce,\n    iterate,\n    find,\n    findIndex,\n    deRepeat,\n    forEach,\n    filter,\n    any,\n    exist,\n    get,\n    delay,\n    mergeMap,\n    compact\n};\n","'use strict';\n\nlet iterate = require('./iterate');\n\nlet defauls = {\n    eq: (v1, v2) => v1 === v2\n};\n\nlet setDefault = (opts, defauls) => {\n    for (let name in defauls) {\n        opts[name] = opts[name] || defauls[name];\n    }\n};\n\nlet forEach = (list, handler) => iterate(list, {\n    limit: (rets) => {\n        if (rets === true) return true;\n        return false;\n    },\n    transfer: handler,\n    output: (prev, cur) => cur,\n    def: false\n});\n\nlet map = (list, handler, limit) => iterate(list, {\n    transfer: handler,\n    def: [],\n    limit\n});\n\nlet reduce = (list, handler, def, limit) => iterate(list, {\n    output: handler,\n    def,\n    limit\n});\n\nlet filter = (list, handler, limit) => reduce(list, (prev, cur, index, list) => {\n    handler && handler(cur, index, list) && prev.push(cur);\n    return prev;\n}, [], limit);\n\nlet find = (list, item, fopts) => {\n    let index = findIndex(list, item, fopts);\n    if (index === -1) return undefined;\n    return list[index];\n};\n\nlet any = (list, handler) => reduce(list, (prev, cur, index, list) => {\n    let curLogic = handler && handler(cur, index, list);\n    return prev && originLogic(curLogic);\n}, true, falsyIt);\n\nlet exist = (list, handler) => reduce(list, (prev, cur, index, list) => {\n    let curLogic = handler && handler(cur, index, list);\n    return prev || originLogic(curLogic);\n}, false, originLogic);\n\nlet findIndex = (list, item, fopts = {}) => {\n    setDefault(fopts, defauls);\n\n    let {\n        eq\n    } = fopts;\n    let predicate = (v) => eq(item, v);\n    let ret = iterate(list, {\n        transfer: indexTransfer,\n        limit: onlyOne,\n        predicate,\n        def: []\n    });\n    if (!ret.length) return -1;\n    return ret[0];\n};\n\nlet compact = (list) => reduce(list, (prev, cur) => {\n    if (cur) prev.push(cur);\n    return prev;\n}, []);\n\nlet indexTransfer = (item, index) => index;\n\nlet onlyOne = (rets, item, name, domain, count) => count >= 1;\n\nlet falsyIt = v => !v;\n\nlet originLogic = v => !!v;\n\nmodule.exports = {\n    map,\n    forEach,\n    reduce,\n    find,\n    findIndex,\n    filter,\n    any,\n    exist,\n    compact\n};\n","'use strict';\n\nlet {\n    likeArray, isObject, funType, isFunction, isUndefined, or, isNumber, isFalsy, mapType\n} = require('basetype');\n\n/**\n *\n * preidcate: chose items to iterate\n * limit: when to stop iteration\n * transfer: transfer item\n * output\n */\nlet iterate = funType((domain = [], opts = {}) => {\n    let {\n        predicate, transfer, output, limit, def\n    } = opts;\n\n    opts.predicate = predicate || truthy;\n    opts.transfer = transfer || id;\n    opts.output = output || toList;\n    if (limit === undefined) limit = domain && domain.length;\n    limit = opts.limit = stopCondition(limit);\n\n    let rets = def;\n    let count = 0;\n\n    if (likeArray(domain)) {\n        for (let i = 0; i < domain.length; i++) {\n            let itemRet = iterateItem(domain, i, count, rets, opts);\n            rets = itemRet.rets;\n            count = itemRet.count;\n            if (itemRet.stop) return rets;\n        }\n    } else if (isObject(domain)) {\n        for (let name in domain) {\n            let itemRet = iterateItem(domain, name, count, rets, opts);\n            rets = itemRet.rets;\n            count = itemRet.count;\n            if (itemRet.stop) return rets;\n        }\n    }\n\n    return rets;\n}, [\n    or(isObject, isFunction, isFalsy),\n    or(isUndefined, mapType({\n        predicate: or(isFunction, isFalsy),\n        transfer: or(isFunction, isFalsy),\n        output: or(isFunction, isFalsy),\n        limit: or(isUndefined, isNumber, isFunction)\n    }))\n]);\n\nlet iterateItem = (domain, name, count, rets, {\n    predicate, transfer, output, limit\n}) => {\n    let item = domain[name];\n    if (limit(rets, item, name, domain, count)) {\n        // stop\n        return {\n            stop: true,\n            count,\n            rets\n        };\n    }\n\n    if (predicate(item)) {\n        rets = output(rets, transfer(item, name, domain, rets), name, domain);\n        count++;\n    }\n    return {\n        stop: false,\n        count,\n        rets\n    };\n};\n\nlet stopCondition = (limit) => {\n    if (isUndefined(limit)) {\n        return falsy;\n    } else if (isNumber(limit)) {\n        return (rets, item, name, domain, count) => count >= limit;\n    } else {\n        return limit;\n    }\n};\n\nlet toList = (prev, v) => {\n    prev.push(v);\n    return prev;\n};\n\nlet truthy = () => true;\n\nlet falsy = () => false;\n\nlet id = v => v;\n\nmodule.exports = iterate;\n","'use strict';\n\nlet {\n    stateGraphDSL\n} = require('../..');\n\nlet {\n    g, c, union, range, sequence, circle, left, repeat\n} = stateGraphDSL;\n\nlet numberGraph = g(c(union(null, '-'),\n    g(\n        c('0', g('decimal',\n            c('.', circle(range('0', '9'), 'science')),\n            c(null, g('science',\n                c(null, 'accept'),\n                sequence(\n                    union('e', 'E'),\n                    union('+', '-', null),\n                    range('0', '9'),\n                    circle(range('0', '9'), 'accept')\n                )\n            ))\n        )),\n\n        sequence(\n            range('1', '9'),\n            circle(range('0', '9'), 'decimal')\n        )\n    )\n));\n\nlet hexDigit = union(range('0', '9'), range('A', 'F'), range('a', 'f'));\n\nlet escapeSymbols = union('\"', '\\\\', '\\/', 'b', 'f', 'n', 'r', 't');\n\nlet stringGraph = g(\n    c('\"', g('enter',\n        c('\\\\', g(\n            c(escapeSymbols, 'enter'),\n            c('u',\n                g(repeat(hexDigit, 4, 'enter'))\n            ))),\n        c('\"', 'accept'),\n        c(left(), 'enter')\n    )));\n\nmodule.exports = {\n    numberGraph,\n    stringGraph\n};\n","'use strict';\n\n/**\n *\n * @readme-quick-run\n *\n * ## test tar=js r_c=FSM\n *\n *\n * let {\n *     stateGraphDSL, fsm, WAIT, MATCH\n * } = FSM;\n *\n * let {\n *     g, c, union, range, sequence, circle, left, repeat\n * } = stateGraphDSL;\n *\n * let hexDigit = union(range('0', '9'), range('A', 'F'), range('a', 'f'));\n *\n * let escapeSymbols = union('\"', '\\\\', '\\/', 'b', 'f', 'n', 'r', 't');\n *\n * let stringDFA = g(\n *     c('\"', g('enter',\n *         c('\\\\', g(\n *             c(escapeSymbols, 'enter'),\n *             c('u',\n *                 g(repeat(hexDigit, 4, 'enter'))\n *             ))),\n *         c('\"', 'accept'),\n *         c(left(), 'enter')\n *     )));\n *\n * let m = fsm(stringDFA);\n * console.log(m('\"').type === WAIT);\n * console.log(m('a').type === WAIT);\n * console.log(m('b').type === WAIT);\n * console.log(m('\"').type === MATCH);\n *\n **/\nmodule.exports = require('./src');\n","'use strict';\n\nlet {\n    isObject, funType, or, isString, isFalsy, likeArray\n} = require('basetype');\n\nlet iterate = require('./lib/iterate');\n\nlet {\n    map, reduce, find, findIndex, forEach, filter, any, exist, compact, reverse, overArgs\n} = require('./lib/fp');\n\nlet contain = (list, item, fopts) => findIndex(list, item, fopts) !== -1;\n\nlet difference = (list1, list2, fopts) => {\n    return reduce(list1, (prev, item) => {\n        if (!contain(list2, item, fopts) &&\n            !contain(prev, item, fopts)) {\n            prev.push(item);\n        }\n        return prev;\n    }, []);\n};\n\nlet union = (list1, list2, fopts) => deRepeat(list2, fopts, deRepeat(list1, fopts));\n\nlet mergeMap = (map1 = {}, map2 = {}) => reduce(map2, setValueKey, reduce(map1, setValueKey, {}));\n\nlet setValueKey = (obj, value, key) => {\n    obj[key] = value;\n    return obj;\n};\n\nlet interset = (list1, list2, fopts) => {\n    return reduce(list1, (prev, cur) => {\n        if (contain(list2, cur, fopts)) {\n            prev.push(cur);\n        }\n        return prev;\n    }, []);\n};\n\nlet deRepeat = (list, fopts, init = []) => {\n    return reduce(list, (prev, cur) => {\n        if (!contain(prev, cur, fopts)) {\n            prev.push(cur);\n        }\n        return prev;\n    }, init);\n};\n\n/**\n * a.b.c\n */\nlet get = funType((sandbox, name = '') => {\n    name = name.trim();\n    let parts = !name ? [] : name.split('.');\n    return reduce(parts, getValue, sandbox, invertLogic);\n}, [\n    isObject,\n    or(isString, isFalsy)\n]);\n\nlet getValue = (obj, key) => obj[key];\n\nlet invertLogic = v => !v;\n\nlet delay = (time) => new Promise((resolve) => {\n    setTimeout(resolve, time);\n});\n\nlet flat = (list) => {\n    if (likeArray(list) && !isString(list)) {\n        return reduce(list, (prev, item) => {\n            prev = prev.concat(flat(item));\n            return prev;\n        }, []);\n    } else {\n        return [list];\n    }\n};\n\nmodule.exports = {\n    flat,\n    contain,\n    difference,\n    union,\n    interset,\n    map,\n    reduce,\n    iterate,\n    find,\n    findIndex,\n    deRepeat,\n    forEach,\n    filter,\n    any,\n    exist,\n    get,\n    delay,\n    mergeMap,\n    compact,\n    reverse,\n    overArgs\n};\n","'use strict';\n\nlet {\n    iterate\n} = require('./iterate');\n\nlet {\n    isFunction\n} = require('basetype');\n\nlet defauls = {\n    eq: (v1, v2) => v1 === v2\n};\n\nlet setDefault = (opts, defauls) => {\n    for (let name in defauls) {\n        opts[name] = opts[name] || defauls[name];\n    }\n};\n\nlet forEach = (list, handler) => iterate(list, {\n    limit: (rets) => {\n        if (rets === true) return true;\n        return false;\n    },\n    transfer: handler,\n    output: (prev, cur) => cur,\n    def: false\n});\n\nlet map = (list, handler, limit) => iterate(list, {\n    transfer: handler,\n    def: [],\n    limit\n});\n\nlet reduce = (list, handler, def, limit) => iterate(list, {\n    output: handler,\n    def,\n    limit\n});\n\nlet filter = (list, handler, limit) => reduce(list, (prev, cur, index, list) => {\n    handler && handler(cur, index, list) && prev.push(cur);\n    return prev;\n}, [], limit);\n\nlet find = (list, item, fopts) => {\n    let index = findIndex(list, item, fopts);\n    if (index === -1) return undefined;\n    return list[index];\n};\n\nlet any = (list, handler) => reduce(list, (prev, cur, index, list) => {\n    let curLogic = handler && handler(cur, index, list);\n    return prev && originLogic(curLogic);\n}, true, falsyIt);\n\nlet exist = (list, handler) => reduce(list, (prev, cur, index, list) => {\n    let curLogic = handler && handler(cur, index, list);\n    return prev || originLogic(curLogic);\n}, false, originLogic);\n\nlet findIndex = (list, item, fopts = {}) => {\n    setDefault(fopts, defauls);\n\n    let {\n        eq\n    } = fopts;\n    let predicate = isFunction(item) ? item : (v) => eq(item, v);\n    let ret = iterate(list, {\n        transfer: indexTransfer,\n        limit: onlyOne,\n        predicate,\n        def: []\n    });\n    if (!ret.length) return -1;\n    return ret[0];\n};\n\nlet compact = (list) => reduce(list, (prev, cur) => {\n    if (cur) prev.push(cur);\n    return prev;\n}, []);\n\nlet reverse = (list) => reduce(list, (prev, cur) => {\n    prev.unshift(cur);\n    return prev;\n}, []);\n\nlet indexTransfer = (item, index) => index;\n\nlet onlyOne = (rets, item, name, domain, count) => count >= 1;\n\nlet falsyIt = v => !v;\n\nlet originLogic = v => !!v;\n\nlet overArgs = (func, transform) => {\n    return (...args) => {\n        let newArgs = transform(...args);\n        return func(...newArgs);\n    };\n};\n\nmodule.exports = {\n    overArgs,\n    map,\n    forEach,\n    reduce,\n    find,\n    findIndex,\n    filter,\n    any,\n    exist,\n    compact,\n    reverse\n};\n","'use strict';\n\nlet {\n    isPromise, likeArray, isObject, funType, isFunction, isUndefined, or, isNumber, isFalsy, isReadableStream, mapType\n} = require('basetype');\n\n/**\n * @param opts\n *      preidcate: chose items to iterate\n *      limit: when to stop iteration\n *      transfer: transfer item\n *      output\n *      def: default result\n */\nlet iterate = funType((domain, opts = {}) => {\n    domain = domain || [];\n    if (isPromise(domain)) {\n        return domain.then(list => {\n            return iterate(list, opts);\n        });\n    }\n    return iterateList(domain, opts);\n}, [\n    or(isPromise, isObject, isFunction, isFalsy),\n    or(isUndefined, mapType({\n        predicate: or(isFunction, isFalsy),\n        transfer: or(isFunction, isFalsy),\n        output: or(isFunction, isFalsy),\n        limit: or(isUndefined, isNumber, isFunction)\n    }))\n]);\n\nlet iterateList = (domain, opts) => {\n    opts = initOpts(opts, domain);\n\n    let rets = opts.def;\n    let count = 0; // iteration times\n\n    if (isReadableStream(domain)) {\n        let index = -1;\n\n        return new Promise((resolve, reject) => {\n            domain.on('data', (chunk) => {\n                // TODO try cache error\n                let itemRet = iterateItem(chunk, domain, ++index, count, rets, opts);\n                rets = itemRet.rets;\n                count = itemRet.count;\n                if (itemRet.stop) {\n                    resolve(rets);\n                }\n            });\n            domain.on('end', () => {\n                resolve(rets);\n            });\n            domain.on('error', (err) => {\n                reject(err);\n            });\n        });\n    } else if (likeArray(domain)) {\n        for (let i = 0; i < domain.length; i++) {\n            let item = domain[i];\n            let itemRet = iterateItem(item, domain, i, count, rets, opts);\n            rets = itemRet.rets;\n            count = itemRet.count;\n            if (itemRet.stop) return rets;\n        }\n    } else if (isObject(domain)) {\n        for (let name in domain) {\n            let item = domain[name];\n            let itemRet = iterateItem(item, domain, name, count, rets, opts);\n            rets = itemRet.rets;\n            count = itemRet.count;\n            if (itemRet.stop) return rets;\n        }\n    }\n\n    return rets;\n};\n\nlet initOpts = (opts, domain) => {\n    let {\n        predicate, transfer, output, limit\n    } = opts;\n\n    opts.predicate = predicate || truthy;\n    opts.transfer = transfer || id;\n    opts.output = output || toList;\n    if (limit === undefined) limit = domain && domain.length;\n    limit = opts.limit = stopCondition(limit);\n    return opts;\n};\n\nlet iterateItem = (item, domain, name, count, rets, {\n    predicate, transfer, output, limit\n}) => {\n    if (limit(rets, item, name, domain, count)) {\n        // stop\n        return {\n            stop: true,\n            count,\n            rets\n        };\n    }\n\n    if (predicate(item)) {\n        rets = output(rets, transfer(item, name, domain, rets), name, domain);\n        count++;\n    }\n    return {\n        stop: false,\n        count,\n        rets\n    };\n};\n\nlet stopCondition = (limit) => {\n    if (isUndefined(limit)) {\n        return falsy;\n    } else if (isNumber(limit)) {\n        return (rets, item, name, domain, count) => count >= limit;\n    } else {\n        return limit;\n    }\n};\n\nlet toList = (prev, v) => {\n    prev.push(v);\n    return prev;\n};\n\nlet truthy = () => true;\n\nlet falsy = () => false;\n\nlet id = v => v;\n\nmodule.exports = {\n    iterate\n};\n","'use strict';\n\nmodule.exports = {\n    WAIT: 2,\n    MATCH: 1,\n    QUIT: 0\n};\n","'use strict';\n\nlet {\n    QUIT, WAIT, MATCH\n} = require('./const');\n\nlet stateGraphDSL = require('./stateGraphDSL');\n\nconst START_STATE = '__start__state__';\n\nlet fsm = (stateMap) => {\n    // parse stateMap\n    let {\n        transitions, acceptStateMap\n    } = stateGraphDSL.transitionMaper(\n        stateGraphDSL.g(START_STATE,\n            stateGraphDSL.c(null, stateMap)));\n\n    let dfa = new DFA(transitions, acceptStateMap);\n\n    // matching function\n    return (letter) => {\n        return dfa.transit(letter);\n    };\n};\n\nlet DFA = function(stateMap, acceptStateMap) {\n    this.currentState = START_STATE;\n    this.stateMap = stateMap;\n    this.acceptStateMap = acceptStateMap;\n};\n\nlet proto = DFA.prototype;\n\nproto.transit = function(letter) {\n    let subMap = this.stateMap[this.currentState];\n    if (!subMap) return {\n        type: QUIT,\n        state: this.currentState\n    };\n\n    // transit to target state\n    let targetState = subMap(letter);\n\n    if (stateGraphDSL.isEpsilonTransition(targetState)) {\n        this.currentState = targetState.state; // epsilon transition\n        return this.transit(letter);\n    }\n\n    if (targetState === undefined) {\n        return {\n            type: QUIT,\n            state: this.currentState\n        };\n    }\n\n    this.currentState = targetState;\n    if (this.acceptStateMap[targetState]) return {\n        type: MATCH,\n        state: this.currentState\n    };\n\n    return {\n        type: WAIT,\n        state: this.currentState\n    };\n};\n\nmodule.exports = {\n    fsm,\n    stateGraphDSL,\n    DFA,\n    QUIT,\n    WAIT,\n    MATCH\n};\n","'use strict';\n\nlet {\n    isObject\n} = require('basetype');\n\n/**\n * basic action types and compose actions\n *\n * action = {\n *   actionType\n * }\n */\n\nconst __basic_action_type__ = '7e942534-ea8b-4c75-90fd-705aec328d00';\n\nconst LEFT_TYPE = 'left',\n    RANGE_TYPE = 'range',\n    UNION_TYPE = 'union',\n    NORMAL_TYPE = 'normal',\n    EPSILON_TYPE = 'epsilon';\n\nlet toAction = (v) => {\n    if (isAction(v)) return v;\n    if (v === null) return {\n        content: v,\n        actionType: EPSILON_TYPE,\n        __basic_action_type__\n\n    };\n    return {\n        content: v,\n        actionType: NORMAL_TYPE,\n        __basic_action_type__\n    };\n};\n\nlet left = () => {\n    return {\n        actionType: LEFT_TYPE,\n        __basic_action_type__\n    };\n};\n\nlet range = (start, end) => {\n    return {\n        actionType: RANGE_TYPE,\n        start,\n        end,\n        __basic_action_type__\n    };\n};\n\n// union two actions to get a new action\nlet union = (...actions) => {\n    for (let i = 0; i < actions.length; i++) {\n        let action = actions[i];\n        if (!isAction(action)) {\n            actions[i] = toAction(action);\n        }\n    }\n\n    return {\n        actionType: UNION_TYPE,\n        actions,\n        __basic_action_type__\n    };\n};\n\nlet isAction = (v) => {\n    return isObject(v) && v.__basic_action_type__ === __basic_action_type__;\n};\n\nlet isLeftAction = (v) => isAction(v) && v.actionType === LEFT_TYPE;\n\nlet isRangeAction = (v) => isAction(v) && v.actionType === RANGE_TYPE;\n\nlet isUnionAction = (v) => isAction(v) && v.actionType === UNION_TYPE;\n\nlet isNormalAction = (v) => isAction(v) && v.actionType === NORMAL_TYPE;\n\nlet isEpsilonAction = (v) => isAction(v) && v.actionType === EPSILON_TYPE;\n\nmodule.exports = {\n    isAction,\n    isLeftAction,\n    isRangeAction,\n    isUnionAction,\n    isNormalAction,\n    isEpsilonAction,\n\n    left,\n    range,\n    toAction,\n    union\n};\n","'use strict';\n\nlet {\n    isString, isObject\n} = require('basetype');\n\nlet actionDSL = require('./actionDSL');\n\nlet {\n    toAction\n} = actionDSL;\n\nlet {\n    mergeMap\n} = require('bolzano');\n\n/**\n * graph definition DSL\n *\n * state    action\n *\n * transition: (startState, action, nextState)\n *\n */\n\n/**\n * graph(s1,\n *     connect(a1, graph(s2,\n *         connect(a3, s4),\n *         connect(a4, s5)\n *     )),\n *\n *     connect(a2, s3)\n *  )\n */\n\nlet count = 0;\nlet autoGraphState = () => {\n    return `__auto_state_name_${count++}`;\n};\n\n/**\n * graph data = {\n *    transitions: [\n *      [action, nextGraph]\n *    ],\n *    state\n * }\n */\nlet graph = (...args) => {\n    let state = null,\n        lines = null;\n\n    if (isString(args[0])) {\n        state = args[0];\n        lines = args.slice(1);\n    } else {\n        state = autoGraphState();\n        lines = args;\n    }\n\n    let transitionMap = {};\n\n    transitionMap[state] = [];\n\n    for (let i = 0; i < lines.length; i++) {\n        let {\n            action, nextGraph\n        } = lines[i];\n\n        let nextState = isString(nextGraph) ? nextGraph : nextGraph.state;\n\n        transitionMap[state].push({\n            action,\n            state: nextState\n        });\n\n        // merge transitionMap\n        for (let name in nextGraph.transitionMap) {\n            if (transitionMap[name]) {\n                throw new Error(`repeated state name for different state, name is ${name}`);\n            }\n            transitionMap[name] = nextGraph.transitionMap[name];\n        }\n    }\n\n    return {\n        state,\n        transitionMap\n    };\n};\n\nlet connect = (action, nextGraph) => {\n    action = toAction(action);\n    if(!nextGraph) nextGraph = autoGraphState();\n    return {\n        action,\n        nextGraph\n    };\n};\n\n/**\n * circle: repeat at least 0 times\n */\nlet circle = (action, nextGraph) => {\n    let stateName = autoGraphState();\n\n    return graph(stateName,\n        connect(action, stateName),\n        connect(null, nextGraph)\n    );\n};\n\nlet repeat = (action, times, nextGraph) => {\n    let args = [];\n    for (let i = 0; i < times; i++) {\n        args.push(action);\n    }\n    args.push(nextGraph);\n\n    return sequence(...args);\n};\n\nlet sequence = (...args) => {\n    let actions = args.slice(0, -1);\n    let nextGraph = args[args.length - 1];\n    let action = actions[0];\n    if (actions.length <= 1) {\n        return connect(action, nextGraph);\n    }\n\n    let nexts = actions.slice(1).concat([nextGraph]);\n\n    return connect(action, graph(sequence(...nexts)));\n};\n\nlet isEpsilonTransition = (v) => {\n    return isObject(v) && v.type === 'deliver';\n};\n\nmodule.exports = mergeMap(actionDSL, {\n    graph,\n    connect,\n\n    repeat,\n    sequence,\n\n    circle,\n\n    isEpsilonTransition\n});\n","'use strict';\n\nlet actionDSL = require('./actionDSL');\n\nlet {\n    isNormalAction, isRangeAction, isUnionAction, isLeftAction, isEpsilonAction\n} = actionDSL;\n\nlet {\n    graph,\n    connect,\n\n    repeat,\n    sequence,\n\n    circle,\n\n    isEpsilonTransition\n} = require('./graphDSL');\n\nlet {\n    mergeMap\n} = require('bolzano');\n\nlet transitionMaper = (graph) => {\n    let transitions = {};\n    let {\n        transitionMap\n    } = graph;\n\n    let accepts = getEndStates(graph);\n\n    let leftMap = getLeftActionMap(transitionMap);\n    let epsilonMap = getEpsilonActionMap(transitionMap);\n\n    for (let stateName in transitionMap) {\n        let transitList = transitionMap[stateName];\n\n        transitions[stateName] = (letter) => {\n            for (let i = transitList.length - 1; i >= 0; i--) {\n                let {\n                    state, action\n                } = transitList[i];\n\n                if (matchAction(action, letter)) return state;\n            }\n\n            // check rest\n            if (leftMap[stateName]) return leftMap[stateName];\n\n            if (epsilonMap[stateName]) {\n                return {\n                    type: 'deliver',\n                    state: epsilonMap[stateName]\n                };\n            }\n        };\n    }\n\n    return {\n        transitions,\n        acceptStateMap: getAcceptStateMap(epsilonMap, accepts)\n    };\n};\n\n/**\n * a end state's out-degree = 0\n */\nlet getEndStates = (graph) => {\n    let outDegreeMap = getOutDegreeMap(graph);\n    let ends = [];\n    for (let name in outDegreeMap) {\n        if (outDegreeMap[name] === 0) {\n            ends.push(name);\n        }\n    }\n\n    return ends;\n};\n\nlet getOutDegreeMap = (graph) => {\n    let outDegreeMap = {};\n    let {\n        transitionMap\n    } = graph;\n    for (let stateName in transitionMap) {\n        let transitList = transitionMap[stateName];\n        outDegreeMap[stateName] = transitList.length;\n        for (let i = 0; i < transitList.length; i++) {\n            let {\n                state\n            } = transitList[i];\n            outDegreeMap[state] = outDegreeMap[state] || 0;\n        }\n    }\n\n    return outDegreeMap;\n};\n\n/**\n * epsilon chain\n */\nlet getAcceptStateMap = (epsilonMap, accepts) => {\n    let acceptStateMap = {};\n\n    let reverseEpsilonMap = {};\n    for (let name in epsilonMap) {\n        let tar = epsilonMap[name];\n        reverseEpsilonMap[tar] = reverseEpsilonMap[tar] || [];\n        reverseEpsilonMap[tar].push(name);\n    }\n\n    for (let i = 0; i < accepts.length; i++) {\n        let accept = accepts[i];\n        acceptStateMap[accept] = true;\n    }\n\n    let count = 0;\n\n    while (true) { // eslint-disable-line\n        let prevCount = count;\n\n        for (let name in acceptStateMap) {\n            let list = reverseEpsilonMap[name];\n            if (list) {\n                for (let j = 0; j < list.length; j++) {\n                    if (!acceptStateMap[list[j]]) {\n                        acceptStateMap[list[j]] = true;\n                        count++;\n                    }\n                }\n            }\n        }\n\n        if (count === prevCount) { // no more\n            break;\n        }\n    }\n\n    return acceptStateMap;\n};\n\nlet matchAction = (action, letter) => {\n    if (isNormalAction(action) && action.content === letter) return true;\n    if (isRangeAction(action) && action.start <= letter && letter <= action.end) return true;\n    if (isUnionAction(action)) {\n        let {\n            actions\n        } = action;\n\n        for (let i = 0; i < actions.length; i++) {\n            if (matchAction(actions[i], letter)) return true;\n        }\n    }\n\n    return false;\n};\n\nlet getEpsilonActionMap = (transitionMap) => {\n    let map = {};\n\n    for (let stateName in transitionMap) {\n        let transitList = transitionMap[stateName];\n        let tarState = findActionState(transitList, isEpsilonAction);\n        if (tarState) {\n            map[stateName] = tarState;\n        }\n    }\n\n    return map;\n};\n\nlet getLeftActionMap = (transitionMap) => {\n    let map = {};\n    for (let stateName in transitionMap) {\n        let transitList = transitionMap[stateName];\n        let tarState = findActionState(transitList, isLeftAction);\n        if (tarState) {\n            map[stateName] = tarState;\n        }\n    }\n    return map;\n};\n\nlet findActionState = (transitList, type) => {\n    for (let i = transitList.length - 1; i >= 0; i--) {\n        let {\n            action, state\n        } = transitList[i];\n        if (containActionType(action, type)) {\n            return state;\n        }\n    }\n};\n\nlet containActionType = (action, type) => {\n    if (isUnionAction(action)) {\n        let {\n            actions\n        } = action;\n\n        for (let i = 0; i < actions.length; i++) {\n            if (containActionType(actions[i], type)) return true;\n        }\n    } else {\n        return type(action);\n    }\n\n    return false;\n};\n\nmodule.exports = mergeMap(actionDSL, {\n    graph,\n    connect,\n\n    transitionMaper,\n    repeat,\n    sequence,\n\n    circle,\n\n    isEpsilonTransition,\n\n    g: graph, c: connect\n});\n","'use strict';\n\nlet shadowFrame = require('./lib/shadowFrame');\n\nlet startMomenter = require('./lib/startMomenter.js');\n\nlet getX = (elem) => {\n    var x = 0;\n    while (elem) {\n        x = x + elem.offsetLeft;\n        elem = elem.offsetParent;\n    }\n    return x;\n};\n\nlet getY = (elem) => {\n    var y = 0;\n    while (elem) {\n        y = y + elem.offsetTop;\n        elem = elem.offsetParent;\n    }\n    return y;\n};\n\nlet getClientX = (elem) => {\n    return getX(elem) - window.scrollX;\n};\n\nlet getClientY = (elem) => {\n    return getY(elem) - window.scrollY;\n};\n\nlet removeChilds = (node) => {\n    while (node && node.firstChild) {\n        node.removeChild(node.firstChild);\n    }\n};\n\nlet once = (node, type, handler, useCapture) => {\n    let fun = function(e) {\n        let ret = handler.apply(this, [e]);\n        node.removeEventListener(type, fun, useCapture);\n        return ret;\n    };\n\n    node.addEventListener(type, fun, useCapture);\n};\n\nlet getAttributeMap = (attributes = []) => {\n    let map = {};\n    for (let i = 0; i < attributes.length; i++) {\n        let {\n            name, value\n        } = attributes[i];\n        map[name] = value;\n    }\n    return map;\n};\n\nlet getClasses = (clz = '') => {\n    let ret = [];\n    let items = clz.split(' ');\n    for (let i = 0; i < items.length; i++) {\n        let item = items[i];\n        item = item.trim();\n        if (item) {\n            ret.push(item);\n        }\n    }\n    return ret;\n};\n\nmodule.exports = {\n    getX,\n    getY,\n    getClientX,\n    getClientY,\n    removeChilds,\n    once,\n    shadowFrame,\n    getAttributeMap,\n    startMomenter,\n    getClasses\n};\n","'use strict';\n\nlet shadowFrame = () => {\n    let div = document.createElement('div');\n    let sr = div.createShadowRoot();\n    sr.innerHTML = '<div id=\"shadow-page\"></div>';\n\n    let frame = null;\n\n    let create = () => {\n        let html = document.getElementsByTagName('html')[0];\n        html.appendChild(div);\n\n        return sr.getElementById('shadow-page');\n    };\n\n    let start = () => {\n        if (frame) {\n            return frame;\n        }\n        frame = new Promise(resolve => {\n            if (document.body) {\n                resolve(create());\n            } else {\n                document.addEventListener('DOMContentLoaded', () => {\n                    resolve(create());\n                });\n            }\n        });\n        return frame;\n    };\n\n    let close = () => {\n        frame.then(() => {\n            let parent = div.parentNode;\n            parent && parent.removeChild(div);\n        });\n    };\n\n    return {\n        start,\n        close,\n        sr,\n        rootDiv: div\n    };\n};\n\nmodule.exports = shadowFrame;\n","'use strict';\n\nlet isDomReady = (doc) => doc.readyState === 'complete' ||\n    (!doc.attachEvent && doc.readyState === 'interactive');\n\nlet startMomenter = (doc = document) => {\n    let loadedFlag = false;\n\n    let resolves = [];\n\n    let docReady = () => {\n        let ready = () => {\n            if (loadedFlag) return;\n            loadedFlag = true;\n            for (let i = 0; i < resolves.length; i++) {\n                resolves[i]();\n            }\n            resolves = [];\n        };\n        if (doc.addEventListener) {\n            doc.addEventListener('DOMContentLoaded', ready);\n            doc.addEventListener('DOMContentLoaded', ready);\n        } else {\n            doc.attachEvent('onreadystatechange', () => {\n                if (document.readyState === 'complete') {\n                    ready();\n                }\n            });\n        }\n    };\n\n    docReady();\n\n    // generalWaitTime is used for async rendering\n    return ({\n        generalWaitTime = 0, startTimeout = 10000\n    } = {}) => new Promise((resolve, reject) => {\n        if (loadedFlag || isDomReady(doc)) { // already ready\n            setTimeout(resolve, generalWaitTime);\n        } else { // wait for ready\n            resolves.push(resolve);\n            setTimeout(() => {\n                reject(new Error('timeout'));\n            }, startTimeout);\n        }\n    });\n};\n\nmodule.exports = startMomenter;\n","/**\n * @readme-doc\n *\n * ## features\n *\n *  Front end framework, which provides:\n *\n *   - View definition DSL, data & view auto binding\n *\n *   - Signal Handler DSL, Request DSL\n *\n *     signal system\n *\n *     simple DSL to update page\n *\n *     simple DSL to request and response data\n *\n *   - common views\n *\n *   - theme system\n *\n *   - skelton tools\n *\n *   - other tools\n *\n * ## document site\n *\n *  [http://lovekino.github.io/project/kabanery-lumine/index.html](http://lovekino.github.io/project/kabanery-lumine/index.html)\n *\n */\n\nmodule.exports = require('./lib');\n","'use strict';\n\nconst KABANERY_DO_RENDER = 'kabanery_do_render';\n\nconst baseSignalActionMap = {\n  [KABANERY_DO_RENDER]: [{\n    type: 'updateState',\n    content: ''\n  }]\n};\n\nlet wrapBaseSignalActions = (signalActionMap) => {\n  for (let name in signalActionMap) {\n    let pageSignalActionMap = signalActionMap[name];\n\n    for (let cname in baseSignalActionMap) {\n      if (!pageSignalActionMap[cname]) {\n        pageSignalActionMap[cname] = baseSignalActionMap[cname];\n      }\n    }\n  }\n\n  return signalActionMap;\n};\n\nmodule.exports = {\n  KABANERY_DO_RENDER,\n  wrapBaseSignalActions\n};\n","'use strict';\n\nconst lumineView = require('./util/lumineView');\nconst n = require('./util/n');\nconst {mount} = require('kabanery');\nconst {Signal, onSignalType, deliver} = require('lumine-signal');\n\nmodule.exports = {\n  lumineView,\n  n,\n  mount,\n  Signal,\n  onSignalType,\n  deliver\n};\n","'use strict';\n\nconst {\n  router,\n  queryPager\n} = require('kabanery-spa');\nconst {\n  mount\n} = require('kabanery');\nconst n = require('../util/n');\nconst pfcApis = require('../request/pfcApis');\nconst {\n  signalActionFlow\n} = require('kabanery-signal-flow');\nconst {\n  Signal\n} = require('lumine-signal');\nconst {\n  wrapPagePropsWithStore\n} = require('../store/storeProps');\n\nconst PAGE_RENDER_SIGNAL = 'kabanery_page_render';\n\nconst SPA = ({\n  // fo pfc apis\n  apiPath = '/api/pfc',\n  apiStub = {},\n\n  runApi,\n  apiMap,\n\n  containerId = 'pager',\n\n  // page configs\n  pageViewMap = {},\n  pageSignalActionMap = {},\n  pageOptionsMap = {},\n\n  // variabel map for page signal action\n  signalVariableMap,\n  signalVariableStub,\n  signalOnError,\n\n  defaultPage,\n  pagerContainer // default document.body\n}) => {\n  let pageEnv = {};\n\n  if (runApi) {\n    pageEnv.runApi = runApi;\n    pageEnv.apiMap = apiMap;\n  } else { // default usage\n    // TODO validate params\n    let apier = pfcApis(apiPath, apiStub);\n    pageEnv.runApi = apier.runApi;\n    pageEnv.apiMap = apier.apiMap;\n  }\n\n  // create page map\n  let pageMap = {};\n  let currentCtx = {};\n\n  for (let name in pageViewMap) {\n    let pageOptions = pageOptionsMap[name] || {};\n    let PageView = pageViewMap[name];\n    let signalActionMap = pageSignalActionMap[name] || {};\n    pageMap[name] = {\n      title: pageOptions.title || name,\n      render: (pageEnv) => {\n        let pageView = page(pageEnv, PageView, signalActionMap, pageOptions, {\n          variableMap: signalVariableMap,\n          variableStub: signalVariableStub,\n          onError: signalOnError\n        });\n\n        currentCtx = pageView.ctx;\n        return pageView;\n      }\n    };\n  }\n\n  mount(n(`div id=\"${containerId}\"`), pagerContainer || document.body); // pager as container\n\n  let {\n    forward,\n    redirect,\n    reload\n  } = router(\n    // pages\n    queryPager(pageMap, defaultPage || Object.keys(pageMap)[0]),\n\n    // page env\n    pageEnv,\n\n    {\n      containerId\n    });\n\n  pageEnv.forward = forward;\n  pageEnv.redirect = redirect;\n  pageEnv.reload = reload;\n\n  forward(window.location.href);\n\n  return {\n    getCurrentPageCtx: () => {\n      return currentCtx;\n    },\n\n    getPageEnv: () => {\n      return pageEnv;\n    }\n  };\n};\n\nconst page = (pageEnv, PageView, signalActionMap, {\n  localStateStore = false,\n  localStateStoreWhiteList = []\n} = {}, {\n  variableMap,\n  variableStub,\n  onError\n} = {}) => {\n  let props = {\n    onsignal: signalActionFlow(signalActionMap, pageEnv, {\n      variableMap,\n      variableStub,\n      onError\n    })\n  };\n\n  if (localStateStore) {\n    props = wrapPagePropsWithStore(props, {\n      whiteList: localStateStoreWhiteList\n    });\n  }\n\n  let pageView = n(PageView, props);\n\n  pageView.ctx.notify(Signal(PAGE_RENDER_SIGNAL));\n\n  return pageView;\n};\n\nmodule.exports = {\n  SPA,\n  page\n};\n","'use strict';\n\nconst lumineView = require('../util/lumineView');\nconst n = require('../util/n');\nconst PageLoading = require('../view/loading/pageLoading');\nconst Notice = require('../view/notice/notice');\nconst {\n  syncBindWithKeyMap\n} = require('../util/compose');\nconst Full = require('../view/layout/full');\n\n/**\n *\n * define a simple page view class, which contains page loading and notice.\n */\n\nmodule.exports = (PageView) => {\n  return lumineView((state, ctx) => {\n    const oldOnSignal = state.props.onsignal;\n\n    state.props.onsignal = (signal, viewState) => {\n      // sync state\n      state.props = viewState.props;\n      state.children = viewState.children;\n\n      oldOnSignal && oldOnSignal(signal, state, ctx);\n    };\n\n    return n(Full, {\n      style: state.props.style.container\n    }, [\n      n(PageLoading,\n        syncBindWithKeyMap(ctx, {\n          'loading.show': 'show'\n        }, {\n          bindedProps: {\n            style: state.props.style.loading\n          }\n        })),\n\n      n(Notice, syncBindWithKeyMap(\n        ctx, {\n          'notice.show': 'show',\n          'notice.text': 'text'\n        }, {\n          bindedProps: {\n            style: state.props.style.notice\n          }\n        })),\n\n      n(PageView, state.props, state.children)\n    ]);\n  }, {\n    defaultProps: {\n      // loading in page level\n      loading: {\n        show: false\n      },\n      // notice window\n      notice: {\n        show: false,\n        text: ''\n      },\n\n      style: {\n        container: {},\n        loading: {\n          zIndex: 10000\n        },\n        notice: {}\n      }\n    }\n  });\n};\n","'use strict';\n\nlet stubAsApis = require('pfc-compiler/lib/stubAsApis');\nlet pfcRequestor = require('./pfcRequestor');\n\nmodule.exports = (apiPath, stub) => {\n  let pfcRequest = pfcRequestor(apiPath);\n  let apis = stubAsApis(stub);\n\n  let apiMap = {};\n\n  for (let name in apis) {\n    let api = apis[name];\n    if (typeof api === 'function') {\n      apiMap[name] = (...params) => {\n        let lazy = () => {\n          // resolve params first\n          let paramValues = [];\n          for (let i = 0; i < params.length; i++) {\n            let param = params[i];\n            if (isLazyFun(param)) {\n              paramValues.push(param());\n            } else {\n              paramValues.push(param);\n            }\n          }\n\n          return api(...paramValues);\n        };\n\n        lazy.tag = 'lazy';\n\n        return lazy;\n      };\n    } else {\n      apiMap[name] = api;\n    }\n  }\n\n  let runApi = (exp) => {\n    try {\n      if (isLazyFun(exp)) {\n        exp = exp();\n      }\n      return pfcRequest(exp.code);\n    } catch (err) {\n      return Promise.reject(err);\n    }\n  };\n\n  return {\n    apiMap,\n    runApi\n  };\n};\n\nlet isLazyFun = (f) => {\n  return typeof f === 'function' && f.tag === 'lazy';\n};\n","'use strict';\n\nlet requestor = (apiPath = '/api/pfc') => (pfcCode) => {\n  return new Promise((resolve, reject) => {\n    let xhr = new XMLHttpRequest();\n\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState === XMLHttpRequest.DONE) {\n        if (xhr.status === 200) {\n          let {\n            errno,\n            errMsg,\n            data\n          } = JSON.parse(xhr.responseText);\n          if (errno === 0) {\n            resolve(data);\n          } else {\n            reject(new Error((errMsg.split(':')[1] || '').trim()));\n          }\n        } else {\n          reject(new Error(`status code is ${xhr.status}`));\n        }\n      }\n    };\n\n    xhr.open('post', apiPath);\n    xhr.send(pfcCode);\n  });\n};\n\nmodule.exports = requestor;\n","'use strict';\n\nlet querystring = require('querystring');\n\nlet helper = require('../util/helper');\n\n// TODO opt performance\n// TODO avoid save theme\n// TODO expire time\n\nlet pagePropsStore = (options = {}) => {\n  let {version = 1.0} = options;\n\n  let key = options.key || getDefaultKey(options);\n\n  let set = (props) => {\n    let attributes = options.whiteList || [];\n\n    localStorage[key] = JSON.stringify({\n      version,\n      props : attributes.reduce(\n        (prev, attribute) => {\n          helper.set(prev, attribute, helper.get(props, attribute));\n          return prev;\n        },\n        {})\n    });\n  };\n\n  let get = (originProps = {}) => {\n    let dataStr = localStorage[key];\n    if (!dataStr)\n      return responseOriginProps(originProps);\n\n    try {\n      let data = JSON.parse(dataStr);\n      if (data.version < version) {\n        return responseOriginProps(originProps);\n      } else if (data.version < version) {\n        console.error(\n          `unexpected situation happened, storaged data version is bigger than current version. Storaged data version is ${\n            data.version\n          }. Current version is ${\n            version\n                                                                                                                                                 }.`); // eslint-disable-line\n        return responseOriginProps(originProps);\n      } else {\n        // merge dataProps and stored props\n        return helper.deepMergeMap(originProps, data.props);\n      }\n    } catch (err) {\n      return responseOriginProps(originProps);\n    }\n  };\n\n  let responseOriginProps = (originProps) => {\n    set(originProps);\n    return originProps;\n  };\n\n  return {get, set};\n};\n\nlet getDefaultKey =\n    ({pageQueryKey = 'page'} = {}) => { // key should reflect a page\n      let key = `${document.title}-${window.location.pathname}`;\n\n      let obj = querystring.parse(window.location.search.substring(1));\n\n      if (obj && obj[pageQueryKey] !== undefined) {\n        key = `${key}?page=${obj[pageQueryKey]}`;\n      }\n\n      return key;\n    };\n\nlet wrapPagePropsWithStore = (props, options = {}) => {\n  let {get, set} = pagePropsStore(options);\n\n  let originOnsignal = props.onsignal;\n\n  props.onsignal = (signal, data, ctx) => {\n    if (options.signalTypes) {\n      if (options.signalTypes.findIndex((type) => signal.type === type) !==\n          -1) {\n        set(data.props);\n      }\n    } else {\n      set(data.props);\n    }\n    return originOnsignal && originOnsignal(signal, data, ctx);\n  };\n\n  return get(props);\n};\n\nmodule.exports = {\n  pagePropsStore,\n  wrapPagePropsWithStore\n};\n","module.exports = (basics) => {\n  return {\n    hover: {\n      backgroundColor: basics.hoverColor\n    },\n\n    active: {\n      backgroundColor: basics.hoverColor\n    },\n\n    focus: {\n      outline: 'none'\n    },\n\n    flatHover: {\n      color: basics.hoverColor\n    },\n\n    flatActive: {\n      color: basics.hoverColor\n    }\n  };\n};\n","'use strict';\n\nlet {\n  styles\n} = require('../../util/helper');\n\nlet layout = require('./layout');\n\nlet {\n  container\n} = layout;\n\nmodule.exports = (basics) => {\n  let bulk = styles(container, {\n    minWidth: 40,\n    backgroundColor: basics.blockColor,\n    color: basics.fontColor\n  });\n\n  let contrastBulk = styles(bulk, {\n    backgroundColor: basics.contrastBlockColor,\n    color: basics.contrastFontColor\n  });\n\n  let oneLineBulk = styles(bulk, {\n    padding: basics.narrowPadding,\n    fontSize: basics.normalSize,\n    textAlign: 'center',\n    lineHeight: 20,\n    textDecoration: 'none',\n    border: 'none',\n    color: basics.fontColor\n  });\n\n  let flatOneLineBulk = styles(oneLineBulk, {\n    display: 'inline-block',\n    backgroundColor: basics.contrastBlockColor,\n    color: basics.blockColor\n  });\n\n  let modalBulk = styles(oneLineBulk, contrastBulk, {\n    display: 'inline-block',\n    boxShadow: `3px 3px 5px ${basics.shadowColor}`\n  });\n\n  return {\n    bulk,\n    contrastBulk,\n    oneLineBulk,\n    modalBulk,\n    flatOneLineBulk\n  };\n};\n","'use strict';\n\nlet layout = require('./layout');\nlet Bulk = require('./bulk');\nlet Actions = require('./actions');\nlet Widget = require('./widget');\n\nmodule.exports = (basics, custom = {}) => {\n  let bulks = Bulk(basics);\n  let actions = Actions(basics);\n  let widgets = Widget(basics, layout, bulks);\n\n  if (typeof custom === 'function') {\n    custom = custom(basics, layout, bulks);\n  }\n\n  bulks = Object.assign(bulks, custom.bulks || {});\n  actions = Object.assign(actions, custom.actions || {});\n  widgets = Object.assign(widgets, custom.widgets || {});\n\n  return Object.assign({\n    basics,\n    actions\n  }, layout, bulks, actions, widgets);\n};\n","'use strict';\n\nlet {\n  styles\n} = require('../../util/helper');\n\nlet container = {\n  position: 'relative',\n  boxSizing: 'border-box',\n  margin: 0,\n  padding: 0,\n  border: 0,\n  borderRadius: 0,\n  overflow: 'auto'\n};\n\nlet fullParentHeight = {\n  height: '100%'\n};\n\nlet fullParentWidth = {\n  width: '100%'\n};\n\nlet fullWindow = styles(container, {\n  position: 'fixed',\n  left: 0,\n  top: 0,\n},\nfullParentWidth, fullParentHeight);\n\nlet fullParent = styles(container, fullParentWidth, fullParentHeight);\n\nlet flat = {\n  appearance: 'none',\n  '-webkit-appearance': 'none',\n  '-moz-appearance': 'none',\n  boxShadow: 'none',\n  borderRadius: 'none',\n  border: 0\n};\n\nmodule.exports = {\n  fullWindow,\n  fullParent,\n  fullParentWidth,\n  fullParentHeight,\n  container,\n  flat\n};\n","let {\n  styles\n} = require('../../util/helper');\n\nmodule.exports = (basics, layout, bulks) => {\n  let {\n    contrastBulk\n  } = bulks;\n  let {\n    flat\n  } = layout;\n\n  let cardBox = styles(contrastBulk, flat, {\n    border: `1px solid ${basics.shadowColor}`,\n    boxShadow: `3px 3px 5px ${basics.shadowColor}`,\n    borderRadius: 2\n  });\n\n  let inputBox = styles(contrastBulk, flat, {\n    width: 260,\n    padding: basics.narrowPadding,\n    backgroundColor: basics.fontColor\n  });\n\n  let textAreaBox = styles(inputBox, {\n    width: 360,\n    height: 200,\n    outline: 'none',\n    resize: 'none',\n    overflow: 'auto',\n    border: `1px solid ${basics.borderColor}`,\n    borderRadius: 5,\n    fontSize: 16\n  });\n\n  let underLineBorder = {\n    border: 0,\n    borderRadius: 0,\n    'border-bottom': `1px solid ${basics.borderColor}`\n  };\n\n  let underLineFocus = {\n    paddingBottom: basics.narrowPaddingBottom - 1,\n    'border-bottom': `2px solid ${basics.blockColor}`\n  };\n\n  let flatRippleMask = {\n    content: '',\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    width: 5,\n    height: 5,\n    backgroundColor: basics.halfBlockColor,\n    opacity: '0',\n    borderRadius: '100%',\n    transform: 'scale(1, 1) translate(-50%)',\n    transformOrigin: '50% 50%'\n  };\n\n  return {\n    inputBox,\n    textAreaBox,\n    underLineBorder,\n    underLineFocus,\n    flatRippleMask,\n    cardBox\n  };\n};\n","'use strict';\n\nlet base = require('../base');\n\nmodule.exports = base({\n  pageColor: 'white',\n  hoverColor: '#90CAF9',\n  blockColor: '#2196F3', // rgb(33,150,243)\n  borderColor: '#1565C0',\n  veilColor: 'rgba(125,125,125,0.6)',\n  fontColor: 'white',\n  noticeColor: 'rgb(2, 40, 51)',\n  shadowColor: 'rgba(100,100,100,0.2)',\n\n  // half\n  halfBlockColor: 'rgba(33,150,243,0.5)',\n\n  titleSize: 20,\n  normalSize: 16,\n\n  narrowPadding: '4 8 4 8',\n  narrowPaddingTop: 4,\n  narrowPaddingRight: 8,\n  narrowPaddingBottom: 4,\n  narrowPaddingLeft: 8,\n\n  narrowMargin: '4 8 4 8',\n\n  contrastBlockColor: 'white',\n  contrastFontColor: 'black'\n});\n","'use strict';\n\nconst {\n  isMapObject\n} = require('./helper');\n\nconst {\n  mount,\n  n,\n  parseStyle\n} = require('kabanery');\n\nconst VIEW_CLASS_PREFIX = 'kabanery-lumine';\n\nlet count = -1;\n\nmodule.exports = (classTable) => {\n  count++;\n\n  let viewClassId = `${VIEW_CLASS_PREFIX}-${count}`;\n\n  let getStyleRuleName = (name) => {\n    if (name[0] === '@') {\n      let prev = name.split(' ')[0];\n      let next = name.substring(prev.length).trim();\n      return `${prev} ${viewClassId}-${next}`;\n    } else {\n      return `.${viewClassId}-${name}`;\n    }\n  };\n\n  let appendStyle = () => {\n    if (styleCssRules) {\n      mount(n('style', {\n        id: viewClassId\n      }, styleCssRules), document.head);\n      styleCssRules = null;\n    }\n  };\n\n  let getClassName = (name) => {\n    if (name[0] === '@') {\n      let prev = name.split(' ')[0];\n      let next = name.substring(prev.length).trim();\n      name = next;\n    }\n\n    return `${viewClassId}-${name.split(':')[0]}`;\n  };\n\n  let updateClassTable = (newClassTable) => {\n    let node = document.getElementById(viewClassId);\n    if (node) {\n      node.parentNode.removeChild(node);\n    }\n\n    setStyleCssRules(newClassTable);\n    appendStyle();\n  };\n\n  let styleCssRules = null;\n\n  let setStyleCssRules = (classTable) => {\n    if (isMapObject(classTable)) {\n      styleCssRules = '';\n      for (let name in classTable) {\n        name = name.trim();\n        let styleRuleName = getStyleRuleName(name);\n        let classCnt = classTable[name];\n        if (typeof classCnt === 'function') {\n          classCnt = classCnt({\n            getClassName\n          });\n        }\n        let styleRuleContent = parseStyle(classCnt, {\n          valueWrapper: (value) => `${value !== ''? value: '\\'\\''} !important`\n        });\n        styleCssRules += `\\n${styleRuleName} {${styleRuleContent}}`;\n      }\n    }\n  };\n\n  setStyleCssRules(classTable);\n\n  return {\n    appendStyle,\n    getClassName,\n    updateClassTable\n  };\n};\n","'use strict';\n\nconst {\n  get,\n  set\n} = require('./helper');\n\nconst {\n  Signal\n} = require('lumine-signal');\n\nconst CHILD_SOURCE_TYPE = 'child';\n\nconst identity = v => v;\n\n/**\n * binding view with another view's props through a key map\n *\n * keyMap = {\n *    binderKey: bindedKey\n * }\n */\n\nlet syncBindWithKeyMap = (ctx, keyMap, {\n  bindedProps = {},\n  stopSignal,\n  autoUpdate = false,\n  updatedSignalTypes = null,\n  onChildSignal,\n  toBinded = identity,\n  toBinder = identity\n} = {}) => {\n  // TODO check\n\n  let mappings = [];\n  for (let binderKey in keyMap) {\n    mappings.push([binderKey, keyMap[binderKey]]);\n  }\n\n  let viewData = ctx.getData();\n\n  let onsignal = (signal, data, sourceCtx) => {\n    // when event happened, sync the data\n    mappings.forEach(([binderKey, bindedKey]) => {\n      let propValue = get(data.props, bindedKey); // get from child\n\n      // update props\n      viewData.props = set(viewData.props, binderKey, toBinder(propValue, binderKey, bindedKey)); // set for parent\n    });\n\n    // handle the signal if necessary\n    onChildSignal && onChildSignal(signal, data, sourceCtx);\n\n    if (!stopSignal) {\n      // pop up the signal, TODO wrap the sigal to resolve chain\n      ctx.notify(\n        Signal(signal.type, signal.data, {\n          sourceType: CHILD_SOURCE_TYPE,\n          keyMap,\n          sourceSignal: signal,\n          sourceData: data,\n          sourceCtx\n        })\n      );\n    }\n\n    if (autoUpdate) {\n      if (!updatedSignalTypes) {\n        ctx.update(); // update binder view\n      } else {\n        if (updatedSignalTypes.findIndex((type) => type === signal.type) !== -1) {\n          ctx.update(); // update binder view\n        }\n      }\n    }\n  };\n\n    // construct child props\n  let mapedPropsValue = mappings.reduce((prev, [binderKey, bindedKey]) => {\n    let propValue = get(viewData.props, binderKey); // get from binder\n    set(prev, bindedKey, toBinded(propValue, binderKey, bindedKey)); // set for binded\n    return prev;\n  }, {});\n\n\n  return Object.assign({\n    theme: viewData.props.theme // extend theme by default\n  }, bindedProps, mapedPropsValue, {\n    onsignal\n  });\n};\n\nmodule.exports = {\n  syncBindWithKeyMap\n};\n","'use strict';\n\nconst styles = (...styleObjects) => {\n  return Object.assign({}, ...styleObjects);\n};\n\nconst isMapObject = (v) => {\n  return v && typeof v === 'object' && !Array.isArray(v);\n};\n\nconst deepMergeMap = (tar, def, path = '', options = {}) => {\n  let blackList = options.blackList || [];\n  if (blackList.findIndex((item) => item === path) !== -1) {\n    return tar;\n  }\n  if (isMapObject(def)) {\n    tar = tar || {};\n    if (isMapObject(tar)) {\n      for (let name in def) {\n        tar[name] = deepMergeMap(tar[name], def[name], path === '' ? name : path + '.' + name, options);\n      }\n    }\n    return tar;\n  } else {\n    if (tar === undefined) return def;\n    return tar;\n  }\n};\n\nconst resolveFnValue = (fn, ...args) => {\n  if (typeof fn === 'function') {\n    return resolveFnValue(fn(...args));\n  }\n\n  return fn;\n};\n\nconst get = (obj, key = '') => {\n  key = key.trim();\n  let parts = !key ? [] : key.split('.');\n\n  let partLen = parts.length;\n  for (let i = 0; i < partLen; i++) {\n    let part = parts[i].trim();\n    if (part) {\n      obj = obj[part];\n    }\n  }\n\n  return obj;\n};\n\nconst set = (obj, key = '', value) => {\n  key = key.trim();\n\n  if (key === '' || key === '.') { // replace\n    return value;\n  } else {\n    let parts = !key ? [] : key.split('.');\n    if (!parts.length) return;\n    let parent = obj;\n\n    for (let i = 0; i < parts.length - 1; i++) {\n      let part = parts[i];\n      part = part.trim();\n      if (part) {\n        let next = parent[part];\n        if (!isObject(next)) {\n          next = {};\n          parent[part] = next;\n        }\n        parent = next;\n      }\n    }\n\n    parent[parts[parts.length - 1]] = value;\n  }\n\n  return obj;\n};\n\nconst isObject = (v) => v && typeof v === 'object';\n\nconst isString = (v) => typeof v === 'string';\n\nconst likeArray = (v) => v && typeof v === 'object' && typeof v.length === 'number';\n\nmodule.exports = {\n  styles,\n  isMapObject,\n  deepMergeMap,\n  resolveFnValue,\n  get,\n  set,\n  isObject,\n  likeArray,\n  isString\n};\n","'use strict';\n\nlet lumineViewer = require('./lumineViewer');\n\nmodule.exports = (viewFun, options) => lumineViewer(viewFun)(options);\n","'use strict';\n\nconst {\n  view,\n  parseArgs\n} = require('kabanery');\nconst steadyTheme = require('../theme/steady');\nconst {\n  deepMergeMap,\n  resolveFnValue\n} = require('./helper');\nconst ClassTable = require('./classTable');\nconst {\n  Signal,\n  pass\n} = require('lumine-signal');\nconst JsonTree = require('tree-script/lib/jsonTree');\nconst {\n  executeAST\n} = require('tree-script');\nconst n = require('./n');\nconst {\n  syncBindWithKeyMap\n} = require('./compose');\n\n/**\n * define the general interface for lumine view\n *\n * 1. unify view data structure\n *\n *    view data = {\n *       // public data\n *       props,\n *       children // child views\n *    }\n *\n *    props.onsigal\n *    props.theme\n *\n * 2. onsignal interface\n *\n *    onsignal: (signal, data, ctx) -> Any\n */\n\nmodule.exports = (viewFun) => ({\n  defaultProps = {},\n  defaultChildren = [],\n  theme = steadyTheme,\n  classTable\n} = {}) => {\n  let defaultStyle = defaultProps.style || {};\n\n  let defaultStyleValue = resolveFnValue(defaultStyle, theme);\n  let classTableValue = resolveFnValue(classTable, theme);\n\n  let {\n    appendStyle,\n    getClassName,\n    updateClassTable\n  } = ClassTable(classTableValue);\n\n  const component = view((viewData, ctx) => {\n    viewData.props = viewData.props || {};\n    viewData.children = (viewData.children && viewData.children.length) ? viewData.children : defaultChildren;\n    viewData.props.theme = viewData.props.theme || theme;\n\n    appendStyle();\n    // TODO check view Data\n\n    // update defaultStyleValue\n    if (viewData.props.theme && typeof defaultStyle === 'function') {\n      defaultStyleValue = resolveFnValue(defaultStyle, viewData.props.theme);\n    }\n\n    // update class table\n    if (viewData.theme && typeof classTable === 'function') {\n      classTableValue = resolveFnValue(classTable, viewData.props.theme);\n      updateClassTable(classTableValue);\n    }\n\n    // merge props (deep merge)\n    viewData.props.style = deepMergeMap(viewData.props.style, defaultStyleValue);\n    viewData.props = deepMergeMap(viewData.props, defaultProps);\n\n    ctx.getClassName = getClassName;\n\n    return viewFun(viewData, ctx);\n  });\n\n  // create a view instance\n  return (...args) => {\n    const viewNode = component(...args);\n    hookCtx(viewNode.ctx);\n    return viewNode;\n  };\n};\n\nconst hookCtx = (ctx) => {\n  // signal system\n  // TODO (signalType, data) => void\n  const notify = (signal) => {\n    const viewData = ctx.getData();\n    if (viewData.props.onsignal) {\n      let sig = signal;\n\n      // accept string directly as signal\n      if (typeof signal === 'string') {\n        sig = Signal(signal);\n      }\n\n      viewData.props.onsignal(sig, ctx.getData(), ctx);\n    }\n  };\n\n  const updateWithNotify = (signal, ...updateScript) => {\n    signal = signal || Signal('update-view-data');\n    ctx.update(...updateScript);\n    // notify\n    notify(signal);\n  };\n\n  ctx.notify = notify;\n  ctx.updateWithNotify = updateWithNotify;\n\n  // update with tree script\n  // TODO remove updateTree api\n  // @deprecated\n  ctx.updateTree = ({\n    ast,\n    variableStub\n  }, variableMap, signal) => {\n    signal = signal || Signal('update-view-data');\n\n    let viewDataTree = JsonTree(ctx.getData());\n\n    // update view data by running update script\n    executeAST(ast, {\n      queryByPath: viewDataTree.queryByPath,\n      setByPath: viewDataTree.setByPath,\n      removeByPath: viewDataTree.removeByPath,\n      appendByPath: viewDataTree.appendByPath,\n      variableMap,\n      variableStub\n    });\n\n    updateWithNotify(signal);\n  };\n\n  // binding n\n  ctx.bn = (bindingMap, options) => {\n    // TODO check bindingMap\n    return (...args) => {\n      let tagName = args[0];\n      let {\n        attributes,\n        childs\n      } = parseArgs(args, {\n        doParseStyle: false\n      });\n\n      return n(tagName, syncBindWithKeyMap(ctx, bindingMap, Object.assign({}, options, {\n        bindedProps: attributes\n      })), childs);\n    };\n  };\n\n  // pass\n  ctx.pass = (...args) => pass(ctx, ...args);\n};\n","'use strict';\n\nlet {\n  n,\n  parseArgs\n} = require('kabanery');\n\nmodule.exports = (...args) => {\n  let tagName = args[0];\n\n  if (typeof tagName === 'string') {\n    return n(...args);\n  } else { // regard as lumine view\n    let {\n      attributes,\n      childs\n    } = parseArgs(args, {\n      doParseStyle: false\n    });\n\n    return tagName({\n      props: attributes,\n      children: childs\n    });\n  }\n};\n","'use strict';\n\nlet {\n  parseStrToAst,\n  checkAST\n} = require('tree-script');\n\nlet compileTreeScript = (treeScriptCode, {\n  variableStub\n} = {}) => {\n  let ast = parseStrToAst(treeScriptCode);\n\n  if (variableStub) {\n    checkAST(ast, {\n      variableStub\n    });\n  }\n\n  return {\n    ast,\n    variableStub\n  };\n};\n\nmodule.exports = {\n  compileTreeScript\n};\n","'use strict';\n\nconst line = require('./line');\nconst {\n  n\n} = require('kabanery');\n\nmodule.exports = ({\n  length = 10,\n  bold = 1,\n  color = 'black',\n  angle = 0,\n  direction\n} = {}) => {\n  if (direction === 'left') {\n    angle = 45;\n  } else if (direction === 'top') {\n    angle = 135;\n  } else if (direction === 'right') {\n    angle = 225;\n  } else if (direction === 'bottom') {\n    angle = 315;\n  }\n  return n('div', {\n    style: {\n      display: 'inline-block',\n      transform: `rotate(${angle}deg)`\n    }\n  }, [\n    line({\n      color,\n      bold,\n      length\n    }),\n\n    n('div', {\n      style: {\n        marginLeft: length / 2 - bold / 2,\n        marginTop: -1 * length / 2 - bold / 2\n      }\n    }, [\n      line({\n        color,\n        bold,\n        length,\n        angle: 90\n      })\n    ])\n  ]);\n};\n","'use strict';\n\nconst {\n  n\n} = require('kabanery');\n\nmodule.exports = ({\n  color = 'black',\n  bold = 3,\n  length = 20,\n  direction = 'vertical',\n  angle = 0\n} = {}) => {\n  return direction === 'vertical' ?\n    n('div', {\n      style: {\n        width: bold,\n        height: length,\n        backgroundColor: color,\n        transform: `rotate(${angle}deg)`\n      }\n    }) : n('div', {\n      style: {\n        height: bold,\n        width: length,\n        backgroundColor: color,\n        transform: `rotate(${angle}deg)`\n      }\n    });\n};\n","'use strict';\n\nconst n = require('../../util/n');\nconst lumineView = require('../../util/lumineView');\n\nmodule.exports = lumineView(() => {\n  return n('div', {\n    style: {\n      width: 0,\n      height: 0\n    }\n  });\n});\n","'use strict';\n\nconst n = require('../../util/n');\nconst lumineView = require('../../util/lumineView');\nconst FoldArrow = require('./foldArrow');\n\nmodule.exports = lumineView(({\n  props,\n  children\n}, {\n  updateWithNotify\n}) => {\n  let Body = children[1];\n\n  let Head = n('div', {\n    onclick: () => {\n      updateWithNotify(null, 'props.hide', !props.hide);\n    },\n    style: props.style.title\n  }, [\n    props.arrow && n(FoldArrow, {\n      hide: props.hide\n    }),\n    children[0]\n  ]);\n\n  return n('div', {\n    style: props.style.container\n  }, [\n    Head, !props.hide && Body\n  ]);\n}, {\n  defaultProps: {\n    hide: false,\n    arrow: true,\n    style: {\n      container: {},\n      title: {\n        cursor: 'pointer'\n      }\n    }\n  }\n});\n","'use strict';\n\nconst {\n  n\n} = require('kabanery');\n\nconst angle = require('../cssShapes/angle');\nconst lumineView = require('../../util/lumineView');\n\nmodule.exports = lumineView(({\n  props\n}) => {\n  return n('span', {\n    style: {\n      display: 'inline-block',\n      padding: '0 8 0 8'\n    }\n  }, [angle({\n    direction: props.hide ? 'bottom' : 'top',\n    length: 5,\n    color: '#666666'\n  })]);\n}, {\n  defaultProps: {\n    hide: false\n  }\n});\n","'use strict';\n\nconst {\n  n\n} = require('kabanery');\nconst lumineView = require('../../util/lumineView');\nconst {\n  styles\n} = require('../../util/helper');\n\nmodule.exports = lumineView(({\n  props,\n  children\n}) => {\n  return n('div', {\n    style: props.style\n  }, children);\n}, {\n  defaultProps: {\n    style: (theme) => styles(theme.fullParent)\n  },\n\n  defaultChildren: ['']\n});\n","'use strict';\n\nconst {\n  n\n} = require('kabanery');\nconst lumineView = require('../../util/lumineView');\nconst {\n  styles\n} = require('../../util/helper');\nconst {\n  Signal\n} = require('lumine-signal');\n\nmodule.exports = lumineView(({\n  props,\n  children\n}, {\n  notify\n}) => {\n  return n('div', {\n    style: props.style,\n    onclick: () => {\n      notify(Signal('fullwindow-click'));\n    }\n  }, children);\n}, {\n  defaultProps: {\n    style: (theme) => {\n      return styles(theme.fullWindow);\n    }\n  },\n\n  defaultChildren: []\n});\n","'use strict';\n\nlet n = require('../../util/n');\nlet lumineView = require('../../util/lumineView');\n\nlet TextLoading = require('./textLoading');\nlet PageMask = require('../mask/pageMask');\nlet Empty = require('../empty/empty');\n\nmodule.exports = lumineView(({\n  props,\n  children\n}) => {\n  return props.show ? n(PageMask, {\n    style: props.style\n  }, children) : n(Empty);\n}, {\n  defaultProps: {\n    show: true,\n    style: {\n      textAlign: 'center'\n    }\n  },\n  defaultChildren: [n(TextLoading, {\n    style: {\n      position: 'relative',\n      top: '50%',\n      marginTop: -10\n    }\n  })]\n});\n","'use strict';\n\nlet n = require('../../util/n');\n\nlet lumineView = require('../../util/lumineView');\n\n// TODO easy disappear for loading view\nmodule.exports = lumineView(({\n  props\n}, {\n  getClassName\n}) => {\n  return props.show ? n('div', {\n    'class': getClassName('load-suffix'),\n    style: props.style\n  }, props.textPrefix) : n('div');\n}, {\n  defaultProps: {\n    textPrefix: 'loading',\n    show: true,\n    style: {\n      display: 'inline-block'\n    }\n  },\n\n  classTable: {\n    '@keyframes loading': `\n    0% {\n        content: \"\"\n    }\n    33% {\n        content: \".\"\n    }\n    67% {\n        content: \"..\"\n    }\n    100% {\n        content: \"...\"\n    }`,\n    'load-suffix::after': ({\n      getClassName\n    }) => {\n      return {\n        content: JSON.stringify('.'),\n        animation: `${getClassName('loading')} 3s infinite ease-in-out`\n      };\n    }\n  }\n});\n","'use strict';\n\nlet FullWindow = require('../layout/fullWindow');\nlet lumineView = require('../../util/lumineView');\nlet n = require('../../util/n');\n\nmodule.exports = lumineView(({\n  props,\n  children\n}) => {\n  return n(FullWindow, props, children);\n}, {\n  defaultProps: {\n    style: (theme) => {\n      return {\n        backgroundColor: theme.basics.veilColor,\n        color: theme.basics.fontColor,\n        zIndex: 1000\n      };\n    }\n  }\n});\n","'use strict';\n\nlet n = require('../../util/n');\nlet lumineView = require('../../util/lumineView');\nlet {\n  Signal\n} = require('lumine-signal');\n\nlet {\n  styles\n} = require('../../util/helper');\n\nlet {\n  compileTreeScript\n} = require('../../util/treeScript');\n\nlet S_HideNotice = compileTreeScript('.props.show=false');\n\nmodule.exports = lumineView(({\n  props\n}, {\n  updateTree\n}) => {\n  if (props.show && props.duration !== 'forever') {\n    setTimeout(() => {\n      updateTree(S_HideNotice, null, Signal('notice-hide'));\n    }, props.duration);\n  }\n\n  return n('div', {\n    style: {\n      zIndex: 10000,\n      position: 'fixed',\n      width: '100%',\n      height: 0,\n      left: 0,\n      top: '50%',\n      textAlign: 'center'\n    }\n  }, [\n    props.show && n('div', {\n      style: props.style\n    }, props.text)\n  ]);\n}, {\n  defaultProps: {\n    text: '',\n    show: true,\n    duration: 3000,\n    style: (theme) => styles(theme.oneLineBulk, {\n      display: 'inline-block',\n      backgroundColor: theme.basics.noticeColor,\n      maxWidth: 400,\n      maxHeight: 200,\n      top: -100,\n      position: 'relative',\n    })\n  }\n});\n","module.exports = require('./lib');\n","'use strict';\n\nconst {\n    getTreeScriptAst,\n    updateTree,\n    sequence,\n    delay,\n    retry,\n    applyFunPromise\n} = require('./util');\n\n/**\n * action flow\n */\nconst ACTION_SIGNAL_UPDATE_STATE = 'updateState';\nconst ACTION_SIGNAL_SEND_REQUEST = 'sendRequest';\n\n/**\n * variableMap: global variable map\n *\n * TODO support general action flow\n *\n * TODO generate variable stub from variable map\n */\nconst signalActionFlow = (signalActionMap, pageEnv, {\n    variableMap = {},\n    variableStub,\n    onError\n} = {}) => {\n    // TODO validate signalActionMap\n    // TODO do not modify source map, generate a new one\n    let contentMap = {};\n\n    for (const name in signalActionMap) {\n        contentMap[name] = parseActions(signalActionMap[name], variableMap, variableStub);\n    }\n    // handler\n    return (signal, viewState, ctx) => {\n        if (contentMap[signal.type]) {\n            const source = {\n                signal,\n                viewState,\n                props: viewState.props\n            };\n\n            return applyFunPromise(contentMap[signal.type], [source, ctx, pageEnv]).catch((err) => {\n                if (onError) {\n                    onError(err);\n                } else {\n                    throw err;\n                }\n            });\n        }\n    };\n};\n\nconst parseActions = (actions, variableMap, variableStub) => {\n    if (!actions) return null;\n\n    if (!Array.isArray(actions)) {\n        actions = [actions];\n    }\n\n    const contents = actions.map((action) => {\n        let signalAction = action;\n\n        if (typeof signalAction === 'string') {\n            signalAction = {\n                content: signalAction\n            };\n        } else if (typeof signalAction === 'number') {\n            const time = signalAction;\n            signalAction = {\n                content: () => delay(time)\n            };\n        }\n\n        return parseSignalActionContent(signalAction, variableMap, variableStub);\n    });\n\n    return (...params) => {\n        return sequence(contents, params);\n    };\n};\n\nconst parseSignalActionContent = (action, _variableMap, _variableStub) => {\n    const type = action.type || ACTION_SIGNAL_UPDATE_STATE;\n    const cnt = action.content;\n    if (typeof cnt !== 'string' && typeof cnt !== 'function') {\n        throw new Error(`Content of action should be string or function, but got ${cnt}, in action ${type}.`);\n    }\n\n    const nextVariableMap = getVariableMap(_variableMap, action);\n    const nextVariableStub = getVariableStub(_variableStub, action);\n\n    if (typeof cnt === 'string') {\n        if (type === ACTION_SIGNAL_UPDATE_STATE) { // update state\n            return updateStateHandler(action, nextVariableMap, nextVariableStub);\n        } else if (type === ACTION_SIGNAL_SEND_REQUEST) {\n            return sendRequestHandler(action, nextVariableMap, nextVariableStub);\n        } else {\n            throw new Error(`unexpected action type for a signal action, type is ${type}`);\n        }\n    } else {\n        return cnt;\n    }\n};\n\n/**\n * update state action handlers\n *\n * {\n *   type,\n *   content,\n *   variableMap,\n *   variableStub\n * }\n */\n\nconst updateStateHandler = (action, variableMap, variableStub) => {\n    const ast = getTreeScriptAst(action.content, variableStub);\n\n    return (source, ctx) => {\n        try {\n            updateTree(source, ast, variableMap, variableStub);\n            ctx.updateWithNotify();\n\n            return Promise.resolve();\n        } catch (err) {\n            return Promise.reject(err);\n        }\n    };\n};\n\n/**\n * send request action\n *\n * {\n *   type,\n *   content,\n *   variableMap,\n *   variableStub,\n *   response: action,\n *   error: action\n * }\n */\n// TODO retry\n\nconst sendRequestHandler = (action, variableMap, variableStub) => {\n    // TODO forbidden assign or other update opeartion in tree-script\n    const requestAst = getTreeScriptAst(action.content, variableStub);\n    const responseUpdate = parseActions(action.response, variableMap, variableStub);\n    const errorUpdate = parseActions(action.error, variableMap, variableStub);\n\n    return (source, ctx, pageEnv) => {\n        const {\n            runApi,\n            apiMap\n        } = pageEnv;\n        let apiRet = null;\n        try {\n            const requestContext = Object.assign({}, variableMap, apiMap);\n            const apiData = updateTree(source, requestAst, requestContext, variableStub);\n\n            apiRet = retry(runApi, [apiData], action.retry || 0);\n        } catch (err) {\n            apiRet = Promise.reject(err);\n        }\n\n        return Promise.resolve(apiRet).then((response) => {\n            return responseUpdate && responseUpdate(Object.assign({}, source, {\n                response,\n                from: source\n            }), ctx, pageEnv);\n        }).catch((error) => {\n            errorUpdate && errorUpdate(Object.assign(source, {\n                errorMsg: error.toString(),\n                error,\n                from: source\n            }), ctx, pageEnv);\n            throw error;\n        });\n    };\n};\n\nconst getVariableMap = (variableMap, action) => {\n    if (!action.variableMap) return variableMap;\n    return Object.assign({}, variableMap, action.variableMap);\n};\n\nconst getVariableStub = (variableStub, action) => {\n    if (!action.variableStub) return variableStub;\n    return Object.assign({}, variableStub, action.variableStub);\n};\n\nmodule.exports = {\n    signalActionFlow\n};\n","'use strict';\n\nconst {\n    parseStrToAst,\n    checkAST,\n    executeAST\n} = require('tree-script');\n\nconst JsonTree = require('tree-script/lib/jsonTree'); // using json tree, right now\n\nconst getTreeScriptAst = (code, variableStub) => {\n    let ast = parseStrToAst(code);\n\n    if (variableStub) {\n        checkAST(ast, {\n            variableStub\n        });\n    }\n\n    return ast;\n};\n\nconst updateTree = (source, ast, variableMap, variableStub) => {\n    let tree = JsonTree(source);\n\n    return executeAST(ast, {\n        queryByPath: tree.queryByPath,\n        setByPath: tree.setByPath,\n        removeByPath: tree.removeByPath,\n        appendByPath: tree.appendByPath,\n        variableMap,\n        variableStub\n    });\n};\n\nconst sequence = (fns, params = []) => {\n    if (!fns.length) return Promise.resolve([]);\n    const top = fns[0];\n\n    return Promise.resolve(top(...params)).then((fstRet) => {\n        return sequence(fns.slice(1), params).then(rest => {\n            rest.unshift(fstRet);\n            return rest;\n        });\n    });\n};\n\nconst delay = (t) => {\n    return new Promise((resolve) => {\n        setTimeout(() => {\n            resolve();\n        }, t);\n    });\n};\n\nconst retry = (fn, params, count = 0) => {\n    return applyFunPromise(fn, params).catch(err => {\n        if (count <= 1) {\n            throw err;\n        } else {\n            return retry(fn, params, count - 1);\n        }\n    });\n};\n\nconst applyFunPromise = (fn, params) => {\n    try {\n        return Promise.resolve(fn(...params));\n    } catch (err) {\n        return Promise.reject(err);\n    }\n};\n\nmodule.exports = {\n    getTreeScriptAst,\n    updateTree,\n    sequence,\n    delay,\n    retry,\n    applyFunPromise\n};\n","'use strict';\n\nlet {\n    stringGraph,\n    numberGraph\n} = require('cl-fsm/apply/json');\n\nlet {\n    buildFSM\n} = require('stream-token-parser');\n\nlet FSM = require('cl-fsm');\nlet {\n    stateGraphDSL\n} = FSM;\n\nlet {\n    g,\n    c,\n    union,\n    sequence,\n    range,\n    circle\n} = stateGraphDSL;\n\nlet whitespace = union(' ', '\\f', '\\n', '\\r', '\\t', '\\v', '\\u00a0', '\\u1680', '\\u180e', '\\u2000-', '\\u200a', '\\u2028', '\\u2029', '\\u202f', '\\u205f', '\\u3000', '\\ufeff');\n\n// .abcbf\n// .0\n// ._\nlet nodeName = g(sequence(\n    '.',\n    union('_', '%', range('a', 'z'), range('A', 'Z'), range('0', '9')),\n    circle(union('_', '%', range('a', 'z'), range('A', 'Z'), range('0', '9')))\n));\n\nlet variableName = g(sequence(\n    union('_', range('a', 'z'), range('A', 'Z')),\n    circle(union('_', range('a', 'z'), range('A', 'Z'), range('0', '9')))\n));\n\nlet nodeNameVariable = g(sequence(\n    '.',\n    '[',\n\n    circle(whitespace, g(sequence(\n        union('_', range('a', 'z'), range('A', 'Z')),\n\n        circle(union('_', range('a', 'z'), range('A', 'Z'), range('0', '9')),\n            circle(whitespace,\n                g(c(']'))\n            ),\n        ))))\n));\n\nmodule.exports = [\n\n    {\n        priority: 1,\n        match: 'true',\n        name: 'true'\n    }, {\n        priority: 1,\n        match: 'false',\n        name: 'false'\n    }, {\n        priority: 1,\n        match: 'null',\n        name: 'null'\n    }, {\n        priority: 1,\n        match: buildFSM(stringGraph),\n        name: 'string'\n    }, {\n        priority: 1,\n        match: buildFSM(numberGraph),\n        name: 'number'\n    },\n\n    {\n        priority: 1,\n        match: buildFSM(nodeName),\n        name: 'nodeName'\n    },\n    {\n        priority: 1,\n        match: buildFSM(nodeNameVariable),\n        name: 'nodeNameVariable'\n    },\n    {\n        priority: 1,\n        match: buildFSM(variableName),\n        name: 'variableName'\n    },\n    {\n        priority: 1,\n        match: '=',\n        name: 'assign'\n    },\n    {\n        priority: 1,\n        match: '-',\n        name: 'delete'\n    },\n    {\n        priority: 1,\n        match: '+',\n        name: 'append'\n    },\n    {\n        priority: 1,\n        match: ';',\n        name: 'semicolon'\n    },\n    {\n        priority: 1,\n        match: ':',\n        name: 'colon'\n    },\n    {\n        priority: 1,\n        match: '(',\n        name: 'leftBracket'\n    },\n    {\n        priority: 1,\n        match: ')',\n        name: 'rightBracket'\n    },\n    {\n        priority: 1,\n        match: ',',\n        name: 'comma'\n    },\n    {\n        priority: 1,\n        match: '{',\n        name: 'leftBrace'\n    },\n    {\n        priority: 1,\n        match: '}',\n        name: 'rightBrace'\n    },\n    {\n        priority: 1,\n        match: '?',\n        name: 'questionMark'\n    },\n    {\n        priority: 1,\n        match: buildFSM(g(\n            c(whitespace)\n        )),\n        name: 'whitespace'\n    }\n];\n","module.exports = require('./src');\n","'use strict';\n\nlet {\n    autoId,\n    isObject,\n\n    modifySuccess,\n    removeNoneExist,\n    removeSuccess\n} = require('./util');\n\nmodule.exports = (jsonData, {\n    missingValue = undefined\n} = {}) => {\n    let queryByPath = (path) => {\n        let cur = jsonData;\n        for (let i = 0; i < path.length; i++) {\n            if (!isObject(cur)) {\n                return missingValue;\n            } else {\n                if (cur.hasOwnProperty(path[i])) {\n                    cur = cur[path[i]];\n                } else {\n                    return missingValue;\n                }\n            }\n        }\n\n        return cur;\n    };\n\n    let setByPath = (path, value) => {\n        let parent = jsonData;\n\n        for (let i = 0; i < path.length - 1; i++) {\n            let part = path[i];\n            let next = parent[part];\n            if (!isObject(next)) { // if is not object, just override to a empty object\n                next = {}; // create a new middle node\n                parent[part] = next;\n            }\n            parent = next;\n        }\n\n        parent[path[path.length - 1]] = value; // set value\n        return modifySuccess(path, value);\n    };\n\n    return {\n        queryByPath,\n\n        setByPath,\n\n        removeByPath: (path) => {\n            let parentPath = path.slice(0, path.length - 1);\n            let lastKey = path[path.length - 1];\n            let parent = queryByPath(parentPath);\n            if (parent === missingValue || !isObject(parent) || !parent.hasOwnProperty(lastKey)) {\n                return removeNoneExist(path);\n            } else {\n                delete parent[lastKey];\n                return removeSuccess(path);\n            }\n        },\n\n        appendByPath: (path, value) => {\n            return setByPath(path.concat([autoId()]), value);\n        }\n    };\n};\n","'use strict';\n\nlet uuidv4 = require('uuid/v4');\n\nlet autoId = () => {\n    let time = new Date().getTime(); // used to sort by time\n    // generate id\n    return `_gid_${time}_${uuidv4().replace(/-/g, '_')}`;\n};\n\nlet isObject = v => v && typeof v === 'object';\n\nconst O_T_MODIFY = 'update';\nconst O_T_REMOVE = 'delete';\nconst T_SUCCESS = 'success';\n\nconst ERR_T_REMOVE_NONE_EXIST = 'remove_none_exist';\n\nlet modifySuccess = (path, value) => {\n    return {\n        operationType: O_T_MODIFY,\n        resultType: T_SUCCESS,\n\n        path,\n        value: value && value.toString()\n    };\n};\n\nlet removeNoneExist = (path) => {\n    return {\n        operationType: O_T_REMOVE,\n        resultType: ERR_T_REMOVE_NONE_EXIST,\n\n        path\n    };\n};\n\nlet removeSuccess = (path) => {\n    return {\n        operationType: O_T_REMOVE,\n        resultType: T_SUCCESS,\n\n        path\n    };\n};\n\nmodule.exports = {\n    autoId,\n    isObject,\n\n    modifySuccess,\n    removeNoneExist,\n    removeSuccess\n};\n","module.exports={\"GOTO\":[{\"PROGRAM\":12,\"EXPRESSION_LIST\":13,\"EXPRESSION\":14,\"CONDITION_EXPRESSION\":15,\"UPDATE_EXPRESSION\":16,\"QUERY_EXPRESSION\":17,\"PATH\":18,\"ATOM_DATA\":19},{\"PROGRAM\":31,\"EXPRESSION_LIST\":32,\"EXPRESSION\":33,\"CONDITION_EXPRESSION\":34,\"UPDATE_EXPRESSION\":35,\"QUERY_EXPRESSION\":36,\"PATH\":37,\"ATOM_DATA\":38},{\"PATH\":41},{\"PATH\":44},{},{\"PATH\":46},{\"PATH\":47},{},{},{},{},{},{},{},{},{},{},{},{},{},{\"PROGRAM\":51,\"EXPRESSION_LIST\":32,\"EXPRESSION\":33,\"CONDITION_EXPRESSION\":34,\"UPDATE_EXPRESSION\":35,\"QUERY_EXPRESSION\":36,\"PATH\":37,\"ATOM_DATA\":38},{\"PATH\":54},{\"PATH\":55},{},{\"PATH\":57},{\"PATH\":58},{},{},{},{},{},{},{},{},{},{},{},{},{},{\"PATH\":63},{\"PATH\":64},{},{\"PATH\":65},{\"PATH\":66},{},{\"QUERY_EXPRESSION\":77,\"QUERY_EXPRESSION_LIST\":78,\"PATH\":79,\"ATOM_DATA\":80},{},{},{\"EXPRESSION_LIST\":81,\"EXPRESSION\":14,\"CONDITION_EXPRESSION\":15,\"UPDATE_EXPRESSION\":16,\"QUERY_EXPRESSION\":17,\"PATH\":18,\"ATOM_DATA\":19},{\"EXPRESSION\":93,\"CONDITION_EXPRESSION\":94,\"UPDATE_EXPRESSION\":95,\"QUERY_EXPRESSION\":96,\"PATH\":97,\"ATOM_DATA\":98},{\"QUERY_EXPRESSION\":99,\"PATH\":100,\"ATOM_DATA\":19},{},{\"PATH\":102},{\"PATH\":103},{},{},{\"QUERY_EXPRESSION\":77,\"QUERY_EXPRESSION_LIST\":106,\"PATH\":79,\"ATOM_DATA\":80},{},{},{},{\"EXPRESSION_LIST\":107,\"EXPRESSION\":33,\"CONDITION_EXPRESSION\":34,\"UPDATE_EXPRESSION\":35,\"QUERY_EXPRESSION\":36,\"PATH\":37,\"ATOM_DATA\":38},{\"EXPRESSION\":108,\"CONDITION_EXPRESSION\":94,\"UPDATE_EXPRESSION\":95,\"QUERY_EXPRESSION\":96,\"PATH\":97,\"ATOM_DATA\":98},{\"QUERY_EXPRESSION\":109,\"PATH\":110,\"ATOM_DATA\":38},{},{},{},{},{\"QUERY_EXPRESSION\":111,\"PATH\":100,\"ATOM_DATA\":19},{},{},{\"PATH\":113},{\"PATH\":114},{},{},{},{},{},{},{},{},{},{},{\"PROGRAM\":117,\"EXPRESSION_LIST\":32,\"EXPRESSION\":33,\"CONDITION_EXPRESSION\":34,\"UPDATE_EXPRESSION\":35,\"QUERY_EXPRESSION\":36,\"PATH\":37,\"ATOM_DATA\":38},{\"PATH\":120},{\"PATH\":121},{},{\"PATH\":123},{\"PATH\":124},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{\"QUERY_EXPRESSION\":128,\"PATH\":110,\"ATOM_DATA\":38},{},{},{},{},{},{},{},{\"QUERY_EXPRESSION\":77,\"QUERY_EXPRESSION_LIST\":132,\"PATH\":79,\"ATOM_DATA\":80},{},{},{\"QUERY_EXPRESSION\":77,\"QUERY_EXPRESSION_LIST\":133,\"PATH\":79,\"ATOM_DATA\":80},{},{},{\"PATH\":135},{\"PATH\":136},{},{},{\"QUERY_EXPRESSION\":77,\"QUERY_EXPRESSION_LIST\":139,\"PATH\":79,\"ATOM_DATA\":80},{},{},{\"EXPRESSION\":140,\"CONDITION_EXPRESSION\":94,\"UPDATE_EXPRESSION\":95,\"QUERY_EXPRESSION\":96,\"PATH\":97,\"ATOM_DATA\":98},{\"EXPRESSION\":141,\"CONDITION_EXPRESSION\":15,\"UPDATE_EXPRESSION\":16,\"QUERY_EXPRESSION\":17,\"PATH\":18,\"ATOM_DATA\":19},{\"QUERY_EXPRESSION\":142,\"PATH\":143,\"ATOM_DATA\":98},{},{},{\"EXPRESSION\":144,\"CONDITION_EXPRESSION\":34,\"UPDATE_EXPRESSION\":35,\"QUERY_EXPRESSION\":36,\"PATH\":37,\"ATOM_DATA\":38},{},{},{},{},{},{},{\"QUERY_EXPRESSION\":146,\"PATH\":143,\"ATOM_DATA\":98},{},{},{},{},{},{},{},{},{},{},{\"EXPRESSION\":149,\"CONDITION_EXPRESSION\":94,\"UPDATE_EXPRESSION\":95,\"QUERY_EXPRESSION\":96,\"PATH\":97,\"ATOM_DATA\":98},{}],\"ACTION\":[{\"$\":{\"type\":\"reduce\",\"production\":[\"EXPRESSION\",[]]},\"questionMark\":{\"type\":\"reduce\",\"production\":[\"EXPRESSION\",[]]},\"semicolon\":{\"type\":\"reduce\",\"production\":[\"EXPRESSION\",[]]},\"leftBrace\":{\"type\":\"shift\",\"state\":1},\"variableName\":{\"type\":\"shift\",\"state\":4},\"delete\":{\"type\":\"shift\",\"state\":2},\"append\":{\"type\":\"shift\",\"state\":3},\"true\":{\"type\":\"shift\",\"state\":7},\"false\":{\"type\":\"shift\",\"state\":8},\"null\":{\"type\":\"shift\",\"state\":9},\"string\":{\"type\":\"shift\",\"state\":10},\"number\":{\"type\":\"shift\",\"state\":11},\"nodeName\":{\"type\":\"shift\",\"state\":5},\"nodeNameVariable\":{\"type\":\"shift\",\"state\":6}},{\"questionMark\":{\"type\":\"reduce\",\"production\":[\"EXPRESSION\",[]]},\"rightBrace\":{\"type\":\"reduce\",\"production\":[\"EXPRESSION\",[]]},\"semicolon\":{\"type\":\"reduce\",\"production\":[\"EXPRESSION\",[]]},\"leftBrace\":{\"type\":\"shift\",\"state\":20},\"variableName\":{\"type\":\"shift\",\"state\":23},\"delete\":{\"type\":\"shift\",\"state\":21},\"append\":{\"type\":\"shift\",\"state\":22},\"true\":{\"type\":\"shift\",\"state\":26},\"false\":{\"type\":\"shift\",\"state\":27},\"null\":{\"type\":\"shift\",\"state\":28},\"string\":{\"type\":\"shift\",\"state\":29},\"number\":{\"type\":\"shift\",\"state\":30},\"nodeName\":{\"type\":\"shift\",\"state\":24},\"nodeNameVariable\":{\"type\":\"shift\",\"state\":25}},{\"nodeName\":{\"type\":\"shift\",\"state\":39},\"nodeNameVariable\":{\"type\":\"shift\",\"state\":40}},{\"nodeName\":{\"type\":\"shift\",\"state\":42},\"nodeNameVariable\":{\"type\":\"shift\",\"state\":43}},{\"$\":{\"type\":\"reduce\",\"production\":[\"QUERY_EXPRESSION\",[\"variableName\"]]},\"questionMark\":{\"type\":\"reduce\",\"production\":[\"QUERY_EXPRESSION\",[\"variableName\"]]},\"semicolon\":{\"type\":\"reduce\",\"production\":[\"QUERY_EXPRESSION\",[\"variableName\"]]},\"leftBracket\":{\"type\":\"shift\",\"state\":45}},{\"$\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeName\"]]},\"assign\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeName\"]]},\"questionMark\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeName\"]]},\"semicolon\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeName\"]]},\"nodeName\":{\"type\":\"shift\",\"state\":5},\"nodeNameVariable\":{\"type\":\"shift\",\"state\":6}},{\"$\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeNameVariable\"]]},\"assign\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeNameVariable\"]]},\"questionMark\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeNameVariable\"]]},\"semicolon\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeNameVariable\"]]},\"nodeName\":{\"type\":\"shift\",\"state\":5},\"nodeNameVariable\":{\"type\":\"shift\",\"state\":6}},{\"$\":{\"type\":\"reduce\",\"production\":[\"ATOM_DATA\",[\"true\"]]},\"questionMark\":{\"type\":\"reduce\",\"production\":[\"ATOM_DATA\",[\"true\"]]},\"semicolon\":{\"type\":\"reduce\",\"production\":[\"ATOM_DATA\",[\"true\"]]}},{\"$\":{\"type\":\"reduce\",\"production\":[\"ATOM_DATA\",[\"false\"]]},\"questionMark\":{\"type\":\"reduce\",\"production\":[\"ATOM_DATA\",[\"false\"]]},\"semicolon\":{\"type\":\"reduce\",\"production\":[\"ATOM_DATA\",[\"false\"]]}},{\"$\":{\"type\":\"reduce\",\"production\":[\"ATOM_DATA\",[\"null\"]]},\"questionMark\":{\"type\":\"reduce\",\"production\":[\"ATOM_DATA\",[\"null\"]]},\"semicolon\":{\"type\":\"reduce\",\"production\":[\"ATOM_DATA\",[\"null\"]]}},{\"$\":{\"type\":\"reduce\",\"production\":[\"ATOM_DATA\",[\"string\"]]},\"questionMark\":{\"type\":\"reduce\",\"production\":[\"ATOM_DATA\",[\"string\"]]},\"semicolon\":{\"type\":\"reduce\",\"production\":[\"ATOM_DATA\",[\"string\"]]}},{\"$\":{\"type\":\"reduce\",\"production\":[\"ATOM_DATA\",[\"number\"]]},\"questionMark\":{\"type\":\"reduce\",\"production\":[\"ATOM_DATA\",[\"number\"]]},\"semicolon\":{\"type\":\"reduce\",\"production\":[\"ATOM_DATA\",[\"number\"]]}},{\"$\":{\"type\":\"accept\"}},{\"$\":{\"type\":\"reduce\",\"production\":[\"PROGRAM\",[\"EXPRESSION_LIST\"]]}},{\"$\":{\"type\":\"reduce\",\"production\":[\"EXPRESSION_LIST\",[\"EXPRESSION\"]]},\"semicolon\":{\"type\":\"shift\",\"state\":48},\"questionMark\":{\"type\":\"shift\",\"state\":49}},{\"$\":{\"type\":\"reduce\",\"production\":[\"EXPRESSION\",[\"CONDITION_EXPRESSION\"]]},\"questionMark\":{\"type\":\"reduce\",\"production\":[\"EXPRESSION\",[\"CONDITION_EXPRESSION\"]]},\"semicolon\":{\"type\":\"reduce\",\"production\":[\"EXPRESSION\",[\"CONDITION_EXPRESSION\"]]}},{\"$\":{\"type\":\"reduce\",\"production\":[\"EXPRESSION\",[\"UPDATE_EXPRESSION\"]]},\"questionMark\":{\"type\":\"reduce\",\"production\":[\"EXPRESSION\",[\"UPDATE_EXPRESSION\"]]},\"semicolon\":{\"type\":\"reduce\",\"production\":[\"EXPRESSION\",[\"UPDATE_EXPRESSION\"]]}},{\"$\":{\"type\":\"reduce\",\"production\":[\"EXPRESSION\",[\"QUERY_EXPRESSION\"]]},\"questionMark\":{\"type\":\"reduce\",\"production\":[\"EXPRESSION\",[\"QUERY_EXPRESSION\"]]},\"semicolon\":{\"type\":\"reduce\",\"production\":[\"EXPRESSION\",[\"QUERY_EXPRESSION\"]]}},{\"$\":{\"type\":\"reduce\",\"production\":[\"QUERY_EXPRESSION\",[\"PATH\"]]},\"questionMark\":{\"type\":\"reduce\",\"production\":[\"QUERY_EXPRESSION\",[\"PATH\"]]},\"semicolon\":{\"type\":\"reduce\",\"production\":[\"QUERY_EXPRESSION\",[\"PATH\"]]},\"assign\":{\"type\":\"shift\",\"state\":50}},{\"$\":{\"type\":\"reduce\",\"production\":[\"QUERY_EXPRESSION\",[\"ATOM_DATA\"]]},\"questionMark\":{\"type\":\"reduce\",\"production\":[\"QUERY_EXPRESSION\",[\"ATOM_DATA\"]]},\"semicolon\":{\"type\":\"reduce\",\"production\":[\"QUERY_EXPRESSION\",[\"ATOM_DATA\"]]}},{\"questionMark\":{\"type\":\"reduce\",\"production\":[\"EXPRESSION\",[]]},\"rightBrace\":{\"type\":\"reduce\",\"production\":[\"EXPRESSION\",[]]},\"semicolon\":{\"type\":\"reduce\",\"production\":[\"EXPRESSION\",[]]},\"leftBrace\":{\"type\":\"shift\",\"state\":20},\"variableName\":{\"type\":\"shift\",\"state\":23},\"delete\":{\"type\":\"shift\",\"state\":21},\"append\":{\"type\":\"shift\",\"state\":22},\"true\":{\"type\":\"shift\",\"state\":26},\"false\":{\"type\":\"shift\",\"state\":27},\"null\":{\"type\":\"shift\",\"state\":28},\"string\":{\"type\":\"shift\",\"state\":29},\"number\":{\"type\":\"shift\",\"state\":30},\"nodeName\":{\"type\":\"shift\",\"state\":24},\"nodeNameVariable\":{\"type\":\"shift\",\"state\":25}},{\"nodeName\":{\"type\":\"shift\",\"state\":52},\"nodeNameVariable\":{\"type\":\"shift\",\"state\":53}},{\"nodeName\":{\"type\":\"shift\",\"state\":42},\"nodeNameVariable\":{\"type\":\"shift\",\"state\":43}},{\"questionMark\":{\"type\":\"reduce\",\"production\":[\"QUERY_EXPRESSION\",[\"variableName\"]]},\"rightBrace\":{\"type\":\"reduce\",\"production\":[\"QUERY_EXPRESSION\",[\"variableName\"]]},\"semicolon\":{\"type\":\"reduce\",\"production\":[\"QUERY_EXPRESSION\",[\"variableName\"]]},\"leftBracket\":{\"type\":\"shift\",\"state\":56}},{\"assign\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeName\"]]},\"questionMark\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeName\"]]},\"rightBrace\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeName\"]]},\"semicolon\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeName\"]]},\"nodeName\":{\"type\":\"shift\",\"state\":24},\"nodeNameVariable\":{\"type\":\"shift\",\"state\":25}},{\"assign\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeNameVariable\"]]},\"questionMark\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeNameVariable\"]]},\"rightBrace\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeNameVariable\"]]},\"semicolon\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeNameVariable\"]]},\"nodeName\":{\"type\":\"shift\",\"state\":24},\"nodeNameVariable\":{\"type\":\"shift\",\"state\":25}},{\"questionMark\":{\"type\":\"reduce\",\"production\":[\"ATOM_DATA\",[\"true\"]]},\"rightBrace\":{\"type\":\"reduce\",\"production\":[\"ATOM_DATA\",[\"true\"]]},\"semicolon\":{\"type\":\"reduce\",\"production\":[\"ATOM_DATA\",[\"true\"]]}},{\"questionMark\":{\"type\":\"reduce\",\"production\":[\"ATOM_DATA\",[\"false\"]]},\"rightBrace\":{\"type\":\"reduce\",\"production\":[\"ATOM_DATA\",[\"false\"]]},\"semicolon\":{\"type\":\"reduce\",\"production\":[\"ATOM_DATA\",[\"false\"]]}},{\"questionMark\":{\"type\":\"reduce\",\"production\":[\"ATOM_DATA\",[\"null\"]]},\"rightBrace\":{\"type\":\"reduce\",\"production\":[\"ATOM_DATA\",[\"null\"]]},\"semicolon\":{\"type\":\"reduce\",\"production\":[\"ATOM_DATA\",[\"null\"]]}},{\"questionMark\":{\"type\":\"reduce\",\"production\":[\"ATOM_DATA\",[\"string\"]]},\"rightBrace\":{\"type\":\"reduce\",\"production\":[\"ATOM_DATA\",[\"string\"]]},\"semicolon\":{\"type\":\"reduce\",\"production\":[\"ATOM_DATA\",[\"string\"]]}},{\"questionMark\":{\"type\":\"reduce\",\"production\":[\"ATOM_DATA\",[\"number\"]]},\"rightBrace\":{\"type\":\"reduce\",\"production\":[\"ATOM_DATA\",[\"number\"]]},\"semicolon\":{\"type\":\"reduce\",\"production\":[\"ATOM_DATA\",[\"number\"]]}},{\"rightBrace\":{\"type\":\"shift\",\"state\":59}},{\"rightBrace\":{\"type\":\"reduce\",\"production\":[\"PROGRAM\",[\"EXPRESSION_LIST\"]]}},{\"rightBrace\":{\"type\":\"reduce\",\"production\":[\"EXPRESSION_LIST\",[\"EXPRESSION\"]]},\"semicolon\":{\"type\":\"shift\",\"state\":60},\"questionMark\":{\"type\":\"shift\",\"state\":61}},{\"questionMark\":{\"type\":\"reduce\",\"production\":[\"EXPRESSION\",[\"CONDITION_EXPRESSION\"]]},\"rightBrace\":{\"type\":\"reduce\",\"production\":[\"EXPRESSION\",[\"CONDITION_EXPRESSION\"]]},\"semicolon\":{\"type\":\"reduce\",\"production\":[\"EXPRESSION\",[\"CONDITION_EXPRESSION\"]]}},{\"questionMark\":{\"type\":\"reduce\",\"production\":[\"EXPRESSION\",[\"UPDATE_EXPRESSION\"]]},\"rightBrace\":{\"type\":\"reduce\",\"production\":[\"EXPRESSION\",[\"UPDATE_EXPRESSION\"]]},\"semicolon\":{\"type\":\"reduce\",\"production\":[\"EXPRESSION\",[\"UPDATE_EXPRESSION\"]]}},{\"questionMark\":{\"type\":\"reduce\",\"production\":[\"EXPRESSION\",[\"QUERY_EXPRESSION\"]]},\"rightBrace\":{\"type\":\"reduce\",\"production\":[\"EXPRESSION\",[\"QUERY_EXPRESSION\"]]},\"semicolon\":{\"type\":\"reduce\",\"production\":[\"EXPRESSION\",[\"QUERY_EXPRESSION\"]]}},{\"questionMark\":{\"type\":\"reduce\",\"production\":[\"QUERY_EXPRESSION\",[\"PATH\"]]},\"rightBrace\":{\"type\":\"reduce\",\"production\":[\"QUERY_EXPRESSION\",[\"PATH\"]]},\"semicolon\":{\"type\":\"reduce\",\"production\":[\"QUERY_EXPRESSION\",[\"PATH\"]]},\"assign\":{\"type\":\"shift\",\"state\":62}},{\"questionMark\":{\"type\":\"reduce\",\"production\":[\"QUERY_EXPRESSION\",[\"ATOM_DATA\"]]},\"rightBrace\":{\"type\":\"reduce\",\"production\":[\"QUERY_EXPRESSION\",[\"ATOM_DATA\"]]},\"semicolon\":{\"type\":\"reduce\",\"production\":[\"QUERY_EXPRESSION\",[\"ATOM_DATA\"]]}},{\"$\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeName\"]]},\"questionMark\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeName\"]]},\"semicolon\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeName\"]]},\"nodeName\":{\"type\":\"shift\",\"state\":39},\"nodeNameVariable\":{\"type\":\"shift\",\"state\":40}},{\"$\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeNameVariable\"]]},\"questionMark\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeNameVariable\"]]},\"semicolon\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeNameVariable\"]]},\"nodeName\":{\"type\":\"shift\",\"state\":39},\"nodeNameVariable\":{\"type\":\"shift\",\"state\":40}},{\"$\":{\"type\":\"reduce\",\"production\":[\"UPDATE_EXPRESSION\",[\"delete\",\"PATH\"]]},\"questionMark\":{\"type\":\"reduce\",\"production\":[\"UPDATE_EXPRESSION\",[\"delete\",\"PATH\"]]},\"semicolon\":{\"type\":\"reduce\",\"production\":[\"UPDATE_EXPRESSION\",[\"delete\",\"PATH\"]]}},{\"assign\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeName\"]]},\"nodeName\":{\"type\":\"shift\",\"state\":42},\"nodeNameVariable\":{\"type\":\"shift\",\"state\":43}},{\"assign\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeNameVariable\"]]},\"nodeName\":{\"type\":\"shift\",\"state\":42},\"nodeNameVariable\":{\"type\":\"shift\",\"state\":43}},{\"assign\":{\"type\":\"shift\",\"state\":67}},{\"rightBracket\":{\"type\":\"shift\",\"state\":69},\"variableName\":{\"type\":\"shift\",\"state\":68},\"true\":{\"type\":\"shift\",\"state\":72},\"false\":{\"type\":\"shift\",\"state\":73},\"null\":{\"type\":\"shift\",\"state\":74},\"string\":{\"type\":\"shift\",\"state\":75},\"number\":{\"type\":\"shift\",\"state\":76},\"nodeName\":{\"type\":\"shift\",\"state\":70},\"nodeNameVariable\":{\"type\":\"shift\",\"state\":71}},{\"$\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeName\",\"PATH\"]]},\"assign\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeName\",\"PATH\"]]},\"questionMark\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeName\",\"PATH\"]]},\"semicolon\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeName\",\"PATH\"]]}},{\"$\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeNameVariable\",\"PATH\"]]},\"assign\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeNameVariable\",\"PATH\"]]},\"questionMark\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeNameVariable\",\"PATH\"]]},\"semicolon\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeNameVariable\",\"PATH\"]]}},{\"$\":{\"type\":\"reduce\",\"production\":[\"EXPRESSION\",[]]},\"questionMark\":{\"type\":\"reduce\",\"production\":[\"EXPRESSION\",[]]},\"semicolon\":{\"type\":\"reduce\",\"production\":[\"EXPRESSION\",[]]},\"leftBrace\":{\"type\":\"shift\",\"state\":1},\"variableName\":{\"type\":\"shift\",\"state\":4},\"delete\":{\"type\":\"shift\",\"state\":2},\"append\":{\"type\":\"shift\",\"state\":3},\"true\":{\"type\":\"shift\",\"state\":7},\"false\":{\"type\":\"shift\",\"state\":8},\"null\":{\"type\":\"shift\",\"state\":9},\"string\":{\"type\":\"shift\",\"state\":10},\"number\":{\"type\":\"shift\",\"state\":11},\"nodeName\":{\"type\":\"shift\",\"state\":5},\"nodeNameVariable\":{\"type\":\"shift\",\"state\":6}},{\"colon\":{\"type\":\"reduce\",\"production\":[\"EXPRESSION\",[]]},\"questionMark\":{\"type\":\"reduce\",\"production\":[\"EXPRESSION\",[]]},\"leftBrace\":{\"type\":\"shift\",\"state\":82},\"variableName\":{\"type\":\"shift\",\"state\":85},\"delete\":{\"type\":\"shift\",\"state\":83},\"append\":{\"type\":\"shift\",\"state\":84},\"true\":{\"type\":\"shift\",\"state\":88},\"false\":{\"type\":\"shift\",\"state\":89},\"null\":{\"type\":\"shift\",\"state\":90},\"string\":{\"type\":\"shift\",\"state\":91},\"number\":{\"type\":\"shift\",\"state\":92},\"nodeName\":{\"type\":\"shift\",\"state\":86},\"nodeNameVariable\":{\"type\":\"shift\",\"state\":87}},{\"variableName\":{\"type\":\"shift\",\"state\":4},\"true\":{\"type\":\"shift\",\"state\":7},\"false\":{\"type\":\"shift\",\"state\":8},\"null\":{\"type\":\"shift\",\"state\":9},\"string\":{\"type\":\"shift\",\"state\":10},\"number\":{\"type\":\"shift\",\"state\":11},\"nodeName\":{\"type\":\"shift\",\"state\":39},\"nodeNameVariable\":{\"type\":\"shift\",\"state\":40}},{\"rightBrace\":{\"type\":\"shift\",\"state\":101}},{\"questionMark\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeName\"]]},\"rightBrace\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeName\"]]},\"semicolon\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeName\"]]},\"nodeName\":{\"type\":\"shift\",\"state\":52},\"nodeNameVariable\":{\"type\":\"shift\",\"state\":53}},{\"questionMark\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeNameVariable\"]]},\"rightBrace\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeNameVariable\"]]},\"semicolon\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeNameVariable\"]]},\"nodeName\":{\"type\":\"shift\",\"state\":52},\"nodeNameVariable\":{\"type\":\"shift\",\"state\":53}},{\"questionMark\":{\"type\":\"reduce\",\"production\":[\"UPDATE_EXPRESSION\",[\"delete\",\"PATH\"]]},\"rightBrace\":{\"type\":\"reduce\",\"production\":[\"UPDATE_EXPRESSION\",[\"delete\",\"PATH\"]]},\"semicolon\":{\"type\":\"reduce\",\"production\":[\"UPDATE_EXPRESSION\",[\"delete\",\"PATH\"]]}},{\"assign\":{\"type\":\"shift\",\"state\":104}},{\"rightBracket\":{\"type\":\"shift\",\"state\":105},\"variableName\":{\"type\":\"shift\",\"state\":68},\"true\":{\"type\":\"shift\",\"state\":72},\"false\":{\"type\":\"shift\",\"state\":73},\"null\":{\"type\":\"shift\",\"state\":74},\"string\":{\"type\":\"shift\",\"state\":75},\"number\":{\"type\":\"shift\",\"state\":76},\"nodeName\":{\"type\":\"shift\",\"state\":70},\"nodeNameVariable\":{\"type\":\"shift\",\"state\":71}},{\"assign\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeName\",\"PATH\"]]},\"questionMark\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeName\",\"PATH\"]]},\"rightBrace\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeName\",\"PATH\"]]},\"semicolon\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeName\",\"PATH\"]]}},{\"assign\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeNameVariable\",\"PATH\"]]},\"questionMark\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeNameVariable\",\"PATH\"]]},\"rightBrace\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeNameVariable\",\"PATH\"]]},\"semicolon\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeNameVariable\",\"PATH\"]]}},{\"$\":{\"type\":\"reduce\",\"production\":[\"EXPRESSION\",[\"leftBrace\",\"PROGRAM\",\"rightBrace\"]]},\"questionMark\":{\"type\":\"reduce\",\"production\":[\"EXPRESSION\",[\"leftBrace\",\"PROGRAM\",\"rightBrace\"]]},\"semicolon\":{\"type\":\"reduce\",\"production\":[\"EXPRESSION\",[\"leftBrace\",\"PROGRAM\",\"rightBrace\"]]}},{\"questionMark\":{\"type\":\"reduce\",\"production\":[\"EXPRESSION\",[]]},\"rightBrace\":{\"type\":\"reduce\",\"production\":[\"EXPRESSION\",[]]},\"semicolon\":{\"type\":\"reduce\",\"production\":[\"EXPRESSION\",[]]},\"leftBrace\":{\"type\":\"shift\",\"state\":20},\"variableName\":{\"type\":\"shift\",\"state\":23},\"delete\":{\"type\":\"shift\",\"state\":21},\"append\":{\"type\":\"shift\",\"state\":22},\"true\":{\"type\":\"shift\",\"state\":26},\"false\":{\"type\":\"shift\",\"state\":27},\"null\":{\"type\":\"shift\",\"state\":28},\"string\":{\"type\":\"shift\",\"state\":29},\"number\":{\"type\":\"shift\",\"state\":30},\"nodeName\":{\"type\":\"shift\",\"state\":24},\"nodeNameVariable\":{\"type\":\"shift\",\"state\":25}},{\"colon\":{\"type\":\"reduce\",\"production\":[\"EXPRESSION\",[]]},\"questionMark\":{\"type\":\"reduce\",\"production\":[\"EXPRESSION\",[]]},\"leftBrace\":{\"type\":\"shift\",\"state\":82},\"variableName\":{\"type\":\"shift\",\"state\":85},\"delete\":{\"type\":\"shift\",\"state\":83},\"append\":{\"type\":\"shift\",\"state\":84},\"true\":{\"type\":\"shift\",\"state\":88},\"false\":{\"type\":\"shift\",\"state\":89},\"null\":{\"type\":\"shift\",\"state\":90},\"string\":{\"type\":\"shift\",\"state\":91},\"number\":{\"type\":\"shift\",\"state\":92},\"nodeName\":{\"type\":\"shift\",\"state\":86},\"nodeNameVariable\":{\"type\":\"shift\",\"state\":87}},{\"variableName\":{\"type\":\"shift\",\"state\":23},\"true\":{\"type\":\"shift\",\"state\":26},\"false\":{\"type\":\"shift\",\"state\":27},\"null\":{\"type\":\"shift\",\"state\":28},\"string\":{\"type\":\"shift\",\"state\":29},\"number\":{\"type\":\"shift\",\"state\":30},\"nodeName\":{\"type\":\"shift\",\"state\":52},\"nodeNameVariable\":{\"type\":\"shift\",\"state\":53}},{\"$\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeName\",\"PATH\"]]},\"questionMark\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeName\",\"PATH\"]]},\"semicolon\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeName\",\"PATH\"]]}},{\"$\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeNameVariable\",\"PATH\"]]},\"questionMark\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeNameVariable\",\"PATH\"]]},\"semicolon\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeNameVariable\",\"PATH\"]]}},{\"assign\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeName\",\"PATH\"]]}},{\"assign\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeNameVariable\",\"PATH\"]]}},{\"variableName\":{\"type\":\"shift\",\"state\":4},\"true\":{\"type\":\"shift\",\"state\":7},\"false\":{\"type\":\"shift\",\"state\":8},\"null\":{\"type\":\"shift\",\"state\":9},\"string\":{\"type\":\"shift\",\"state\":10},\"number\":{\"type\":\"shift\",\"state\":11},\"nodeName\":{\"type\":\"shift\",\"state\":39},\"nodeNameVariable\":{\"type\":\"shift\",\"state\":40}},{\"comma\":{\"type\":\"reduce\",\"production\":[\"QUERY_EXPRESSION\",[\"variableName\"]]},\"rightBracket\":{\"type\":\"reduce\",\"production\":[\"QUERY_EXPRESSION\",[\"variableName\"]]},\"leftBracket\":{\"type\":\"shift\",\"state\":112}},{\"$\":{\"type\":\"reduce\",\"production\":[\"QUERY_EXPRESSION\",[\"variableName\",\"leftBracket\",\"rightBracket\"]]},\"questionMark\":{\"type\":\"reduce\",\"production\":[\"QUERY_EXPRESSION\",[\"variableName\",\"leftBracket\",\"rightBracket\"]]},\"semicolon\":{\"type\":\"reduce\",\"production\":[\"QUERY_EXPRESSION\",[\"variableName\",\"leftBracket\",\"rightBracket\"]]}},{\"comma\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeName\"]]},\"rightBracket\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeName\"]]},\"nodeName\":{\"type\":\"shift\",\"state\":70},\"nodeNameVariable\":{\"type\":\"shift\",\"state\":71}},{\"comma\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeNameVariable\"]]},\"rightBracket\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeNameVariable\"]]},\"nodeName\":{\"type\":\"shift\",\"state\":70},\"nodeNameVariable\":{\"type\":\"shift\",\"state\":71}},{\"comma\":{\"type\":\"reduce\",\"production\":[\"ATOM_DATA\",[\"true\"]]},\"rightBracket\":{\"type\":\"reduce\",\"production\":[\"ATOM_DATA\",[\"true\"]]}},{\"comma\":{\"type\":\"reduce\",\"production\":[\"ATOM_DATA\",[\"false\"]]},\"rightBracket\":{\"type\":\"reduce\",\"production\":[\"ATOM_DATA\",[\"false\"]]}},{\"comma\":{\"type\":\"reduce\",\"production\":[\"ATOM_DATA\",[\"null\"]]},\"rightBracket\":{\"type\":\"reduce\",\"production\":[\"ATOM_DATA\",[\"null\"]]}},{\"comma\":{\"type\":\"reduce\",\"production\":[\"ATOM_DATA\",[\"string\"]]},\"rightBracket\":{\"type\":\"reduce\",\"production\":[\"ATOM_DATA\",[\"string\"]]}},{\"comma\":{\"type\":\"reduce\",\"production\":[\"ATOM_DATA\",[\"number\"]]},\"rightBracket\":{\"type\":\"reduce\",\"production\":[\"ATOM_DATA\",[\"number\"]]}},{\"rightBracket\":{\"type\":\"reduce\",\"production\":[\"QUERY_EXPRESSION_LIST\",[\"QUERY_EXPRESSION\"]]},\"comma\":{\"type\":\"shift\",\"state\":115}},{\"rightBracket\":{\"type\":\"shift\",\"state\":116}},{\"comma\":{\"type\":\"reduce\",\"production\":[\"QUERY_EXPRESSION\",[\"PATH\"]]},\"rightBracket\":{\"type\":\"reduce\",\"production\":[\"QUERY_EXPRESSION\",[\"PATH\"]]}},{\"comma\":{\"type\":\"reduce\",\"production\":[\"QUERY_EXPRESSION\",[\"ATOM_DATA\"]]},\"rightBracket\":{\"type\":\"reduce\",\"production\":[\"QUERY_EXPRESSION\",[\"ATOM_DATA\"]]}},{\"$\":{\"type\":\"reduce\",\"production\":[\"EXPRESSION_LIST\",[\"EXPRESSION\",\"semicolon\",\"EXPRESSION_LIST\"]]}},{\"questionMark\":{\"type\":\"reduce\",\"production\":[\"EXPRESSION\",[]]},\"rightBrace\":{\"type\":\"reduce\",\"production\":[\"EXPRESSION\",[]]},\"semicolon\":{\"type\":\"reduce\",\"production\":[\"EXPRESSION\",[]]},\"leftBrace\":{\"type\":\"shift\",\"state\":20},\"variableName\":{\"type\":\"shift\",\"state\":23},\"delete\":{\"type\":\"shift\",\"state\":21},\"append\":{\"type\":\"shift\",\"state\":22},\"true\":{\"type\":\"shift\",\"state\":26},\"false\":{\"type\":\"shift\",\"state\":27},\"null\":{\"type\":\"shift\",\"state\":28},\"string\":{\"type\":\"shift\",\"state\":29},\"number\":{\"type\":\"shift\",\"state\":30},\"nodeName\":{\"type\":\"shift\",\"state\":24},\"nodeNameVariable\":{\"type\":\"shift\",\"state\":25}},{\"nodeName\":{\"type\":\"shift\",\"state\":118},\"nodeNameVariable\":{\"type\":\"shift\",\"state\":119}},{\"nodeName\":{\"type\":\"shift\",\"state\":42},\"nodeNameVariable\":{\"type\":\"shift\",\"state\":43}},{\"colon\":{\"type\":\"reduce\",\"production\":[\"QUERY_EXPRESSION\",[\"variableName\"]]},\"questionMark\":{\"type\":\"reduce\",\"production\":[\"QUERY_EXPRESSION\",[\"variableName\"]]},\"leftBracket\":{\"type\":\"shift\",\"state\":122}},{\"assign\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeName\"]]},\"colon\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeName\"]]},\"questionMark\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeName\"]]},\"nodeName\":{\"type\":\"shift\",\"state\":86},\"nodeNameVariable\":{\"type\":\"shift\",\"state\":87}},{\"assign\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeNameVariable\"]]},\"colon\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeNameVariable\"]]},\"questionMark\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeNameVariable\"]]},\"nodeName\":{\"type\":\"shift\",\"state\":86},\"nodeNameVariable\":{\"type\":\"shift\",\"state\":87}},{\"colon\":{\"type\":\"reduce\",\"production\":[\"ATOM_DATA\",[\"true\"]]},\"questionMark\":{\"type\":\"reduce\",\"production\":[\"ATOM_DATA\",[\"true\"]]}},{\"colon\":{\"type\":\"reduce\",\"production\":[\"ATOM_DATA\",[\"false\"]]},\"questionMark\":{\"type\":\"reduce\",\"production\":[\"ATOM_DATA\",[\"false\"]]}},{\"colon\":{\"type\":\"reduce\",\"production\":[\"ATOM_DATA\",[\"null\"]]},\"questionMark\":{\"type\":\"reduce\",\"production\":[\"ATOM_DATA\",[\"null\"]]}},{\"colon\":{\"type\":\"reduce\",\"production\":[\"ATOM_DATA\",[\"string\"]]},\"questionMark\":{\"type\":\"reduce\",\"production\":[\"ATOM_DATA\",[\"string\"]]}},{\"colon\":{\"type\":\"reduce\",\"production\":[\"ATOM_DATA\",[\"number\"]]},\"questionMark\":{\"type\":\"reduce\",\"production\":[\"ATOM_DATA\",[\"number\"]]}},{\"colon\":{\"type\":\"shift\",\"state\":126},\"questionMark\":{\"type\":\"shift\",\"state\":125}},{\"colon\":{\"type\":\"reduce\",\"production\":[\"EXPRESSION\",[\"CONDITION_EXPRESSION\"]]},\"questionMark\":{\"type\":\"reduce\",\"production\":[\"EXPRESSION\",[\"CONDITION_EXPRESSION\"]]}},{\"colon\":{\"type\":\"reduce\",\"production\":[\"EXPRESSION\",[\"UPDATE_EXPRESSION\"]]},\"questionMark\":{\"type\":\"reduce\",\"production\":[\"EXPRESSION\",[\"UPDATE_EXPRESSION\"]]}},{\"colon\":{\"type\":\"reduce\",\"production\":[\"EXPRESSION\",[\"QUERY_EXPRESSION\"]]},\"questionMark\":{\"type\":\"reduce\",\"production\":[\"EXPRESSION\",[\"QUERY_EXPRESSION\"]]}},{\"colon\":{\"type\":\"reduce\",\"production\":[\"QUERY_EXPRESSION\",[\"PATH\"]]},\"questionMark\":{\"type\":\"reduce\",\"production\":[\"QUERY_EXPRESSION\",[\"PATH\"]]},\"assign\":{\"type\":\"shift\",\"state\":127}},{\"colon\":{\"type\":\"reduce\",\"production\":[\"QUERY_EXPRESSION\",[\"ATOM_DATA\"]]},\"questionMark\":{\"type\":\"reduce\",\"production\":[\"QUERY_EXPRESSION\",[\"ATOM_DATA\"]]}},{\"$\":{\"type\":\"reduce\",\"production\":[\"UPDATE_EXPRESSION\",[\"PATH\",\"assign\",\"QUERY_EXPRESSION\"]]},\"questionMark\":{\"type\":\"reduce\",\"production\":[\"UPDATE_EXPRESSION\",[\"PATH\",\"assign\",\"QUERY_EXPRESSION\"]]},\"semicolon\":{\"type\":\"reduce\",\"production\":[\"UPDATE_EXPRESSION\",[\"PATH\",\"assign\",\"QUERY_EXPRESSION\"]]}},{\"$\":{\"type\":\"reduce\",\"production\":[\"QUERY_EXPRESSION\",[\"PATH\"]]},\"questionMark\":{\"type\":\"reduce\",\"production\":[\"QUERY_EXPRESSION\",[\"PATH\"]]},\"semicolon\":{\"type\":\"reduce\",\"production\":[\"QUERY_EXPRESSION\",[\"PATH\"]]}},{\"questionMark\":{\"type\":\"reduce\",\"production\":[\"EXPRESSION\",[\"leftBrace\",\"PROGRAM\",\"rightBrace\"]]},\"rightBrace\":{\"type\":\"reduce\",\"production\":[\"EXPRESSION\",[\"leftBrace\",\"PROGRAM\",\"rightBrace\"]]},\"semicolon\":{\"type\":\"reduce\",\"production\":[\"EXPRESSION\",[\"leftBrace\",\"PROGRAM\",\"rightBrace\"]]}},{\"questionMark\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeName\",\"PATH\"]]},\"rightBrace\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeName\",\"PATH\"]]},\"semicolon\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeName\",\"PATH\"]]}},{\"questionMark\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeNameVariable\",\"PATH\"]]},\"rightBrace\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeNameVariable\",\"PATH\"]]},\"semicolon\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeNameVariable\",\"PATH\"]]}},{\"variableName\":{\"type\":\"shift\",\"state\":23},\"true\":{\"type\":\"shift\",\"state\":26},\"false\":{\"type\":\"shift\",\"state\":27},\"null\":{\"type\":\"shift\",\"state\":28},\"string\":{\"type\":\"shift\",\"state\":29},\"number\":{\"type\":\"shift\",\"state\":30},\"nodeName\":{\"type\":\"shift\",\"state\":52},\"nodeNameVariable\":{\"type\":\"shift\",\"state\":53}},{\"questionMark\":{\"type\":\"reduce\",\"production\":[\"QUERY_EXPRESSION\",[\"variableName\",\"leftBracket\",\"rightBracket\"]]},\"rightBrace\":{\"type\":\"reduce\",\"production\":[\"QUERY_EXPRESSION\",[\"variableName\",\"leftBracket\",\"rightBracket\"]]},\"semicolon\":{\"type\":\"reduce\",\"production\":[\"QUERY_EXPRESSION\",[\"variableName\",\"leftBracket\",\"rightBracket\"]]}},{\"rightBracket\":{\"type\":\"shift\",\"state\":129}},{\"rightBrace\":{\"type\":\"reduce\",\"production\":[\"EXPRESSION_LIST\",[\"EXPRESSION\",\"semicolon\",\"EXPRESSION_LIST\"]]}},{\"colon\":{\"type\":\"shift\",\"state\":130},\"questionMark\":{\"type\":\"shift\",\"state\":125}},{\"questionMark\":{\"type\":\"reduce\",\"production\":[\"UPDATE_EXPRESSION\",[\"PATH\",\"assign\",\"QUERY_EXPRESSION\"]]},\"rightBrace\":{\"type\":\"reduce\",\"production\":[\"UPDATE_EXPRESSION\",[\"PATH\",\"assign\",\"QUERY_EXPRESSION\"]]},\"semicolon\":{\"type\":\"reduce\",\"production\":[\"UPDATE_EXPRESSION\",[\"PATH\",\"assign\",\"QUERY_EXPRESSION\"]]}},{\"questionMark\":{\"type\":\"reduce\",\"production\":[\"QUERY_EXPRESSION\",[\"PATH\"]]},\"rightBrace\":{\"type\":\"reduce\",\"production\":[\"QUERY_EXPRESSION\",[\"PATH\"]]},\"semicolon\":{\"type\":\"reduce\",\"production\":[\"QUERY_EXPRESSION\",[\"PATH\"]]}},{\"$\":{\"type\":\"reduce\",\"production\":[\"UPDATE_EXPRESSION\",[\"append\",\"PATH\",\"assign\",\"QUERY_EXPRESSION\"]]},\"questionMark\":{\"type\":\"reduce\",\"production\":[\"UPDATE_EXPRESSION\",[\"append\",\"PATH\",\"assign\",\"QUERY_EXPRESSION\"]]},\"semicolon\":{\"type\":\"reduce\",\"production\":[\"UPDATE_EXPRESSION\",[\"append\",\"PATH\",\"assign\",\"QUERY_EXPRESSION\"]]}},{\"rightBracket\":{\"type\":\"shift\",\"state\":131},\"variableName\":{\"type\":\"shift\",\"state\":68},\"true\":{\"type\":\"shift\",\"state\":72},\"false\":{\"type\":\"shift\",\"state\":73},\"null\":{\"type\":\"shift\",\"state\":74},\"string\":{\"type\":\"shift\",\"state\":75},\"number\":{\"type\":\"shift\",\"state\":76},\"nodeName\":{\"type\":\"shift\",\"state\":70},\"nodeNameVariable\":{\"type\":\"shift\",\"state\":71}},{\"comma\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeName\",\"PATH\"]]},\"rightBracket\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeName\",\"PATH\"]]}},{\"comma\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeNameVariable\",\"PATH\"]]},\"rightBracket\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeNameVariable\",\"PATH\"]]}},{\"variableName\":{\"type\":\"shift\",\"state\":68},\"true\":{\"type\":\"shift\",\"state\":72},\"false\":{\"type\":\"shift\",\"state\":73},\"null\":{\"type\":\"shift\",\"state\":74},\"string\":{\"type\":\"shift\",\"state\":75},\"number\":{\"type\":\"shift\",\"state\":76},\"nodeName\":{\"type\":\"shift\",\"state\":70},\"nodeNameVariable\":{\"type\":\"shift\",\"state\":71}},{\"$\":{\"type\":\"reduce\",\"production\":[\"QUERY_EXPRESSION\",[\"variableName\",\"leftBracket\",\"QUERY_EXPRESSION_LIST\",\"rightBracket\"]]},\"questionMark\":{\"type\":\"reduce\",\"production\":[\"QUERY_EXPRESSION\",[\"variableName\",\"leftBracket\",\"QUERY_EXPRESSION_LIST\",\"rightBracket\"]]},\"semicolon\":{\"type\":\"reduce\",\"production\":[\"QUERY_EXPRESSION\",[\"variableName\",\"leftBracket\",\"QUERY_EXPRESSION_LIST\",\"rightBracket\"]]}},{\"rightBrace\":{\"type\":\"shift\",\"state\":134}},{\"colon\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeName\"]]},\"questionMark\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeName\"]]},\"nodeName\":{\"type\":\"shift\",\"state\":118},\"nodeNameVariable\":{\"type\":\"shift\",\"state\":119}},{\"colon\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeNameVariable\"]]},\"questionMark\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeNameVariable\"]]},\"nodeName\":{\"type\":\"shift\",\"state\":118},\"nodeNameVariable\":{\"type\":\"shift\",\"state\":119}},{\"colon\":{\"type\":\"reduce\",\"production\":[\"UPDATE_EXPRESSION\",[\"delete\",\"PATH\"]]},\"questionMark\":{\"type\":\"reduce\",\"production\":[\"UPDATE_EXPRESSION\",[\"delete\",\"PATH\"]]}},{\"assign\":{\"type\":\"shift\",\"state\":137}},{\"rightBracket\":{\"type\":\"shift\",\"state\":138},\"variableName\":{\"type\":\"shift\",\"state\":68},\"true\":{\"type\":\"shift\",\"state\":72},\"false\":{\"type\":\"shift\",\"state\":73},\"null\":{\"type\":\"shift\",\"state\":74},\"string\":{\"type\":\"shift\",\"state\":75},\"number\":{\"type\":\"shift\",\"state\":76},\"nodeName\":{\"type\":\"shift\",\"state\":70},\"nodeNameVariable\":{\"type\":\"shift\",\"state\":71}},{\"assign\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeName\",\"PATH\"]]},\"colon\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeName\",\"PATH\"]]},\"questionMark\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeName\",\"PATH\"]]}},{\"assign\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeNameVariable\",\"PATH\"]]},\"colon\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeNameVariable\",\"PATH\"]]},\"questionMark\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeNameVariable\",\"PATH\"]]}},{\"colon\":{\"type\":\"reduce\",\"production\":[\"EXPRESSION\",[]]},\"questionMark\":{\"type\":\"reduce\",\"production\":[\"EXPRESSION\",[]]},\"leftBrace\":{\"type\":\"shift\",\"state\":82},\"variableName\":{\"type\":\"shift\",\"state\":85},\"delete\":{\"type\":\"shift\",\"state\":83},\"append\":{\"type\":\"shift\",\"state\":84},\"true\":{\"type\":\"shift\",\"state\":88},\"false\":{\"type\":\"shift\",\"state\":89},\"null\":{\"type\":\"shift\",\"state\":90},\"string\":{\"type\":\"shift\",\"state\":91},\"number\":{\"type\":\"shift\",\"state\":92},\"nodeName\":{\"type\":\"shift\",\"state\":86},\"nodeNameVariable\":{\"type\":\"shift\",\"state\":87}},{\"$\":{\"type\":\"reduce\",\"production\":[\"EXPRESSION\",[]]},\"questionMark\":{\"type\":\"reduce\",\"production\":[\"EXPRESSION\",[]]},\"semicolon\":{\"type\":\"reduce\",\"production\":[\"EXPRESSION\",[]]},\"leftBrace\":{\"type\":\"shift\",\"state\":1},\"variableName\":{\"type\":\"shift\",\"state\":4},\"delete\":{\"type\":\"shift\",\"state\":2},\"append\":{\"type\":\"shift\",\"state\":3},\"true\":{\"type\":\"shift\",\"state\":7},\"false\":{\"type\":\"shift\",\"state\":8},\"null\":{\"type\":\"shift\",\"state\":9},\"string\":{\"type\":\"shift\",\"state\":10},\"number\":{\"type\":\"shift\",\"state\":11},\"nodeName\":{\"type\":\"shift\",\"state\":5},\"nodeNameVariable\":{\"type\":\"shift\",\"state\":6}},{\"variableName\":{\"type\":\"shift\",\"state\":85},\"true\":{\"type\":\"shift\",\"state\":88},\"false\":{\"type\":\"shift\",\"state\":89},\"null\":{\"type\":\"shift\",\"state\":90},\"string\":{\"type\":\"shift\",\"state\":91},\"number\":{\"type\":\"shift\",\"state\":92},\"nodeName\":{\"type\":\"shift\",\"state\":118},\"nodeNameVariable\":{\"type\":\"shift\",\"state\":119}},{\"questionMark\":{\"type\":\"reduce\",\"production\":[\"UPDATE_EXPRESSION\",[\"append\",\"PATH\",\"assign\",\"QUERY_EXPRESSION\"]]},\"rightBrace\":{\"type\":\"reduce\",\"production\":[\"UPDATE_EXPRESSION\",[\"append\",\"PATH\",\"assign\",\"QUERY_EXPRESSION\"]]},\"semicolon\":{\"type\":\"reduce\",\"production\":[\"UPDATE_EXPRESSION\",[\"append\",\"PATH\",\"assign\",\"QUERY_EXPRESSION\"]]}},{\"questionMark\":{\"type\":\"reduce\",\"production\":[\"QUERY_EXPRESSION\",[\"variableName\",\"leftBracket\",\"QUERY_EXPRESSION_LIST\",\"rightBracket\"]]},\"rightBrace\":{\"type\":\"reduce\",\"production\":[\"QUERY_EXPRESSION\",[\"variableName\",\"leftBracket\",\"QUERY_EXPRESSION_LIST\",\"rightBracket\"]]},\"semicolon\":{\"type\":\"reduce\",\"production\":[\"QUERY_EXPRESSION\",[\"variableName\",\"leftBracket\",\"QUERY_EXPRESSION_LIST\",\"rightBracket\"]]}},{\"questionMark\":{\"type\":\"reduce\",\"production\":[\"EXPRESSION\",[]]},\"rightBrace\":{\"type\":\"reduce\",\"production\":[\"EXPRESSION\",[]]},\"semicolon\":{\"type\":\"reduce\",\"production\":[\"EXPRESSION\",[]]},\"leftBrace\":{\"type\":\"shift\",\"state\":20},\"variableName\":{\"type\":\"shift\",\"state\":23},\"delete\":{\"type\":\"shift\",\"state\":21},\"append\":{\"type\":\"shift\",\"state\":22},\"true\":{\"type\":\"shift\",\"state\":26},\"false\":{\"type\":\"shift\",\"state\":27},\"null\":{\"type\":\"shift\",\"state\":28},\"string\":{\"type\":\"shift\",\"state\":29},\"number\":{\"type\":\"shift\",\"state\":30},\"nodeName\":{\"type\":\"shift\",\"state\":24},\"nodeNameVariable\":{\"type\":\"shift\",\"state\":25}},{\"comma\":{\"type\":\"reduce\",\"production\":[\"QUERY_EXPRESSION\",[\"variableName\",\"leftBracket\",\"rightBracket\"]]},\"rightBracket\":{\"type\":\"reduce\",\"production\":[\"QUERY_EXPRESSION\",[\"variableName\",\"leftBracket\",\"rightBracket\"]]}},{\"rightBracket\":{\"type\":\"shift\",\"state\":145}},{\"rightBracket\":{\"type\":\"reduce\",\"production\":[\"QUERY_EXPRESSION_LIST\",[\"QUERY_EXPRESSION\",\"comma\",\"QUERY_EXPRESSION_LIST\"]]}},{\"colon\":{\"type\":\"reduce\",\"production\":[\"EXPRESSION\",[\"leftBrace\",\"PROGRAM\",\"rightBrace\"]]},\"questionMark\":{\"type\":\"reduce\",\"production\":[\"EXPRESSION\",[\"leftBrace\",\"PROGRAM\",\"rightBrace\"]]}},{\"colon\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeName\",\"PATH\"]]},\"questionMark\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeName\",\"PATH\"]]}},{\"colon\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeNameVariable\",\"PATH\"]]},\"questionMark\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeNameVariable\",\"PATH\"]]}},{\"variableName\":{\"type\":\"shift\",\"state\":85},\"true\":{\"type\":\"shift\",\"state\":88},\"false\":{\"type\":\"shift\",\"state\":89},\"null\":{\"type\":\"shift\",\"state\":90},\"string\":{\"type\":\"shift\",\"state\":91},\"number\":{\"type\":\"shift\",\"state\":92},\"nodeName\":{\"type\":\"shift\",\"state\":118},\"nodeNameVariable\":{\"type\":\"shift\",\"state\":119}},{\"colon\":{\"type\":\"reduce\",\"production\":[\"QUERY_EXPRESSION\",[\"variableName\",\"leftBracket\",\"rightBracket\"]]},\"questionMark\":{\"type\":\"reduce\",\"production\":[\"QUERY_EXPRESSION\",[\"variableName\",\"leftBracket\",\"rightBracket\"]]}},{\"rightBracket\":{\"type\":\"shift\",\"state\":147}},{\"colon\":{\"type\":\"shift\",\"state\":148},\"questionMark\":{\"type\":\"shift\",\"state\":125}},{\"$\":{\"type\":\"reduce\",\"production\":[\"CONDITION_EXPRESSION\",[\"EXPRESSION\",\"questionMark\",\"EXPRESSION\",\"colon\",\"EXPRESSION\"]]},\"questionMark\":{\"type\":\"shift\",\"state\":49},\"semicolon\":{\"type\":\"reduce\",\"production\":[\"CONDITION_EXPRESSION\",[\"EXPRESSION\",\"questionMark\",\"EXPRESSION\",\"colon\",\"EXPRESSION\"]]}},{\"colon\":{\"type\":\"reduce\",\"production\":[\"UPDATE_EXPRESSION\",[\"PATH\",\"assign\",\"QUERY_EXPRESSION\"]]},\"questionMark\":{\"type\":\"reduce\",\"production\":[\"UPDATE_EXPRESSION\",[\"PATH\",\"assign\",\"QUERY_EXPRESSION\"]]}},{\"colon\":{\"type\":\"reduce\",\"production\":[\"QUERY_EXPRESSION\",[\"PATH\"]]},\"questionMark\":{\"type\":\"reduce\",\"production\":[\"QUERY_EXPRESSION\",[\"PATH\"]]}},{\"questionMark\":{\"type\":\"shift\",\"state\":61},\"rightBrace\":{\"type\":\"reduce\",\"production\":[\"CONDITION_EXPRESSION\",[\"EXPRESSION\",\"questionMark\",\"EXPRESSION\",\"colon\",\"EXPRESSION\"]]},\"semicolon\":{\"type\":\"reduce\",\"production\":[\"CONDITION_EXPRESSION\",[\"EXPRESSION\",\"questionMark\",\"EXPRESSION\",\"colon\",\"EXPRESSION\"]]}},{\"comma\":{\"type\":\"reduce\",\"production\":[\"QUERY_EXPRESSION\",[\"variableName\",\"leftBracket\",\"QUERY_EXPRESSION_LIST\",\"rightBracket\"]]},\"rightBracket\":{\"type\":\"reduce\",\"production\":[\"QUERY_EXPRESSION\",[\"variableName\",\"leftBracket\",\"QUERY_EXPRESSION_LIST\",\"rightBracket\"]]}},{\"colon\":{\"type\":\"reduce\",\"production\":[\"UPDATE_EXPRESSION\",[\"append\",\"PATH\",\"assign\",\"QUERY_EXPRESSION\"]]},\"questionMark\":{\"type\":\"reduce\",\"production\":[\"UPDATE_EXPRESSION\",[\"append\",\"PATH\",\"assign\",\"QUERY_EXPRESSION\"]]}},{\"colon\":{\"type\":\"reduce\",\"production\":[\"QUERY_EXPRESSION\",[\"variableName\",\"leftBracket\",\"QUERY_EXPRESSION_LIST\",\"rightBracket\"]]},\"questionMark\":{\"type\":\"reduce\",\"production\":[\"QUERY_EXPRESSION\",[\"variableName\",\"leftBracket\",\"QUERY_EXPRESSION_LIST\",\"rightBracket\"]]}},{\"colon\":{\"type\":\"reduce\",\"production\":[\"EXPRESSION\",[]]},\"questionMark\":{\"type\":\"reduce\",\"production\":[\"EXPRESSION\",[]]},\"leftBrace\":{\"type\":\"shift\",\"state\":82},\"variableName\":{\"type\":\"shift\",\"state\":85},\"delete\":{\"type\":\"shift\",\"state\":83},\"append\":{\"type\":\"shift\",\"state\":84},\"true\":{\"type\":\"shift\",\"state\":88},\"false\":{\"type\":\"shift\",\"state\":89},\"null\":{\"type\":\"shift\",\"state\":90},\"string\":{\"type\":\"shift\",\"state\":91},\"number\":{\"type\":\"shift\",\"state\":92},\"nodeName\":{\"type\":\"shift\",\"state\":86},\"nodeNameVariable\":{\"type\":\"shift\",\"state\":87}},{\"colon\":{\"type\":\"reduce\",\"production\":[\"CONDITION_EXPRESSION\",[\"EXPRESSION\",\"questionMark\",\"EXPRESSION\",\"colon\",\"EXPRESSION\"]]},\"questionMark\":{\"type\":\"shift\",\"state\":125}}]}","module.exports = {\n    P_PROGRAM: 'PROGRAM := EXPRESSION_LIST',\n\n    P_EXPRESSION_LIST_0: 'EXPRESSION_LIST := EXPRESSION',\n    P_EXPRESSION_LIST_1: 'EXPRESSION_LIST := EXPRESSION semicolon EXPRESSION_LIST',\n\n    P_EXPRESSION_0: 'EXPRESSION := QUERY_EXPRESSION',\n    P_EXPRESSION_1: 'EXPRESSION := UPDATE_EXPRESSION',\n    P_EXPRESSION_2: 'EXPRESSION := ',\n    P_EXPRESSION_3: 'EXPRESSION := leftBrace PROGRAM rightBrace',\n    P_EXPRESSION_4: 'EXPRESSION := CONDITION_EXPRESSION',\n\n    P_CONDITION_EXPRESSION: 'CONDITION_EXPRESSION := EXPRESSION questionMark EXPRESSION colon EXPRESSION',\n\n    P_UPDATE_EXPRESSION_0: 'UPDATE_EXPRESSION := PATH assign QUERY_EXPRESSION',\n    P_UPDATE_EXPRESSION_1: 'UPDATE_EXPRESSION := delete PATH',\n    P_UPDATE_EXPRESSION_2: 'UPDATE_EXPRESSION := append PATH assign QUERY_EXPRESSION',\n\n    P_QUERY_EXPRESSION_0: 'QUERY_EXPRESSION := ATOM_DATA',\n    P_QUERY_EXPRESSION_1: 'QUERY_EXPRESSION := variableName',\n    P_QUERY_EXPRESSION_2: 'QUERY_EXPRESSION := PATH',\n    P_QUERY_EXPRESSION_3: 'QUERY_EXPRESSION := variableName leftBracket rightBracket',\n    P_QUERY_EXPRESSION_4: 'QUERY_EXPRESSION := variableName leftBracket QUERY_EXPRESSION_LIST rightBracket',\n\n    P_QUERY_EXPRESSION_LIST_0: 'QUERY_EXPRESSION_LIST := QUERY_EXPRESSION',\n    P_QUERY_EXPRESSION_LIST_1: 'QUERY_EXPRESSION_LIST := QUERY_EXPRESSION comma QUERY_EXPRESSION_LIST',\n\n    P_PATH_0: 'PATH := nodeName',\n    P_PATH_1: 'PATH := nodeName PATH',\n    P_PATH_2: 'PATH := nodeNameVariable',\n    P_PATH_3: 'PATH := nodeNameVariable PATH',\n\n    P_ATOM_DATA_0: 'ATOM_DATA := true',\n    P_ATOM_DATA_1: 'ATOM_DATA := false',\n    P_ATOM_DATA_2: 'ATOM_DATA := null',\n    P_ATOM_DATA_3: 'ATOM_DATA := string',\n    P_ATOM_DATA_4: 'ATOM_DATA := number',\n\n    T_EXPRESSION_LIST: 'expresionList',\n    T_CONDITION: 'condition',\n    T_ATOM: 'atom',\n    T_PATH: 'path',\n    T_FUNCTION: 'function',\n    T_VARIABLE_NAME: 'variableName',\n    T_ASSIGN: 'assign',\n    T_DELETE: 'delete',\n    T_APPEND: 'append',\n    T_NODE_NAME: 'nodeName',\n    T_NODE_NAME_VARIABLE: 'nodeNameVariable',\n\n    A_DEFAULT: 'default'\n};\n","'use strict';\n\nconst parser = require('./parser');\nconst {\n    checkAST,\n    runTimeCheck,\n    getVariable\n} = require('./stub');\n\nconst {\n    T_CONDITION,\n    T_ATOM,\n    T_PATH,\n    T_ASSIGN,\n    T_DELETE,\n    T_APPEND,\n    T_VARIABLE_NAME,\n    T_FUNCTION,\n    T_NODE_NAME,\n    T_NODE_NAME_VARIABLE,\n    T_EXPRESSION_LIST\n} = require('./const');\n\nconst executeAST = (ast, {\n    queryByPath,\n    setByPath,\n    removeByPath,\n    appendByPath,\n    variableMap = {},\n    variableStub = {},\n    skipCheck = false\n}) => {\n    // TODO check params\n    // check variableStub\n\n    if (!skipCheck) {\n        runTimeCheck(variableStub, variableMap);\n    }\n\n    let open = [{\n        node: ast,\n        visited: false\n    }];\n    let valueStack = [];\n\n    while (open.length) {\n        let top = open[open.length - 1];\n        let topNode = top.node;\n\n        if (topNode.type === T_EXPRESSION_LIST) {\n            if (top.visited) {\n                // get value from value stack\n                let expValues = [];\n                for (let i = 0; i < topNode.value.length; i++) {\n                    expValues.unshift(valueStack.pop());\n                }\n                valueStack.push(expValues[expValues.length - 1]);\n                open.pop();\n            } else {\n                top.visited = true;\n                for (let i = topNode.value.length - 1; i >= 0; i--) {\n                    open.push({\n                        node: topNode.value[i],\n                        visited: false\n                    });\n                }\n            }\n        } else if (topNode.type === T_CONDITION) {\n            const {\n                condition,\n                branch1,\n                branch2\n            } = topNode.value;\n            // resolve condition and then decide to run which branch\n            if (top.visited === false) {\n                top.visited = 'condition';\n                open.push({\n                    node: condition,\n                    visited: false\n                });\n            } else if (top.visited === 'condition') {\n                top.visited = 'branch';\n                const conditionRet = valueStack.pop();\n                if (conditionRet) {\n                    open.push({\n                        node: branch1,\n                        visited: false\n                    });\n                } else {\n                    open.push({\n                        node: branch2,\n                        visited: false\n                    });\n                }\n            } else if (top.visited === 'branch') {\n                open.pop();\n            }\n        } else if (topNode.type === T_ATOM) {\n            valueStack.push(topNode.value);\n            open.pop();\n        } else if (topNode.type === T_VARIABLE_NAME) { // pickup variable\n            let variableName = topNode.value;\n            let variableValue = getVariable(variableName, variableMap, variableStub);\n            valueStack.push(variableValue);\n            open.pop();\n        } else if (topNode.type === T_PATH) {\n            valueStack.push(queryByPath(resolvePath(topNode.value, variableMap)));\n            open.pop();\n        } else if (topNode.type === T_FUNCTION) {\n            let {\n                funName,\n                params\n            } = topNode.value;\n\n            if (top.visited) {\n                // get value from value stack\n                let paramValues = [];\n                for (let i = 0; i < params.length; i++) {\n                    paramValues.push(valueStack.pop());\n                }\n                // TODO missing funName as function exception\n                valueStack.push(variableMap[funName](...paramValues));\n                open.pop();\n            } else {\n                top.visited = true;\n                for (let i = 0; i < params.length; i++) {\n                    open.push({\n                        node: params[i],\n                        visited: false\n                    });\n                }\n            }\n        } else if (topNode.type === T_ASSIGN) {\n            let {\n                path,\n                value\n            } = topNode.value;\n\n            if (top.visited) {\n                let assignValue = valueStack.pop();\n                valueStack.push(setByPath(resolvePath(path.value, variableMap), assignValue));\n                open.pop();\n            } else {\n                top.visited = true;\n                open.push({\n                    node: value,\n                    visited: false\n                });\n            }\n        } else if (topNode.type === T_DELETE) {\n            let {\n                path\n            } = topNode.value;\n\n            valueStack.push(removeByPath(resolvePath(path.value, variableMap)));\n            open.pop();\n        } else if (topNode.type === T_APPEND) {\n            let {\n                path,\n                value\n            } = topNode.value;\n\n            if (top.visited) {\n                let assignValue = valueStack.pop();\n                valueStack.push(appendByPath(resolvePath(path.value, variableMap), assignValue));\n                open.pop();\n            } else {\n                top.visited = true;\n                open.push({\n                    node: value,\n                    visited: false\n                });\n            }\n        }\n    }\n\n    return valueStack[valueStack.length - 1];\n};\n\nlet resolvePath = (path, variableMap) => {\n    let ret = [];\n    for (let i = 0; i < path.length; i++) {\n        let {\n            type,\n            value\n        } = path[i];\n        if (type === T_NODE_NAME) {\n            ret.push(value);\n        } else if (type === T_NODE_NAME_VARIABLE) {\n            ret.push(variableMap[value]);\n        }\n    }\n\n    return ret;\n};\n\nlet parseStrToAst = (str) => {\n    let handleChunk = parser();\n    if (str) {\n        handleChunk(str);\n    }\n    return handleChunk(null);\n};\n\nmodule.exports = {\n    parser,\n    parseStrToAst,\n    executeAST,\n    checkAST\n};\n","'use strict';\n\nconst streamTokenSpliter = require('stream-token-parser');\nconst {\n    LR\n} = require('syntaxer');\nconst {\n    getProductionId,\n    processTokens,\n} = require('./util');\nconst tokenTypes = require('../grammer/tokenTypes');\nconst {\n    ACTION,\n    GOTO\n} = require('../res/lr1Table');\n\nconst {\n    P_PROGRAM,\n\n    P_EXPRESSION_LIST_0,\n    P_EXPRESSION_LIST_1,\n\n    P_EXPRESSION_0,\n    P_EXPRESSION_1,\n    P_EXPRESSION_2,\n    P_EXPRESSION_3,\n    P_EXPRESSION_4,\n\n    P_CONDITION_EXPRESSION,\n\n    P_UPDATE_EXPRESSION_0,\n    P_UPDATE_EXPRESSION_1,\n    P_UPDATE_EXPRESSION_2,\n\n    P_QUERY_EXPRESSION_0,\n    P_QUERY_EXPRESSION_1,\n    P_QUERY_EXPRESSION_2,\n    P_QUERY_EXPRESSION_3,\n    P_QUERY_EXPRESSION_4,\n\n    P_QUERY_EXPRESSION_LIST_0,\n    P_QUERY_EXPRESSION_LIST_1,\n\n    P_PATH_0,\n    P_PATH_1,\n    P_PATH_2,\n    P_PATH_3,\n\n    P_ATOM_DATA_0,\n    P_ATOM_DATA_1,\n    P_ATOM_DATA_2,\n    P_ATOM_DATA_3,\n    P_ATOM_DATA_4,\n\n    T_EXPRESSION_LIST,\n    T_CONDITION,\n    T_ATOM,\n    T_PATH,\n    T_ASSIGN,\n    T_DELETE,\n    T_APPEND,\n    T_VARIABLE_NAME,\n    T_FUNCTION,\n    T_NODE_NAME,\n    T_NODE_NAME_VARIABLE\n} = require('./const');\n\nmodule.exports = () => {\n    let tokenSpliter = streamTokenSpliter.parser(tokenTypes);\n\n    // TODO optimization AST\n    let lrParse = LR(ACTION, GOTO, {\n        // when reduce prodcution, translate at the sametime\n        reduceHandler: (production, midNode) => {\n            switch (getProductionId(production)) {\n                case P_PROGRAM:\n                    midNode.value = {\n                        type: T_EXPRESSION_LIST,\n                        value: midNode.children[0].value\n                    };\n                    break;\n\n                case P_EXPRESSION_LIST_0:\n                    midNode.value = midNode.children[0].value === null ? [] : [midNode.children[0].value];\n                    break;\n\n                case P_EXPRESSION_LIST_1:\n                    midNode.value = (midNode.children[0].value === null ? [] : [midNode.children[0].value]).concat(midNode.children[2].value);\n                    break;\n\n                case P_EXPRESSION_0:\n                    midNode.value = midNode.children[0].value;\n                    break;\n\n                case P_EXPRESSION_1:\n                    midNode.value = midNode.children[0].value;\n                    break;\n\n                case P_EXPRESSION_2: // empty situation\n                    midNode.value = null;\n                    break;\n\n                case P_EXPRESSION_3: // {program}\n                    midNode.value = midNode.children[1].value;\n                    break;\n                case P_EXPRESSION_4:\n                    midNode.value = midNode.children[0].value;\n                    break;\n\n                case P_CONDITION_EXPRESSION:\n                    midNode.value = {\n                        type: T_CONDITION,\n                        value: {\n                            condition: midNode.children[0].value,\n                            branch1: midNode.children[2].value,\n                            branch2: midNode.children[4].value\n                        }\n                    };\n                    break;\n\n                case P_UPDATE_EXPRESSION_0:\n                    midNode.value = {\n                        type: T_ASSIGN,\n                        value: {\n                            path: midNode.children[0].value,\n                            value: midNode.children[2].value\n                        }\n                    };\n                    break;\n\n                case P_UPDATE_EXPRESSION_1:\n                    midNode.value = {\n                        type: T_DELETE,\n                        value: {\n                            path: midNode.children[1].value,\n                        }\n                    };\n                    break;\n\n                case P_UPDATE_EXPRESSION_2:\n                    midNode.value = {\n                        type: T_APPEND,\n                        value: {\n                            path: midNode.children[1].value,\n                            value: midNode.children[3].value\n                        }\n                    };\n                    break;\n\n                case P_QUERY_EXPRESSION_0:\n                    midNode.value = midNode.children[0].value;\n                    break;\n\n                case P_QUERY_EXPRESSION_1:\n                    midNode.value = {\n                        type: T_VARIABLE_NAME,\n                        value: midNode.children[0].token.text\n                    };\n                    break;\n\n                case P_QUERY_EXPRESSION_2:\n                    midNode.value = midNode.children[0].value;\n                    break;\n\n                case P_QUERY_EXPRESSION_3:\n                    midNode.value = {\n                        type: T_FUNCTION,\n                        value: {\n                            funName: midNode.children[0].token.text,\n                            params: []\n                        }\n                    };\n                    break;\n\n                case P_QUERY_EXPRESSION_4:\n                    midNode.value = {\n                        type: 'function',\n                        value: {\n                            funName: midNode.children[0].token.text,\n                            params: midNode.children[2].value\n                        }\n                    };\n                    break;\n\n                case P_QUERY_EXPRESSION_LIST_0:\n                    midNode.value = [midNode.children[0].value];\n                    break;\n\n                case P_QUERY_EXPRESSION_LIST_1:\n                    midNode.value = [midNode.children[0].value].concat(midNode.children[2].value);\n                    break;\n\n                case P_PATH_0:\n                    midNode.value = {\n                        type: T_PATH,\n                        value: [{\n                            type: T_NODE_NAME,\n                            value: midNode.children[0].token.text.substring(1)\n                        }]\n                    };\n                    break;\n\n                case P_PATH_1:\n                    midNode.value = {\n                        type: T_PATH,\n                        value: [{\n                            type: T_NODE_NAME,\n                            value: midNode.children[0].token.text.substring(1)\n                        }].concat(midNode.children[1].value.value)\n                    };\n                    break;\n\n                case P_PATH_2:\n                    var nodeNameVarTxt = midNode.children[0].token.text;\n                    midNode.value = {\n                        type: T_PATH,\n                        value: [{\n                            type: T_NODE_NAME_VARIABLE,\n                            value: nodeNameVarTxt.substring(2, nodeNameVarTxt.length - 1).trim()\n                        }]\n                    };\n                    break;\n\n                case P_PATH_3:\n                    var nodeNameVarTxt2 = midNode.children[0].token.text;\n                    midNode.value = {\n                        type: T_PATH,\n                        value: [{\n                            type: T_NODE_NAME_VARIABLE,\n                            value: nodeNameVarTxt2.substring(2, nodeNameVarTxt2.length - 1).trim()\n                        }].concat(midNode.children[1].value.value)\n                    };\n                    break;\n\n                case P_ATOM_DATA_0:\n                    midNode.value = {\n                        type: T_ATOM,\n                        value: true\n                    };\n                    break;\n\n                case P_ATOM_DATA_1:\n                    midNode.value = {\n                        type: T_ATOM,\n                        value: false\n                    };\n                    break;\n\n                case P_ATOM_DATA_2:\n                    midNode.value = {\n                        type: T_ATOM,\n                        value: null\n                    };\n                    break;\n\n                case P_ATOM_DATA_3:\n                    var text = midNode.children[0].token.text;\n                    midNode.value = {\n                        type: T_ATOM,\n                        value: JSON.parse(text)\n                    };\n                    break;\n\n                case P_ATOM_DATA_4:\n                    var numText = midNode.children[0].token.text;\n                    midNode.value = {\n                        type: T_ATOM,\n                        value: Number(numText)\n                    };\n                    break;\n            }\n        }\n    });\n\n    // handle chunk data\n    return (chunk) => {\n        let str = chunk && chunk.toString();\n        let tokens = processTokens(tokenSpliter(str));\n\n        for (let i = 0; i < tokens.length; i++) {\n            lrParse(tokens[i]);\n        }\n\n        // means finished chunks\n        if (chunk === null) {\n            let ast = lrParse(null);\n            return ast.children[0].value;\n        }\n    };\n};\n","'use strict';\n\n\n// TODO reuse pfc-compiler\n\nconst {\n    isObject,\n    isFunction,\n    isString\n} = require('./util');\n\nconst {\n    T_ASSIGN,\n    T_DELETE,\n    T_VARIABLE_NAME,\n    T_FUNCTION,\n    T_PATH,\n    T_NODE_NAME_VARIABLE,\n    T_EXPRESSION_LIST,\n    T_CONDITION,\n\n    A_DEFAULT\n} = require('./const');\n\n/**\n *\n * variableStub = {\n *    [variableName]: {\n *       type,\n *       default,  // default value of variable\n *       validate // function used to check dynamic\n *    }\n * }\n *\n *\n * TODO restraints checking\n */\n\n// static check\nlet checkAST = (ast, {\n    variableStub = {}\n} = {}) => {\n    let open = [ast];\n\n    while (open.length) {\n        let top = open.pop();\n        let midType = top.type;\n\n        if (midType === T_EXPRESSION_LIST) {\n            for (let i = 0; i < top.value.length; i++) {\n                open.unshift(top.value[i]);\n            }\n        } else if (midType === T_CONDITION) {\n            open.push(top.value.condition);\n            open.push(top.value.branch1);\n            open.push(top.value.branch2);\n        } else if (midType === T_VARIABLE_NAME) {\n            let varName = top.value;\n            // must exist\n            if (!variableStub.hasOwnProperty(varName)) {\n                throw new Error(`missing variable ${varName} in [${Object.keys(variableStub).join(', ')}]`);\n            }\n        } else if (midType === T_FUNCTION) { // function\n            let {\n                funName,\n                params\n            } = top.value;\n            let stub = variableStub[funName];\n            if (!isObject(stub) || stub.type !== T_FUNCTION) {\n                throw new Error(`missing function ${funName}, please check your variable map. Current variable map has keys [${Object.keys(variableStub).join(', ')}].`);\n            }\n            // push params\n            let paramLen = params.length;\n            for (let i = 0; i < paramLen; i++) {\n                open.push(params[i]);\n            }\n        } else if (midType === T_ASSIGN) {\n            open.push(top.value.path);\n            open.push(top.value.value);\n        } else if (midType === T_DELETE) {\n            open.push(top.value.path);\n        } else if (midType === T_PATH) {\n            let path = top.value;\n            for (let i = 0; i < path.length; i++) {\n                let {\n                    type,\n                    value\n                } = path[i];\n                if (type === T_NODE_NAME_VARIABLE) {\n                    let stub = variableStub[value];\n\n                    if (!isObject(stub) || stub.type !== T_NODE_NAME_VARIABLE) {\n                        throw new Error(`missing type attribute ${T_NODE_NAME_VARIABLE} for ${value}, please check your variable map. Current variable map has keys [${Object.keys(variableStub).join(', ')}].`);\n                    }\n                }\n            }\n        }\n    }\n};\n\nlet runTimeCheck = (variableStub, variableMap) => {\n    for (let name in variableStub) {\n        let stub = variableStub[name];\n        // missing check\n        if (!variableMap.hasOwnProperty(name) && !stub.hasOwnProperty(A_DEFAULT)) {\n            throw new Error(`missing variable ${name} in variableMap whick keys are [${Object.keys(variableMap).join(', ')}].`);\n        }\n\n        // type match\n        if (stub.type === T_FUNCTION && !isFunction(variableMap[name])) {\n            throw new Error(`variable ${name} is not function as expected, please check your variable map. Current variable map has keys [${Object.keys(variableMap).join(', ')}].`);\n        }\n\n        if (stub.type === T_NODE_NAME_VARIABLE && !isString(variableMap[name])) {\n            throw new Error(`variable ${name} is not string as expected, please check your variable map. Current variable map has keys [${Object.keys(variableMap).join(', ')}].`);\n        }\n    }\n};\n\nlet getVariable = (name, variableMap, variableStub) => {\n    let stub = variableStub[name] || {};\n    let value = null;\n    if (variableMap.hasOwnProperty(name)) {\n        value = variableMap[name];\n    } else {\n        // try to using default\n        if (!stub.hasOwnProperty(A_DEFAULT)) {\n            throw new Error(`missing variable ${name}.`);\n        } else {\n            value = stub[A_DEFAULT];\n        }\n    }\n\n    if (isObject(stub) && isFunction(stub.validate)) { // dynamic validation\n        stub.validate(value);\n    }\n\n    return value;\n};\n\nmodule.exports = {\n    checkAST,\n    runTimeCheck,\n    getVariable\n};\n","let getProductionId = (production) => {\n    return `${production[0]} := ${production[1].join(' ')}`;\n};\n\n// ignore whitespace\nlet processTokens = (rawTokens) => {\n    let tokens = [];\n    for (let i = 0; i < rawTokens.length; i++) {\n        let {\n            text,\n            tokenType\n        } = rawTokens[i];\n\n        let name = tokenType.name;\n\n        if (name !== 'whitespace') { // ignore white space\n            tokens.push({\n                text,\n                name\n            });\n        }\n    }\n\n    return tokens;\n};\n\nlet isObject = v => v && typeof v === 'object';\n\nlet isFunction = v => typeof v === 'function';\n\nlet isString = v => typeof v === 'string';\n\nmodule.exports = {\n    getProductionId,\n    processTokens,\n    isObject,\n    isFunction,\n    isString\n};\n","'use strict';\n\nmodule.exports = require('./src');\n\n/**\n * @readme-quick-run\n *\n * ## test tar=js env=browser r_c=spa\n *\n * let {router, queryPager} = spa;\n * let {n, mount} = require('kabanery');\n * mount(n('div id=\"pager\"'), document.body); // pager as contauner\n *\n * let {forward} = router(queryPager({\n *      'page1': {\n *          title: 'page1',\n *          render: () => {\n *              return n('div', 'this is page1');\n *          }\n *      },\n *      'page2': {\n *          render: () => {\n *              return n('div', 'this is page2');\n *          }\n *      }\n * }, 'page1')); // default page is page1\n *\n * module.exports = forward(window.location.href).then(() => {\n *    console.log('page 1 content: ');\n *    console.log(document.getElementById('pager').innerHTML);\n *    return forward('?page=page2').then(() => {\n *      console.log('\\n\\npage 2 content: ');\n *      console.log(document.getElementById('pager').innerHTML);\n *    });\n * });\n */\n","'use strict';\n\nconst {\n  removeChilds\n} = require('doming');\n\nconst {\n  mount\n} = require('kabanery');\n\nconst {\n  parse\n} = require('url');\n\nconst SINGLE_JUMP_PREFIX = 'single://';\n\nconst CONTAINER_ID = 'pager';\n\nconst queryPager = (map = [], index) => {\n  index = initDefaultPage(map, index);\n\n  return (url) => {\n    const urlObject = parse(url, true);\n    const pageName = urlObject.query['page'] || index;\n\n    return map[pageName];\n  };\n};\n\nconst restPager = (map = [], index) => {\n  index = initDefaultPage(map, index);\n\n  return (url) => {\n    const pathname = url.split(/.*:\\/\\//)[1];\n    const pageName = pathname.split('/')[1] || index;\n\n    return map[pageName];\n  };\n};\n\nconst initDefaultPage = (map = [], index) => {\n  if (index === null || index === undefined) {\n    for (const name in map) {\n      index = name;\n      break;\n    }\n  }\n  return index;\n};\n\nconst renderPage = (render, pageEnv, title, containerId) => {\n  return Promise.resolve(render(pageEnv, title)).then((pageNode) => {\n    // TODO pager is the default container, make it configurable\n    const pager = document.getElementById(containerId);\n    // unload old page\n    removeChilds(pager);\n    // add new page\n    mount(pageNode, pager);\n    pager.style = 'display:block;';\n    document.title = title;\n\n    // hash location\n    if (window.location.hash) {\n      const item = document.getElementById(window.location.hash.substring(1));\n      if (item) {\n        window.scrollTo(0, item.offsetTop);\n      }\n    }\n  });\n};\n\n/**\n * pager: (url) => {title, render}\n */\nconst router = (pager, pageEnv, {\n  onSwitchPageStart,\n  onSwitchPageFinished,\n  containerId = CONTAINER_ID\n} = {}) => {\n  let listenFlag = false;\n\n  /**\n   * only entrance for switching pages\n   */\n  const switchPage = (render, pageEnv, title) => {\n    onSwitchPageStart && onSwitchPageStart(render, pageEnv, title);\n    let ret = switchBetweenPages(render, pageEnv, title);\n\n    Promise.resolve(ret).then((data) => {\n      onSwitchPageFinished && onSwitchPageFinished(null, data);\n    }).catch((err) => {\n      onSwitchPageFinished && onSwitchPageFinished(err);\n    });\n\n    return ret;\n  };\n\n  const switchBetweenPages = (render, pageEnv, title) => {\n    let ret = renderPage(render, pageEnv, title, containerId);\n\n    if (!listenFlag) {\n      listenPageSwitch();\n      listenFlag = true;\n    }\n\n    return ret;\n  };\n\n  const forward = (url, {\n    keepLocation\n  } = {}) => {\n    if (!window.history.pushState) {\n      window.location.href = url;\n      return;\n    }\n    let {\n      render,\n      title = '',\n      transitionData = {}\n    } = pager(url);\n\n    if (url !== window.location.href) {\n      window.history.pushState(transitionData, title, url);\n    }\n    if (!keepLocation) {\n      window.scrollTo(0, 0);\n    }\n    return switchPage(render, pageEnv, title);\n  };\n\n  const redirect = (url) => {\n    if (!window.history.pushState) {\n      window.location.href = url;\n      window.location.replace(url);\n      return;\n    }\n    const {\n      render,\n      title = '',\n      transitionData = {}\n    } = pager(url);\n\n    if (url !== window.location.href) {\n      window.history.replaceState(transitionData, title, url);\n    }\n    return switchPage(render, pageEnv);\n  };\n\n  const listenPageSwitch = () => {\n    window.onpopstate = () => {\n      forward(window.location.href);\n    };\n\n    document.addEventListener('click', (e) => {\n      // hack kabanery, TODO fix this hack\n      setTimeout(() => {\n        let target = e.target;\n        // hack kabanery, TODO fix this hack\n        if (e.__stopPropagation) return;\n\n        while (target) {\n          if (target.getAttribute) { // document does not have getAttribute method\n            let url = (target.getAttribute('href') || '').trim();\n            // matched\n            if (url.indexOf(SINGLE_JUMP_PREFIX) === 0) {\n              e.preventDefault();\n              e.stopPropagation();\n\n              forward(url.substring(SINGLE_JUMP_PREFIX.length).trim());\n              break;\n            }\n          }\n          target = target.parentNode;\n        }\n      });\n    });\n  };\n\n  return {\n    forward,\n    redirect,\n    reload: () => {\n      return forward(window.location.href, {\n        keepLocation: true\n      });\n    }\n  };\n};\n\nmodule.exports = {\n  router,\n  queryPager,\n  restPager\n};\n","'use strict';\n\nmodule.exports = require('./src');\n\n/**\n * @readme-doc\n *\n * ## features\n *\n * - simple DOM DSL, construct dom tree quickly\n *\n * - data-driven view, include updating view by data\n *\n * - Just functions, easy to compose\n *\n * [readme-lang:zh]## 特征\n *\n * - 简单的DOM DSL，快速构建DOM结构\n *\n * - 数据驱动视图，包括通过数据更新视图\n *\n * - 以函数为核心，易于复合\n *\n */\n\n/**\n * @readme-quick-run\n *\n * Using method n to construct dom node quickly.\n *\n * [readme-lang:zh]用方法n快速构造dom节点\n *\n * ## test tar=js r_c=kabanery env=browser\n * let {n, mount} = kabanery;\n *\n * mount(n('div', {\n *   id: 'qu',\n *   style: {\n *      backgroundColor: 'red'\n *   }\n * }, [\n *      n('span class=go style=\"font-size:16px\"', 'hello!')\n * ]), document.body);\n *\n * console.log(document.getElementById('qu').outerHTML); // print result\n */\n\n/**\n * @readme-quick-run\n *\n * Basic way to construct a view.\n *\n * [readme-lang:zh]构造一个组件的简单方法\n *\n * ## test tar=js r_c=kabanery env=browser\n * let {view, n, mount} = kabanery;\n *\n * let MyView = view((data) => {\n *      let {type} = data;\n *\n *      return n('div', {\n *         id: 'test1',\n *         style: {\n *            fontSize: 10\n *         }\n *      },[\n *          type === 2 && n('span', 'second'),\n *          type === 3 && n('div', 'third')\n *      ]);\n * });\n *\n * mount(MyView({type: 3}), document.body);\n *\n * console.log(document.getElementById('test1').outerHTML); // print result\n */\n\n/**\n * @readme-quick-run\n *\n * Using update api to update a view.\n *\n * [readme-lang:zh]运用update api去更新一个view\n *\n * ## test tar=js r_c=kabanery env=browser\n * let {view, n, mount} = kabanery;\n *\n * let MyView = view((data, {update}) => {\n *      return n('div', {\n *         id: 'a',\n *         style: {\n *            fontSize: 10\n *         },\n *         onclick: () => {\n *            update('show', !data.show);\n *         }\n *      }, [\n *          data.show && n('div', 'show text')\n *      ]);\n * });\n *\n * mount(MyView({show: false}), document.body);\n *\n * document.getElementById('a').click(); // simulate user action\n * console.log(document.getElementById('a').outerHTML); // print result\n */\n","'use strict';\n\nconst uuidv4 = require('uuid/v4');\n\nconst seed = uuidv4();\n\nmodule.exports = {\n  eventMapHook: `__eventMap_${seed}`,\n  globalEventTypePrefix: `__event_type_id_${seed}_`,\n  stopPropagationFlag: '__stopPropagation'\n};\n","'use strict';\n\nlet {\n  contain\n} = require('bolzano');\n\nlet {\n  eventMapHook,\n  globalEventTypePrefix,\n  stopPropagationFlag\n} = require('../const');\n\nmodule.exports = () => {\n  let docs = [];\n  let eventTypeMap = {};\n  let handlerMap = {};\n\n  let listenEventType = (type) => {\n    if (!eventTypeMap[type]) {\n      updateDocs(type);\n    }\n    eventTypeMap[type] = true;\n  };\n\n    /**\n     * attach document used to accept events\n     */\n  let attachDocument = (doc = document) => {\n    if (!contain(docs, doc)) {\n      for (let type in eventTypeMap) {\n        // prevent multiple version of kabanery to binding multiple times for the same type\n        let id = getGlobalEventTypeId(type);\n        if (!doc[id]) {\n          addEventListenerToDoc(doc, type);\n          doc[id] = true;\n        }\n      }\n      docs.push(doc);\n    }\n  };\n\n  let updateDocs = (type) => {\n    if (!docs.length) {\n      docs.push(document);\n    }\n    for (let i = 0; i < docs.length; i++) {\n      let doc = docs[i];\n      addEventListenerToDoc(doc, type);\n    }\n  };\n\n  let addEventListenerToDoc = (doc, type) => {\n    let handler = null;\n    if (handlerMap[type]) {\n      handler = handlerMap[type];\n    } else {\n      handler = listener(type);\n      handlerMap[type] = handler;\n    }\n    doc.addEventListener(type, handler);\n  };\n\n  let clearEvents = () => {\n    for (let type in eventTypeMap) {\n      removeListenerType(type);\n    }\n  };\n\n  let removeListenerType = (type) => {\n    let handler = handlerMap[type];\n    if (handler) {\n      for (let i = 0; i < docs.length; i++) {\n        let doc = docs[i];\n        doc.removeEventListener(type, handler);\n      }\n      delete handlerMap[type];\n      delete eventTypeMap[type];\n    }\n  };\n\n  let getDocs = () => docs.slice(0);\n\n  /**\n     * e = {\n     *  target,\n     *  stopPropagation [optional]\n     * }\n     */\n  let listener = (type) => function(e) {\n    let ctx = this;\n    let target = e.target;\n\n    // hack the stopPropagration function\n    let oldProp = e.stopPropagation;\n    e.stopPropagation = function(...args) {\n      e[stopPropagationFlag] = true;\n      return oldProp && oldProp.apply(this, args);\n    };\n\n    let nodePath = getNodePath(target);\n\n    for (let i = 0; i < nodePath.length; i++) {\n      let node = nodePath[i];\n      applyNodeHandlers(e, type, node, ctx);\n    }\n  };\n\n  let applyNodeHandlers = (e, type, node, ctx) => {\n    if (e.__stopPropagation) { // event already been stoped by child node\n      return true;\n    }\n\n    let handler = getHandler(type, node);\n    return handler && handler.apply(ctx, [e]);\n  };\n\n  let getHandler = (type, target) => {\n    let eventMap = target && target[eventMapHook];\n    return eventMap && eventMap[type];\n  };\n\n  let dispatchEvent = (type, e) => {\n    let handler = handlerMap[type];\n    handler && handler(e);\n  };\n\n  return {\n    listenEventType,\n    clearEvents,\n    removeListenerType,\n    getDocs,\n    attachDocument,\n    dispatchEvent\n  };\n};\n\n/**\n * get the path of node\n */\nlet getNodePath = (target) => {\n  let paths = [];\n  while (target) {\n    paths.push(target);\n    target = target.parentNode;\n  }\n  return paths;\n};\n\nlet getGlobalEventTypeId = (type) => `${globalEventTypePrefix}${type}`;\n","'use strict';\n\nlet EventMatrix = require('./eventMatrix');\n\nlet {\n  eventMapHook\n} = require('../const');\n\nlet {\n  listenEventType,\n  clearEvents,\n  attachDocument,\n  dispatchEvent\n} = EventMatrix();\n\nlet bindEvents = (node, eventMap) => {\n  // hook event at node\n  node[eventMapHook] = eventMap;\n\n  for (let type in eventMap) {\n    listenEventType(type);\n  }\n};\n\nmodule.exports = {\n  bindEvents,\n  attachDocument,\n  dispatchEvent,\n  clearEvents\n};\n","'use strict';\n\nconst {\n  n,\n  svgn,\n  parseArgs,\n  isKabaneryNode,\n  parseStyle\n} = require('./n');\n\nconst {\n  view\n} = require('./view');\n\nconst {\n  dispatchEvent,\n  clearEvents\n} = require('./event');\n\nconst {\n  toHTML,\n  mount\n} = require('./resolver');\n\nmodule.exports = {\n  n,\n  isKabaneryNode,\n  svgn,\n  view,\n  mount,\n  toHTML,\n\n  parseArgs,\n  parseStyle,\n  dispatchEvent,\n  clearEvents\n};\n","const {\n  isObject,\n  isNode,\n  isFunction\n} = require('../util');\n\nconst parseArgs = require('./parseArgs');\n\nconst parseStyle = require('./parseStyle');\n\nconst KABANERY_NODE = 'kabanery_node';\n\nconst KABANERY_RENDER_NODE = 'kabanery_high_node';\n\nconst isKabaneryNode = (v) => isObject(v) && v.type === KABANERY_NODE;\n\nconst isKabaneryRenderNode = (v) => isObject(v) && v.type === KABANERY_RENDER_NODE;\n\nconst knodeCreator = (elementType) => {\n  return (...args) => {\n    if (isFunction(args[0])) { // render function\n      return createRenderNode(elementType, args);\n    } else {\n      return createKabaneryNode(elementType, args);\n    }\n  };\n};\n\n/**\n * render: (...args) => kabaneryNode\n */\nconst createRenderNode = (elementType, args) => {\n  return {\n    render: args[0],\n    args: args.slice(1),\n    elementType,\n    type: KABANERY_RENDER_NODE,\n  };\n};\n\nconst createKabaneryNode = (elementType, args) => {\n  let {\n    tagName,\n    attributes,\n    childs\n  } = parseArgs(args);\n\n  if (isKabaneryNode(attributes) ||\n    isNode(attributes)) {\n    childs = [attributes];\n    attributes = {};\n  }\n\n  const {\n    attrMap,\n    eventMap\n  } = splitAttribues(attributes);\n\n  return {\n    tagName,\n    attrMap,\n    eventMap,\n    elementType,\n    type: KABANERY_NODE,\n    childNodes: childs,\n  };\n};\n\n/**\n * split event handlers\n */\nlet splitAttribues = (attributes) => {\n  const attrMap = {},\n    eventMap = {};\n  for (const name in attributes) {\n    const item = attributes[name];\n    if (name.indexOf('on') === 0) {\n      eventMap[name.substring(2)] = item;\n    } else {\n      attrMap[name] = item;\n    }\n  }\n  return {\n    attrMap,\n    eventMap\n  };\n};\n\nmodule.exports = {\n  n: knodeCreator('html'),\n  svgn: knodeCreator('svg'),\n  knodeCreator,\n  isKabaneryNode,\n  isKabaneryRenderNode,\n  parseArgs,\n  parseStyle\n};\n","'use strict';\n\nconst parseAttribute = require('./parseAttribute');\n\nconst {\n  isString,\n  isObject,\n  isNode,\n  likeArray,\n  isNumber,\n  isBool\n} = require('../util');\n\nconst parseArgs = (args, {\n  doParseStyle = true\n} = {}) => {\n  let tagName,\n    attributes = {},\n    childExp = [];\n\n  let first = args.shift();\n\n  let parts = splitTagNameAttribute(first);\n\n  if (parts.length > 1) { // not only tagName\n    tagName = parts[0];\n    attributes = parts[1];\n  } else {\n    tagName = first;\n  }\n\n  let next = args.shift();\n\n  let nextAttr = {};\n\n  if (likeArray(next) ||\n        isString(next) ||\n        isNode(next) ||\n        isNumber(next) ||\n        isBool(next)) {\n    childExp = next;\n  } else if (isObject(next)) {\n    nextAttr = next;\n    childExp = args.shift() || [];\n  }\n\n  attributes = parseAttribute(attributes, nextAttr, {\n    doParseStyle\n  });\n\n  let childs = parseChildExp(childExp);\n\n  return {\n    tagName,\n    attributes,\n    childs\n  };\n};\n\nlet splitTagNameAttribute = (str = '') => {\n  if (typeof str !== 'string') return [str];\n\n  let tagName = str.split(' ')[0];\n  let attr = str.substring(tagName.length);\n  attr = attr && attr.trim();\n\n  tagName = tagName.toLowerCase().trim();\n  if (attr) {\n    return [tagName, attr];\n  } else {\n    return [tagName];\n  }\n};\n\nconst parseChildExp = (childExp) => {\n  let ret = [];\n  if (isNode(childExp)) {\n    ret.push(childExp);\n  } else if (likeArray(childExp)) {\n    for (let i = 0; i < childExp.length; i++) {\n      let child = childExp[i];\n      ret = ret.concat(parseChildExp(child));\n    }\n  } else if (childExp) {\n    ret.push(childExp);\n  }\n  return ret;\n};\n\nmodule.exports = parseArgs;\n","'use strict';\n\nlet {\n  isString\n} = require('basetype');\n\nlet parseStyle = require('./parseStyle');\n\nlet {\n  mergeMap\n} = require('bolzano');\n\nconst ITEM_REG = /([\\w-]+)\\s*=\\s*(([\\w-]+)|('.*?')|(\".*?\"))/;\n\n// TODO better key=value grammer\n// TODO refactor with grammerL: class grammer, id grammer, refer some popular grammer\nlet parseAttribute = (attributes, nextAttr, {\n  doParseStyle\n}) => {\n  // key=value key=value\n  // value='abc' value=true value=123 value=\"def\"\n  if (isString(attributes)) {\n    let str = attributes.trim(),\n      kvs = [];\n\n    let stop = false;\n    while (!stop) {\n      let newstr = str.replace(ITEM_REG, (matchStr, $1, $2) => {\n        kvs.push([$1, $2]);\n        return '';\n      }).trim();\n      if (newstr === str) {\n        stop = true;\n      }\n      str = newstr;\n    }\n\n    attributes = {};\n    for (let i = 0; i < kvs.length; i++) {\n      let [key, value] = kvs[i];\n      if (value[0] === '\\'' && value[value.length - 1] === '\\'' ||\n                value[0] === '\"' && value[value.length - 1] === '\"') {\n        value = value.substring(1, value.length - 1);\n      }\n      attributes[key] = value;\n    }\n  }\n  // merge\n  attributes = mergeMap(attributes, nextAttr);\n\n  if (attributes.style && doParseStyle) {\n    attributes.style = parseStyle(attributes.style);\n  }\n\n  // TODO presudo\n  /*\n    if (attributes.presudo) {\n        for (let name in attributes.presudo) {\n            attributes.presudo[name] = parseStyle(attributes.presudo[name]);\n        }\n    }\n   */\n\n  return attributes;\n};\n\nmodule.exports = parseAttribute;\n","'use strict';\n\nconst {\n  isString,\n  isObject\n} = require('../util');\n\nmodule.exports = (attr = '', {\n  keyWrapper,\n  valueWrapper\n} = {}) => {\n  if (isString(attr)) {\n    return attr;\n  }\n\n  if (!isObject(attr)) {\n    throw new TypeError(`Expect object for style object, but got ${attr}`);\n  }\n\n  const styles = [];\n\n  for (let key in attr) {\n    let value = attr[key];\n    key = convertStyleKey(key);\n    value = convertStyleValue(value, key);\n    if (keyWrapper) {\n      key = keyWrapper(key, value);\n    }\n\n    if (valueWrapper) {\n      value = valueWrapper(value, key);\n    }\n\n    styles.push(`${key}: ${value};`);\n  }\n\n  return styles.join('');\n};\n\nconst convertStyleKey = (key) => {\n  return key.replace(/[A-Z]/, (letter) => {\n    return `-${letter.toLowerCase()}`;\n  });\n};\n\nconst convertStyleValue = (value, key) => {\n  if (typeof value === 'number' && key !== 'z-index') {\n    return value + 'px';\n  }\n  if (key === 'padding' || key === 'margin') {\n    let parts = value.split(' ');\n    for (let i = 0; i < parts.length; i++) {\n      let part = parts[i];\n      if (!isNaN(Number(part))) {\n        parts[i] = part + 'px';\n      }\n    }\n\n    value = parts.join(' ');\n  }\n  return value;\n};\n","const toDomNode = require('./toDomNode');\nconst {\n  isNode\n} = require('../util');\nconst {\n  isKabaneryNode,\n  isKabaneryRenderNode\n} = require('../n');\nconst resolveKRenderNode = require('./resolveKRenderNode');\n\nconst toHTML = (node) => {\n  if (isNode(node)) {\n    return node.outerHTML;\n  } else if (isKabaneryNode(node)) {\n    const {\n      tagName,\n      attrMap,\n      childNodes\n    } = node;\n\n    let attrs = [];\n    for (const key in attrMap) {\n      const value = attrMap[key];\n      attrs.push(`${key}=\"${value}\"`);\n    }\n\n    let attrStr = attrs.join(' ');\n    attrStr = attrStr ? ' ' + attrStr : '';\n\n    let childs = [];\n    for (let i = 0, n = childNodes.length; i < n; i++) {\n      childs.push(toHTML(childNodes[i]));\n    }\n\n    return `<${tagName}${attrStr}>${childs.join('')}</${tagName}>`;\n  } else if (isKabaneryRenderNode(node)) {\n    return toHTML(resolveKRenderNode(node));\n  } else {\n    return node + '';\n  }\n};\n\nconst mount = require('./mount');\n\nmodule.exports = {\n  toDomNode,\n  toHTML,\n  mount,\n  resolveKRenderNode\n};\n","'use strict';\n\nconst {\n  attachDocument\n} = require('../event');\n\nconst {\n  isNode\n} = require('../util');\n\nconst {\n  flat,\n  forEach\n} = require('bolzano');\n\nconst toDomNode = require('./toDomNode');\n\n/**\n * @param parentNode\n *      the dom node used hook node we rendered\n */\nmodule.exports = (kabaneryRoots, parentNode) => {\n  kabaneryRoots = flat(kabaneryRoots);\n\n  forEach(kabaneryRoots, (item) => {\n    item = toDomNode(item);\n    if (isNode(item)) {\n      parentNode.appendChild(item);\n    }\n  });\n\n  // attach to document\n  attachDocument(getDoc(parentNode));\n};\n\nconst getDoc = (node) => {\n  while (node.parentNode) {\n    node = node.parentNode;\n  }\n  return node;\n};\n","module.exports = (node) => {\n  const {\n    render,\n    args\n  } = node;\n  return render(...args);\n};\n","'use strict';\n\nconst {\n  isNode,\n  createElement,\n  createSvgElement\n} = require('../util');\nconst {\n  bindEvents\n} = require('../event');\nconst {\n  map\n} = require('bolzano');\nconst {\n  isKabaneryNode,\n  isKabaneryRenderNode\n} = require('../n');\nconst resolveKRenderNode = require('./resolveKRenderNode');\n\nconst toDomNode = (node) => {\n  if (isKabaneryNode(node)) {\n    let tarNode = null;\n    if (node.elementType === 'html') {\n      tarNode = createElement(node.tagName, node.attrMap, map(node.childNodes, toDomNode));\n    } else { // svg\n      tarNode = createSvgElement(node.tagName, node.attrMap, map(node.childNodes, toDomNode));\n    }\n\n    bindEvents(tarNode, node.eventMap);\n    return tarNode;\n  } else if (isKabaneryRenderNode(node)) {\n    return toDomNode(resolveKRenderNode(node));\n  } else if (isNode(node)) {\n    return node;\n  } else {\n    return document.createTextNode(node.toString());\n  }\n};\n\nmodule.exports = toDomNode;\n","'use strict';\n\nconst toArray = (v) => Array.prototype.slice.call(v);\n\nconst isNode = (o) => {\n  return (\n    typeof Node === 'object' ? o instanceof Node : o && typeof o === 'object' && typeof o.nodeType === 'number' && typeof o.nodeName === 'string'\n  );\n};\n\nconst bind = (fn, ctx) => {\n  return (...args) => {\n    return fn.apply(ctx, args);\n  };\n};\n\nconst isObject = (v) => v && typeof v === 'object';\n\nconst isString = (v) => typeof v === 'string';\n\nconst isNumber = (v) => typeof v === 'number';\n\nconst likeArray = (v) => isObject(v) && isNumber(v.length) && v.length >= 0;\n\nconst isBool = (v) => typeof v === 'boolean';\n\nconst isFunction = (v) => typeof v === 'function';\n\nconst set = (sandbox, name = '', value) => {\n  name = name.trim();\n  let parts = !name ? [] : name.split('.');\n  let parent = sandbox;\n  if (!isObject(parent)) return;\n  if (!parts.length) return;\n  for (let i = 0; i < parts.length - 1; i++) {\n    let part = parts[i];\n    let next = parent[part];\n    if (!isObject(next)) {\n      next = {};\n      parent[part] = next;\n    }\n    parent = next;\n  }\n\n  parent[parts[parts.length - 1]] = value;\n  return sandbox;\n};\n\nconst svgNS = 'http://www.w3.org/2000/svg';\n\nconst applyNode = (node, attributes, childs) => {\n  for (let name in attributes) {\n    const attr = attributes[name];\n    node.setAttribute(name, attr);\n  }\n\n  for (let i = 0; i < childs.length; i++) {\n    const child = childs[i];\n    if (isNode(child)) {\n      node.appendChild(child);\n    } else {\n      node.textContent = child + '';\n    }\n  }\n};\n\nconst createElement = (tagName, attributes, childs) => {\n  const node = document.createElement(tagName);\n  applyNode(node, attributes, childs);\n  return node;\n};\n\nconst createSvgElement = (tagName, attributes, childs) => {\n  const node = document.createElementNS(svgNS, tagName);\n  applyNode(node, attributes, childs);\n  return node;\n};\n\nconst getAttributeMap = (attributes = []) => {\n  const map = {};\n  for (let i = 0; i < attributes.length; i++) {\n    const {\n      name,\n      value\n    } = attributes[i];\n    map[name] = value;\n  }\n  return map;\n};\n\nconst removeNode = (oldNode) => {\n  let parent = oldNode.parentNode;\n  if (parent) {\n    parent.removeChild(oldNode);\n  }\n};\n\nconst hasOwnProperty = (obj, key) => {\n  if (obj.hasOwnProperty) {\n    return obj.hasOwnProperty(key);\n  }\n  for (const name in obj) {\n    if (name === key) return true;\n  }\n  return false;\n};\n\nconst emptyChildren = (node) => {\n  const childNodes = node.childNodes;\n  for (let i = 0, n = childNodes.length; i < n; i++) {\n    node.removeChild(childNodes[i]);\n  }\n};\n\nmodule.exports = {\n  toArray,\n  isNode,\n  isObject,\n  likeArray,\n  bind,\n  isString,\n  isNumber,\n  isBool,\n  isFunction,\n  set,\n  createElement,\n  createSvgElement,\n  getAttributeMap,\n  removeNode,\n  hasOwnProperty,\n  emptyChildren\n};\n","const {\n  isFunction\n} = require('../util');\nconst updateData = require('./updateData');\nconst replace = require('./replace');\nconst isViewNode = require('./isViewNode');\nconst {\n  n\n} = require('../n');\nconst {\n  mount\n} = require('../resolver');\n\nconst ViewContext = function(view, obj) {\n  this.node = null;\n  this.data = obj;\n  this.render = view;\n  this.kNode = null;\n};\n\nViewContext.prototype = {\n  construct: ViewContext,\n\n  update: function(...args) {\n    updateData(this.data, args);\n    return this.renderView();\n  },\n\n  appendView: function(itemView) {\n    if (this.node) {\n      mount(itemView, this.node);\n    }\n  },\n\n  renderView: function() {\n    const newKNode = this.getKabaneryNode();\n    this.node = replace(this.node, newKNode, this.kNode);\n    this.kNode = newKNode;\n    if (this.node) {\n      this.node.ctx = this.getContext();\n    }\n    return this.node;\n  },\n\n  getKabaneryNode: function() {\n    let ret = this.render(this.data, this.getContext());\n\n    if (isFunction(ret)) {\n      this.render = ret;\n      return this.render(this.data, this.getContext());\n    } else {\n      return ret;\n    }\n  },\n\n  getKNode: function() {\n    return this.kNode;\n  },\n\n  getNode: function() {\n    return this.node;\n  },\n\n  getData: function() {\n    return this.data;\n  },\n\n  // TODO refator\n  transferCtx: function(newNode) {\n    newNode.ctx = this.getContext();\n    this.node = newNode;\n  },\n\n  getContext: function() {\n    return this._ctx;\n  }\n};\n\nvar getViewContext = (view, obj) => {\n  const _ctx = {};\n\n  const ctxInst = new ViewContext(view, obj);\n\n  ctxInst._ctx = _ctx;\n\n  for (const name in ViewContext.prototype) {\n    if (name !== 'construct') {\n      _ctx[name] = (...args) => ctxInst[name].apply(ctxInst, args);\n    }\n  }\n\n  return _ctx;\n};\n\nmodule.exports = {\n  view: (viewFun) => {\n    return (obj) => {\n      // create context\n      const ctx = getViewContext(viewFun, obj);\n      // render node\n      const viewNode = n(() => ctx.renderView());\n      // export context\n      viewNode.ctx = ctx;\n      viewNode.__isViewNode = true;\n\n      return viewNode;\n    };\n  },\n\n  // TODO exports interface to expand context prototype\n  isViewNode\n};\n","const {\n  isObject\n} = require('../util');\n\nmodule.exports = (v) => isObject(v) && v.__isViewNode;\n","'use strict';\n\nconst {\n  isNode,\n  removeNode\n} = require('../../util');\nconst isViewNode = require('../isViewNode');\nconst {\n  getTagName,\n  getTextAreaTextContent,\n  getAttributeValue\n} = require('./util');\nconst {\n  toDomNode\n} = require('../../resolver');\nconst {\n  eventMapHook\n} = require('../../const');\nconst editAttributes = require('./editAttributes');\nconst {\n  isKabaneryNode\n} = require('../../n');\n\n/**\n * replace old node with new node\n */\nconst replaceDirectly = (node, newKNode) => {\n  const parent = node.parentNode;\n  const newNode = toDomNode(newKNode);\n  if (!parent) {\n    return newNode;\n  }\n\n  // replace\n  parent.replaceChild(newNode, node);\n  return newNode;\n};\n\n// node and newKNode have the same tagName\nconst editNode = (node, newKNode, oldKNode) => {\n  // attributes\n  editAttributes(node, newKNode, oldKNode);\n\n  // hacks for dom\n  if (getTagName(node) === 'TEXTAREA') {\n    node.value = getTextAreaTextContent(newKNode);\n  }\n  if (getTagName(node) === 'INPUT') {\n    node.value = getAttributeValue(newKNode, 'value');\n  }\n\n  // transfer event map\n  node[eventMapHook] = newKNode.eventMap || {};\n\n  // TODO using key\n  diffList(newKNode.childNodes, oldKNode.childNodes, node);\n};\n\nconst diffList = (newKChilds, oldKChilds, parent) => {\n  const childNodes = parent.childNodes,\n    oldLen = oldKChilds.length,\n    newLen = newKChilds.length;\n\n  // remove\n  for (let i = newLen; i < oldLen; i++) {\n    childNodes[i] && removeNode(childNodes[i]);\n  }\n\n  // diff\n  for (let i = 0, n = Math.min(newLen, oldLen); i < n; i++) {\n    diffNode(childNodes[i], newKChilds[i], oldKChilds[i]);\n  }\n\n  // append\n  for (let i = oldLen; i < newLen; i++) {\n    parent.appendChild(toDomNode(newKChilds[i]));\n  }\n};\n\nconst diffNode = (node, newKNode, oldKNode) => {\n  if (!isNode(node)) return node;\n\n  const newKabNode = isViewNode(newKNode) ? newKNode.ctx.getKabaneryNode() : newKNode;\n  const oldKabNode = isViewNode(oldKNode) ? oldKNode.ctx.getKabaneryNode() : oldKNode;\n\n  if (isKabaneryNode(newKabNode) && isKabaneryNode(oldKabNode)) {\n    if (getTagName(oldKabNode) !== getTagName(newKabNode)) {\n      return replaceDirectly(node, newKabNode);\n    } else {\n      editNode(node, newKabNode, oldKabNode);\n      return node;\n    }\n  } else {\n    return replaceDirectly(node, newKNode);\n  }\n};\n\nmodule.exports = diffNode;\n","'use strict';\n\nconst {\n  hasOwnProperty\n} = require('../../util');\n\nconst {\n  getAttrMap\n} = require('./util');\n\nmodule.exports = (node, newKNode, oldKNode) => {\n  // attributes\n  const orinAttrMap = getAttrMap(oldKNode);\n  const newAttrMap = getAttrMap(newKNode);\n\n  // update and remove\n  for (const name in orinAttrMap) {\n    const orinValue = orinAttrMap[name];\n    if (hasOwnProperty(newAttrMap, name)) {\n      let newValue = newAttrMap[name];\n      if (newValue !== orinValue) {\n        node.setAttribute(name, newValue);\n      }\n    } else {\n      node.removeAttribute(name);\n    }\n  }\n\n  for (const name in newAttrMap) {\n    const newAttr = newAttrMap[name];\n    if (!hasOwnProperty(orinAttrMap, name)) {\n      node.setAttribute(name, newAttr);\n    }\n  }\n};\n","'use strict';\n\nconst diffNode = require('./diffNode');\nconst {\n  toDomNode\n} = require('../../resolver');\nconst {\n  removeNode\n} = require('../../util');\n\n// TODO type check for newNode\nmodule.exports = (realNode, newKNode, oldKNode) => {\n  if (!realNode) { // add new node\n    return toDomNode(newKNode);\n  } else if (!newKNode) { // delete old node\n    removeNode(realNode);\n    return null;\n  } else { // diff with old node\n    return diffNode(realNode, newKNode, oldKNode);\n  }\n};\n","'use strict';\n\nconst {\n  isNode,\n  getAttributeMap\n} = require('../../util');\n\nconst getTagName = (node) => {\n  return node.tagName.toUpperCase();\n};\n\nconst getAttrMap = (node) => {\n  if (isNode(node)) {\n    return getAttributeMap(node.attributes);\n  } else { // kabanery node\n    return node.attrMap;\n  }\n};\n\nconst getTextAreaTextContent = (node) => {\n  if (isNode(node)) {\n    return node.textContent;\n  } else {\n    return node.children[0];\n  }\n};\n\nconst getAttributeValue = (node, key) => {\n  if (isNode(node)) {\n    return node.getAttribute(key);\n  } else {\n    return node.attrMap[key];\n  }\n};\n\nmodule.exports = {\n  getTagName,\n  getAttrMap,\n  getTextAreaTextContent,\n  getAttributeValue\n};\n","const {\n  set,\n  isFunction,\n  likeArray\n} = require('../util');\n\nconst updateData = (data, scripts) => {\n  if (scripts.length === 1 && likeArray(scripts[0])) {\n    let arg = scripts[0];\n    for (let i = 0, n = arg.length; i < n; i++) {\n      const item = arg[i];\n      set(data, item[0], item[1]);\n    }\n  } else {\n    let [path, value] = scripts;\n\n    // function is a special data\n    if (isFunction(value)) {\n      value = value(data);\n    }\n\n    set(data, path, value);\n  }\n};\n\nmodule.exports = updateData;\n","module.exports = require('./lib');\n","'use strict';\n\n/**\n * signal system protocol\n */\n\nconst {\n    foldFuns,\n    isString,\n    isObject,\n    isFunction\n} = require('./util');\n\n/**\n * signal:\n * {\n *   type,\n *   data,\n *   extra\n * }\n *\n * type := [0-9a-zA-Z\\-\\_]+\n *\n * TODO type grammer check\n */\nconst Signal = (type, data, extra) => {\n    return {\n        type,\n        data,\n        extra\n    };\n};\n\nconst isSignalType = (s, type) => {\n    return s.type === type;\n};\n\n/**\n * handle specific type of signal.\n *\n * TODO a simple grammer to compose signal type\n */\nconst onSignalType = (expectType, fn) => {\n    if (!isString(expectType)) {\n        throw new TypeError(`Expect string, but got ${expectType}`);\n    }\n    if (!isFunction(fn)) {\n        throw new TypeError(`Expect function, but got ${fn}`);\n    }\n\n    return (signal, ...rest) => {\n        if (isSignalType(signal, expectType)) {\n            return fn(signal, ...rest);\n        }\n    };\n};\n\n/**\n * pass signal directly\n *\n * TODO delivery chain\n */\nconst deliver = (ctx, type, extra) => (sourceSignal, sourceData, sourceCtx) => {\n    return ctx.notify(Signal(type, sourceSignal.data, {\n        sourceType: 'delivered',\n        sourceSignal,\n        sourceData,\n        sourceCtx,\n        extra\n    }));\n};\n\n/**\n * pass signal\n */\nconst pass = (ctx, fromSignalType = '', toSignalType) => {\n    let map = {};\n\n    if (isString(fromSignalType)) {\n        map[fromSignalType] = toSignalType;\n    } else if (isObject(fromSignalType)) {\n        map = fromSignalType;\n    }\n\n    let list = [];\n    for (let from in map) {\n        let next = map[from] ? map[from] : from;\n        list.push(onSignalType(from, deliver(ctx, next)));\n    }\n\n    return foldFuns(list);\n};\n\nmodule.exports = {\n    Signal,\n    onSignalType,\n    isSignalType,\n    deliver,\n    pass\n};\n","'use strict';\n\nconst isObject = (v) => v && typeof v === 'object';\n\nconst isString = (v) => typeof v === 'string';\n\nconst foldFuns = (fns) => {\n    // TODO check\n    return (...args) => {\n        let ret = [];\n        for (let i = 0, n = fns.length; i < n; i++) {\n            ret.push(fns[i](...args));\n        }\n        return ret;\n    };\n};\n\nconst isFunction = (v) => typeof v === 'function';\n\nmodule.exports = {\n    isObject,\n    foldFuns,\n    isString,\n    isFunction\n};\n","/*! https://mths.be/punycode v1.4.1 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow new RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * https://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.4.1',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) {\n\t\t\t// in Node.js, io.js, or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else {\n\t\t\t// in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n","'use strict';\n\nlet {\n    isObject,\n    isFunction\n} = require('../src/util');\n\n/**\n * we got stub and use it as apis to ccontruct pfc code\n */\n\nmodule.exports = (variableStub = {}) => {\n    let apiMap = {};\n\n    for (let name in variableStub) {\n        let stub = variableStub[name];\n        if (stub.type === 'function') {\n            apiMap[name] = (...params) => callStubFunction(name, params, variableStub[name] || {});\n        } else {\n            apiMap[name] = callStubVariable(name);\n        }\n    }\n\n    return apiMap;\n};\n\nlet callStubVariable = (variable) => {\n    return {\n        code: `${variable}`,\n        type: 'variable'\n    };\n};\n\nlet callStubFunction = (variable, params, stub) => {\n    let code = `${variable}(`;\n\n    let fullAtoms = true,\n        paramValues = [];\n\n    for (let i = 0; i < params.length; i++) {\n        let param = params[i];\n        if (isObject(param) && param.type === 'function') {\n            code += param.code;\n            fullAtoms = false;\n        } else if (isObject(param) && param.type === 'variable') {\n            code += param.code;\n            fullAtoms = false;\n        } else {\n            paramValues.push(param);\n            // validate atom param\n            if (isFunction(stub.validateParamItem)) {\n                stub.validateParamItem(param, i);\n            }\n            code += serializeAtom(param);\n        }\n\n        if (i < params.length - 1) {\n            code += ',';\n        }\n    }\n\n    if (fullAtoms && isFunction(stub.validateParams)) {\n        stub.validateParams(paramValues);\n    }\n\n    code += ')';\n\n    return {\n        type: 'function',\n        code\n    };\n};\n\nlet serializeAtom = (atom) => {\n    if (typeof atom === 'string') {\n        return JSON.stringify(atom);\n    } else if (atom === null) {\n        return 'null';\n    } else if (atom === true) {\n        return 'true';\n    } else if (atom === false) {\n        return 'false';\n    } else if (typeof atom === 'number') {\n        return atom + '';\n    } else {\n        throw new Error(`unexpected atom type in pfc, atom is ${atom}.`);\n    }\n};\n","// ignore whitespace\nlet processTokens = (rawTokens) => {\n    let tokens = [];\n    for (let i = 0; i < rawTokens.length; i++) {\n        let {\n            text, tokenType\n        } = rawTokens[i];\n\n        let name = tokenType.name;\n\n        if (name !== 'whitespace') { // ignore white space\n            tokens.push({\n                text,\n                name\n            });\n        }\n    }\n\n    return tokens;\n};\n\nlet getProductionId = (production) => {\n    return `${production[0]} := ${production[1].join(' ')}`;\n};\n\nlet isFunction = (v) => typeof v === 'function';\n\nlet isObject = (v) => v && typeof v === 'object';\n\nmodule.exports = {\n    processTokens,\n    getProductionId,\n    isFunction,\n    isObject\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return map(objectKeys(obj), function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (isArray(obj[k])) {\n        return map(obj[k], function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\nfunction map (xs, f) {\n  if (xs.map) return xs.map(f);\n  var res = [];\n  for (var i = 0; i < xs.length; i++) {\n    res.push(f(xs[i], i));\n  }\n  return res;\n}\n\nvar objectKeys = Object.keys || function (obj) {\n  var res = [];\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\n  }\n  return res;\n};\n","'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n","'use strict';\n\n/**\n *\n * @readme-quick-run\n *\n * ## test tar=js r_c=streamTokenSpliter\n *\n * let {\n *     parser, WAIT, QUIT, MATCH\n * } = streamTokenSpliter;\n\n * let spliter = parser([{\n *     priority: 1,\n *     match: (prefix) => {\n *         if (/^\\w*$/.test(prefix)) return MATCH;\n *         return QUIT;\n *     },\n *     name: 'word'\n * }, {\n *     priority: 0,\n *     match: (prefix) => {\n *         if (/^.$/.test(prefix)) return MATCH;\n *         return QUIT;\n *     },\n *     name: 'trash'\n * }]);\n *\n * let tokens1 = spliter('today=is __'); // chunk1\n * let tokens2 = spliter('a good day'); // chunk2\n * let tokens3 = spliter(null); // null means end of stream\n *\n * console.log(tokens1);\n * console.log('\\n');\n * console.log(tokens2);\n * console.log('\\n');\n * console.log(tokens3);\n */\nmodule.exports = require('./src');\n","'use strict';\n\nconst START_STATE = '__start__state__';\n\nlet {\n    stateGraphDSL, DFA\n} = require('cl-fsm');\n\n/**\n * build a fda to do the matching work\n *\n * transit: (currentState, letter) -> nextState\n */\nmodule.exports = (stateMap, accepts) => {\n    let m = null;\n\n    // parse stateMap\n    let {\n        transitions, acceptStateMap\n    } = stateGraphDSL.transitionMaper(\n        stateGraphDSL.g(START_STATE,\n            stateGraphDSL.c(null, stateMap)),\n        accepts);\n\n    return (prefix, letter) => {\n        if (prefix.length === 1) {\n            m = new DFA(transitions, acceptStateMap);\n            return m.transit(letter).type;\n        } else {\n            return m.transit(letter).type;\n        }\n    };\n};\n","'use strict';\n\nmodule.exports = {\n    WAIT: 2,\n    MATCH: 1,\n    QUIT: 0\n};\n","'use strict';\n\nlet {\n    WAIT, MATCH\n} = require('./const');\n\nlet {\n    assembleToken\n} = require('./util');\n\nlet filterTypes = (nextLetter, prefix, tokenTypes) => {\n    let parts = [],\n        matchs = [],\n        independentType = null;\n\n    let len = tokenTypes.length;\n\n    for (let i = 0; i < len; i++) {\n        let tokenType = tokenTypes[i];\n        let ret = tokenType.match(prefix, nextLetter);\n\n        if (ret === WAIT) {\n            parts.push(tokenType);\n        } else if (ret === MATCH) { // matched\n            matchs.push(tokenType);\n            parts.push(tokenType);\n            if (!independentType && tokenType.independent) {\n                independentType = tokenType;\n            }\n        }\n    }\n\n    return [parts, matchs, independentType];\n};\n\nlet findToken = (retMatrix) => {\n    let prev = null;\n\n    for (let i = 0; i < retMatrix.length; i++) {\n        let {\n            prefix, matchTypes\n        } = retMatrix[i];\n\n        for (let j = 0; j < matchTypes.length; j++) {\n            let tokenType = matchTypes[j];\n            if (!prev ||\n                tokenType.priority > prev.tokenType.priority ||\n                (tokenType.priority === prev.tokenType.priority && prefix.length > prev.text.length)\n            ) {\n                prev = assembleToken(tokenType, prefix);\n            }\n        }\n    }\n\n    return prev;\n};\n\nmodule.exports = {\n    findToken,\n    filterTypes\n};\n","'use strict';\n\nlet {\n    isString, funType, listType, isFunction, mapType, isFalsy, isNumber, or\n} = require('basetype');\n\nlet {\n    WAIT, MATCH, QUIT\n} = require('./const');\n\nlet {\n    stateGraphDSL\n} = require('cl-fsm');\n\nlet buildFSM = require('./buildFSM');\n\nlet {\n    map\n} = require('bolzano');\n\nlet {\n    getMatch\n} = require('./match');\n\nlet {\n    findToken,\n    filterTypes\n} = require('./findToken');\n\nlet {\n    assembleToken\n} = require('./util');\n\n/**\n *\n * A token spliter used to split stream string.\n *\n * When accept a chunk, parsing it at the same time.\n *\n * ## options\n *\n * tokenTypes = [\n *  {\n *      name,\n *      priority,\n *      match\n *  }\n * ]\n *\n * - priority\n *\n *    When meets ambiguity, priority will be helpful.\n *\n *    Assume we got two types: \\w*, \\s. When split \"today is a good day\". If we set \\s has a higher priority, we will get [\"t\", \"o\", \"d\", \"a\", \"y\", \" \", \"i\", \"s\", \" \", \"a\", \" \", \"g\", \"o\", \"o\", \"d\", \" \", \"d\", \"a\", \"y\"], just one token. If we set \\w* has a higher priority, we will get [\"today\", \" \", \"is\", \" \", \"a\", \" \", \"good\", \" \", \"day\"].\n *\n * - match (letter, prefix) -> WAIT | MATCH | QUIT\n *\n *     Because we are handling chunks, we need to know finished a chunk or not.\n *\n * ## rules\n *\n * - priority rule\n *\n * - longest matching\n *\n * eg: four rules a(def, 1), b(default[s?], 2), c(/\\w\\w+/, 0), d(_, 2)\n *\n * ```\n * input     isPart     match\n * d         (a, b, c)  ()\n * de        (a, b, c)  (c:0)\n * def       (a, b, c)  (a:1, c:0)\n * defa      (b, c)     (c:0)\n * defau     (b, c)     (c:0)\n * defaul    (b, c)     (c:0)\n * default   (b, c)     (b:2, c:0)\n * defaults  (b, c)     (b:2, c:0)\n * defaults_ ()         ()\n * ```\n *\n * When empty situation happend, analysis the process.\n *\n * ```\n * 1. possible situations\n *    de        (a, b, c)  (c:0)\n *    def       (a, b, c)  (a:1, c:0)\n *    defa      (b, c)     (c:0)\n *    defau     (b, c)     (c:0)\n *    defaul    (b, c)     (c:0)\n *    default   (b, c)     (b:2, c:0)\n *    defaults  (b, c)     (b:2, c:0)\n *\n * 2. for any rule (a, b, c) only consider it's biggest matching situation. (longest matching rule)\n *    def       (a, b, c)  (a:1)            longest for a\n *    defaults  (b, c)     (b:2, c:0)       longest for b and c\n *\n * 3. choose the highest priority rule. (priority rule)\n *    defaults (b:2)\n * ```\n */\n\nlet parser = funType((tokenTypes) => {\n    tokenTypes = map(tokenTypes, (tokenType) => {\n        let {\n            priority, name, independent, match\n        } = tokenType;\n\n        name = name || (match && match.toString());\n\n        match = getMatch(match);\n\n        if (!isFunction(match)) {\n            throw new Error(`Error match in token type ${strTokenType(tokenType)}`);\n        }\n\n        return {\n            priority: priority || 0,\n            name: name,\n            match,\n            independent\n        };\n    });\n\n    let stock = '';\n\n    return (chunk) => {\n        if (chunk === null) { // means finished\n            let tokens = splitTokensToEnd(stock, tokenTypes);\n\n            stock = '';\n            return tokens;\n        }\n        stock += chunk.toString();\n        let {\n            rest, tokens\n        } = splitTokens(stock, tokenTypes);\n\n        stock = rest;\n\n        return tokens;\n    };\n}, [\n    listType(mapType({\n        priority: or(isFalsy, isNumber),\n        name: or(isFalsy, isString)\n    }))\n]);\n\nlet strTokenType = ({\n    priority, match, name, independent\n}) => {\n    return `{\n        priority: ${priority},\n        match: ${match},\n        name: ${name},\n        independent: ${independent}\n    }`;\n};\n\nparser.parse = (str, tokenTypes) => {\n    let parse = parser(tokenTypes);\n    return parse(str).concat(parse(null));\n};\n\nlet splitTokensToEnd = (stock, tokenTypes) => {\n    let {\n        tokens\n    } = splitTokens(stock, tokenTypes, 'end');\n    return tokens;\n};\n\nlet splitTokens = (stock, tokenTypes, type) => {\n    let ret;\n    let tokens = [];\n    while (stock && (ret = getToken(stock, tokenTypes, type))) {\n        let {\n            token, rest\n        } = ret;\n        stock = rest;\n\n        tokens.push(token);\n    }\n\n    return {\n        tokens,\n        rest: stock\n    };\n};\n\n/**\n * type = 'mid' | 'end'\n *\n * get toke from stock based on tokenTypes\n */\nlet getToken = (stock, tokenTypes, type = 'mid') => {\n    let next = stock;\n\n    let prefix = ''; // used to store current prefix\n    let retMatrix = [];\n\n    let restTypes = tokenTypes;\n\n    while (next) {\n        let nextLetter = next[0];\n        prefix += nextLetter;\n\n        // shorten next\n        next = next.substring(1);\n        let [partTypes, matchTypes, independentType] = filterTypes(nextLetter, prefix, restTypes);\n\n        restTypes = partTypes; // reduce types\n\n        // see if there is a independent token type\n        // find independent token\n\n        if (independentType) {\n            return splitTokenRet(\n                assembleToken(independentType, prefix),\n                stock\n            );\n        }\n\n        // obey longest match rule\n        // no matchs futher, means look forward more won't get any matchs\n        if (!partTypes.length && !matchTypes.length) {\n            return fetchToken(stock, retMatrix, prefix);\n        } else {\n            retMatrix.push({\n                partTypes,\n                matchTypes,\n                prefix\n            });\n        }\n    }\n\n    // if this is end, fetchToken\n    if (prefix === stock && type === 'end') { // match stop point\n        return fetchToken(stock, retMatrix, prefix);\n    }\n\n    return null;\n};\n\nlet fetchToken = (stock, retMatrix, prefix) => {\n    // empty\n    let token = findToken(retMatrix);\n    if (!token) {\n        throw new Error(`Can not find token from prefix \"${prefix}\". And prefix is not any part of token. stock is \"${stock}\".`);\n    }\n    return splitTokenRet(token, stock);\n};\n\nlet splitTokenRet = (token, stock) => {\n    return {\n        token,\n        rest: stock.substring(token.text.length)\n    };\n};\n\nmodule.exports = {\n    parser, WAIT, QUIT, MATCH, stateGraphDSL, buildFSM\n};\n","'use strict';\n\nlet {\n    isString, isFunction\n} = require('basetype');\n\nlet {\n    MATCH, WAIT, QUIT\n} = require('./const');\n\nlet stringMatch = (word) => (prefix) => {\n    if (word === prefix) return MATCH;\n    if (word.indexOf(prefix) !== -1) return WAIT;\n    return QUIT;\n};\n\nlet getMatch = (match) => {\n    if (isFunction(match)) return match;\n    if (isString(match)) return stringMatch(match);\n    // TODO analysis regular expression\n};\n\nmodule.exports = {\n    getMatch\n};\n","'use strict';\n\nlet assembleToken = (tokenType, prefix) => {\n    return {\n        tokenType,\n        name: tokenType.name,\n        text: prefix\n    };\n};\n\nmodule.exports = {\n    assembleToken\n};\n","'use strict';\n\n/**\n * @readme-quick-run\n *\n * build LR1 table\n *\n * ## test tar=js r_c=syntaxer\n *\n * let {buildLR1Table} = syntaxer;\n * let lr1Table = buildLR1Table({\n *     startSymbol: 'S',\n *     N: ['S'],\n *     T: ['a'],\n *     productions: [\n *         ['S', ['a']] // s -> a\n *     ]\n * });\n * console.log(JSON.stringify(lr1Table, null, 4));\n */\n\n/**\n * @readme-quick-run\n *\n * generate ast from LR table\n *\n * ## test tar=js r_c=syntaxer\n *\n * let {buildLR1Table, LR} = syntaxer;\n * let {ACTION, GOTO} = buildLR1Table({\n *     startSymbol: 'S',\n *     N: ['S'],\n *     T: ['a'],\n *     productions: [\n *         ['S', ['a']] // s -> a\n *     ]\n * });\n * let lrParse = LR(ACTION, GOTO);\n * lrParse({ // accept a token\n *   name: 'a',\n *   text: 'abc'\n * });\n * let ast = lrParse(null); // null as end symbol\n * console.log(JSON.stringify(ast, null, 4));\n */\nmodule.exports = require('./src');\n","'use strict';\n\nlet {\n    isObject, funType, or, isString, isFalsy, likeArray\n} = require('basetype');\n\nlet iterate = require('./lib/iterate');\n\nlet {\n    map, reduce, find, findIndex, forEach, filter, any, exist, compact, reverse, overArgs\n} = require('./lib/fp');\n\nlet contain = (list, item, fopts) => findIndex(list, item, fopts) !== -1;\n\nlet difference = (list1, list2, fopts) => {\n    return reduce(list1, (prev, item) => {\n        if (!contain(list2, item, fopts) &&\n            !contain(prev, item, fopts)) {\n            prev.push(item);\n        }\n        return prev;\n    }, []);\n};\n\nlet union = (list1, list2, fopts) => deRepeat(list2, fopts, deRepeat(list1, fopts));\n\nlet mergeMap = (map1 = {}, map2 = {}) => reduce(map2, setValueKey, reduce(map1, setValueKey, {}));\n\nlet setValueKey = (obj, value, key) => {\n    obj[key] = value;\n    return obj;\n};\n\nlet interset = (list1, list2, fopts) => {\n    return reduce(list1, (prev, cur) => {\n        if (contain(list2, cur, fopts)) {\n            prev.push(cur);\n        }\n        return prev;\n    }, []);\n};\n\nlet deRepeat = (list, fopts, init = []) => {\n    return reduce(list, (prev, cur) => {\n        if (!contain(prev, cur, fopts)) {\n            prev.push(cur);\n        }\n        return prev;\n    }, init);\n};\n\n/**\n * a.b.c\n */\nlet get = funType((sandbox, name = '') => {\n    name = name.trim();\n    let parts = !name ? [] : name.split('.');\n    return reduce(parts, getValue, sandbox, invertLogic);\n}, [\n    isObject,\n    or(isString, isFalsy)\n]);\n\nlet getValue = (obj, key) => obj[key];\n\nlet invertLogic = v => !v;\n\nlet delay = (time) => new Promise((resolve) => {\n    setTimeout(resolve, time);\n});\n\nlet flat = (list) => {\n    if (likeArray(list) && !isString(list)) {\n        return reduce(list, (prev, item) => {\n            prev = prev.concat(flat(item));\n            return prev;\n        }, []);\n    } else {\n        return [list];\n    }\n};\n\nmodule.exports = {\n    flat,\n    contain,\n    difference,\n    union,\n    interset,\n    map,\n    reduce,\n    iterate,\n    find,\n    findIndex,\n    deRepeat,\n    forEach,\n    filter,\n    any,\n    exist,\n    get,\n    delay,\n    mergeMap,\n    compact,\n    reverse,\n    overArgs\n};\n","'use strict';\n\nlet {\n    iterate\n} = require('./iterate');\n\nlet {\n    isFunction\n} = require('basetype');\n\nlet defauls = {\n    eq: (v1, v2) => v1 === v2\n};\n\nlet setDefault = (opts, defauls) => {\n    for (let name in defauls) {\n        opts[name] = opts[name] || defauls[name];\n    }\n};\n\nlet forEach = (list, handler) => iterate(list, {\n    limit: (rets) => {\n        if (rets === true) return true;\n        return false;\n    },\n    transfer: handler,\n    output: (prev, cur) => cur,\n    def: false\n});\n\nlet map = (list, handler, limit) => iterate(list, {\n    transfer: handler,\n    def: [],\n    limit\n});\n\nlet reduce = (list, handler, def, limit) => iterate(list, {\n    output: handler,\n    def,\n    limit\n});\n\nlet filter = (list, handler, limit) => reduce(list, (prev, cur, index, list) => {\n    handler && handler(cur, index, list) && prev.push(cur);\n    return prev;\n}, [], limit);\n\nlet find = (list, item, fopts) => {\n    let index = findIndex(list, item, fopts);\n    if (index === -1) return undefined;\n    return list[index];\n};\n\nlet any = (list, handler) => reduce(list, (prev, cur, index, list) => {\n    let curLogic = handler && handler(cur, index, list);\n    return prev && originLogic(curLogic);\n}, true, falsyIt);\n\nlet exist = (list, handler) => reduce(list, (prev, cur, index, list) => {\n    let curLogic = handler && handler(cur, index, list);\n    return prev || originLogic(curLogic);\n}, false, originLogic);\n\nlet findIndex = (list, item, fopts = {}) => {\n    setDefault(fopts, defauls);\n\n    let {\n        eq\n    } = fopts;\n    let predicate = isFunction(item) ? item : (v) => eq(item, v);\n    let ret = iterate(list, {\n        transfer: indexTransfer,\n        limit: onlyOne,\n        predicate,\n        def: []\n    });\n    if (!ret.length) return -1;\n    return ret[0];\n};\n\nlet compact = (list) => reduce(list, (prev, cur) => {\n    if (cur) prev.push(cur);\n    return prev;\n}, []);\n\nlet reverse = (list) => reduce(list, (prev, cur) => {\n    prev.unshift(cur);\n    return prev;\n}, []);\n\nlet indexTransfer = (item, index) => index;\n\nlet onlyOne = (rets, item, name, domain, count) => count >= 1;\n\nlet falsyIt = v => !v;\n\nlet originLogic = v => !!v;\n\nlet overArgs = (func, transform) => {\n    return (...args) => {\n        let newArgs = transform(...args);\n        return func(...newArgs);\n    };\n};\n\nmodule.exports = {\n    overArgs,\n    map,\n    forEach,\n    reduce,\n    find,\n    findIndex,\n    filter,\n    any,\n    exist,\n    compact,\n    reverse\n};\n","'use strict';\n\nlet {\n    isPromise, likeArray, isObject, funType, isFunction, isUndefined, or, isNumber, isFalsy, isReadableStream, mapType\n} = require('basetype');\n\n/**\n * @param opts\n *      preidcate: chose items to iterate\n *      limit: when to stop iteration\n *      transfer: transfer item\n *      output\n *      def: default result\n */\nlet iterate = funType((domain, opts = {}) => {\n    domain = domain || [];\n    if (isPromise(domain)) {\n        return domain.then(list => {\n            return iterate(list, opts);\n        });\n    }\n    return iterateList(domain, opts);\n}, [\n    or(isPromise, isObject, isFunction, isFalsy),\n    or(isUndefined, mapType({\n        predicate: or(isFunction, isFalsy),\n        transfer: or(isFunction, isFalsy),\n        output: or(isFunction, isFalsy),\n        limit: or(isUndefined, isNumber, isFunction)\n    }))\n]);\n\nlet iterateList = (domain, opts) => {\n    opts = initOpts(opts, domain);\n\n    let rets = opts.def;\n    let count = 0; // iteration times\n\n    if (isReadableStream(domain)) {\n        let index = -1;\n\n        return new Promise((resolve, reject) => {\n            domain.on('data', (chunk) => {\n                // TODO try cache error\n                let itemRet = iterateItem(chunk, domain, ++index, count, rets, opts);\n                rets = itemRet.rets;\n                count = itemRet.count;\n                if (itemRet.stop) {\n                    resolve(rets);\n                }\n            });\n            domain.on('end', () => {\n                resolve(rets);\n            });\n            domain.on('error', (err) => {\n                reject(err);\n            });\n        });\n    } else if (likeArray(domain)) {\n        for (let i = 0; i < domain.length; i++) {\n            let item = domain[i];\n            let itemRet = iterateItem(item, domain, i, count, rets, opts);\n            rets = itemRet.rets;\n            count = itemRet.count;\n            if (itemRet.stop) return rets;\n        }\n    } else if (isObject(domain)) {\n        for (let name in domain) {\n            let item = domain[name];\n            let itemRet = iterateItem(item, domain, name, count, rets, opts);\n            rets = itemRet.rets;\n            count = itemRet.count;\n            if (itemRet.stop) return rets;\n        }\n    }\n\n    return rets;\n};\n\nlet initOpts = (opts, domain) => {\n    let {\n        predicate, transfer, output, limit\n    } = opts;\n\n    opts.predicate = predicate || truthy;\n    opts.transfer = transfer || id;\n    opts.output = output || toList;\n    if (limit === undefined) limit = domain && domain.length;\n    limit = opts.limit = stopCondition(limit);\n    return opts;\n};\n\nlet iterateItem = (item, domain, name, count, rets, {\n    predicate, transfer, output, limit\n}) => {\n    if (limit(rets, item, name, domain, count)) {\n        // stop\n        return {\n            stop: true,\n            count,\n            rets\n        };\n    }\n\n    if (predicate(item)) {\n        rets = output(rets, transfer(item, name, domain, rets), name, domain);\n        count++;\n    }\n    return {\n        stop: false,\n        count,\n        rets\n    };\n};\n\nlet stopCondition = (limit) => {\n    if (isUndefined(limit)) {\n        return falsy;\n    } else if (isNumber(limit)) {\n        return (rets, item, name, domain, count) => count >= limit;\n    } else {\n        return limit;\n    }\n};\n\nlet toList = (prev, v) => {\n    prev.push(v);\n    return prev;\n};\n\nlet truthy = () => true;\n\nlet falsy = () => false;\n\nlet id = v => v;\n\nmodule.exports = {\n    iterate\n};\n","'use strict';\n\nlet {\n    buildClosure\n} = require('./closure');\nlet {\n    reduce\n} = require('bolzano');\n\n/**\n * input: grammer G\n *\n * output: LR(0) canonical collection\n *\n * item = [head, body, dotPosition];\n *\n * item set = [viable prefix, items]\n */\nmodule.exports = (grammer, LR1Grammer, go) => {\n    let {\n        symbols\n    } = grammer;\n\n    let initClosure = buildClosure([\n        LR1Grammer.initItem(grammer)\n    ], grammer, LR1Grammer);\n\n    let C = [initClosure];\n    let canonicalCollectionMap = {};\n    canonicalCollectionMap[initClosure.serializedText] = true;\n\n    let appendedC = C;\n\n    while (true) { // eslint-disable-line\n        let newAppendedC = [];\n\n        for (let i = 0; i < appendedC.length; i++) {\n            let I = appendedC[i];\n            let gotoSet = getGoToSymbolsSet(symbols, I, go);\n\n            for (let j = 0; j < gotoSet.length; j++) {\n                let state = gotoSet[j];\n                let serializedText = state.serializedText;\n\n                if (!canonicalCollectionMap[serializedText]) {\n                    // add new state\n                    newAppendedC.push(state);\n                    canonicalCollectionMap[serializedText] = true;\n                }\n            }\n        }\n\n        if (!newAppendedC.length) break;\n\n        appendedC = newAppendedC;\n        C = C.concat(appendedC);\n    }\n\n    return C;\n};\n\nlet getGoToSymbolsSet = (symbols, I, go) => {\n    // for every symbol\n    let set = reduce(symbols, (pre, X) => {\n        let newState = go(I, X);\n\n        if (newState && newState.items.length) {\n            pre.push(newState);\n        }\n        return pre;\n    }, []);\n\n    return set;\n};\n","'use strict';\n\nlet LR1CanonicalCollection = require('./LR1CanonicalCollection');\nlet {\n    forEach, findIndex\n} = require('bolzano');\nlet GO = require('./go');\nlet {\n    LR1Itemer\n} = require('../../base/LR1Item');\nlet {\n    sameClosure\n} = require('./closure');\n\nmodule.exports = (grammer) => {\n    let {\n        END_SYMBOL, isTerminalSymbol, N\n    } = grammer;\n\n    let ACTION = [], // action table\n        GOTO = []; // goto table\n\n    let LR1Grammer = LR1Itemer(grammer);\n    let go = GO(grammer, LR1Grammer);\n\n    let C = LR1CanonicalCollection(grammer, LR1Grammer, go);\n\n    forEach(C, (I, index) => {\n        ACTION[index] = ACTION[index] || {};\n\n        // item = [head, body, dotPosition, forwards]\n\n        forEach(I.items, (item) => {\n            // [S`→ S., $] ϵ Ii\n            if (LR1Grammer.isAcceptItem(item)) {\n                //\n                ACTION[index][END_SYMBOL] = {\n                    type: 'accept'\n                };\n            } else if (item.isReduceItem()) { // [A → α., a] ϵ Ii, A≠S`\n                forEach(item.getForwards(), (a) => {\n                    ACTION[index][a] = {\n                        type: 'reduce',\n                        production: item.getProduction()\n                    };\n                });\n            } else if (isTerminalSymbol(item.getNextSymbol())) {\n                let Ij = go(I, item.getNextSymbol());\n\n                if (Ij && Ij.items.length) {\n                    ACTION[index][item.getNextSymbol()] = {\n                        type: 'shift',\n                        state: getStateIndex(C, Ij)\n                    };\n                }\n            }\n        });\n    });\n\n    forEach(C, (I, index) => {\n        GOTO[index] = GOTO[index] || {};\n        forEach(N, (A) => {\n            let Ij = go(I, A);\n            if (Ij && Ij.items.length) {\n                GOTO[index][A] = getStateIndex(C, Ij);\n            }\n        });\n    });\n\n    return {\n        GOTO,\n        ACTION\n    };\n};\n\nlet getStateIndex = (C, I) => findIndex(C, I, {\n    eq: sameClosure\n});\n","'use strict';\n\nlet {\n    reduce\n} = require('bolzano');\n\n/**\n *\n * valide LR(1) item: LR(1) item [A→α.β, a] is valide for prefix ρ=δα, if exists:\n *      S *⇒ δAω ⇒ δαβω\n *\n * inference: if [A→α.Bβ,a] is valide for ρ=δα, and B→θ is a production, then for any b ϵ FIRST(βa), [B→.θ,b] is valide for predix ρ=δα\n *\n * LR(1) item: [head, body, dotPosition, [...forward]]\n *\n * important: when closure is builded, it's immutable\n */\n\nlet buildClosure = (items, grammer, LR1Grammer) => {\n    let appendedItems = items;\n    let itemsMap = {};\n    let prefixMap = {};\n\n    for (let i = 0; i < items.length; i++) {\n        let item = items[i];\n        itemsMap[item.serialize()] = true;\n        prefixMap[item.serializePrefix()] = item;\n    }\n\n    while (true) { // eslint-disable-line\n        let newAppendedItems = reduce(appendedItems, (prev, item) => {\n            let newItems = LR1Grammer.expandItem(item);\n            return prev.concat(newItems);\n        }, []);\n\n        let noRepeatedNewItems = [];\n\n        for (let i = 0; i < newAppendedItems.length; i++) {\n            let item = newAppendedItems[i];\n            let itemId = item.serialize();\n\n            if (!itemsMap[itemId]) {\n                // add new item\n                noRepeatedNewItems.push(item);\n                itemsMap[item.serialize()] = true;\n                let prefixCacheItem = prefixMap[item.serializePrefix()];\n                if (prefixCacheItem) {\n                    prefixMap[item.serializePrefix()] = prefixCacheItem.concatForwards(item.getForwards());\n                } else {\n                    prefixMap[item.serializePrefix()] = item;\n                }\n            }\n        }\n\n        if (!noRepeatedNewItems.length) break;\n\n        items = items.concat(noRepeatedNewItems);\n        appendedItems = noRepeatedNewItems;\n    }\n\n    let serializedText = JSON.stringify(Object.keys(itemsMap).sort());\n\n    let result = [];\n\n    for (let name in prefixMap) {\n        result.push(prefixMap[name]);\n    }\n\n    return {\n        items: result,\n        serializedText\n    };\n};\n\nlet sameClosure = (closure1, closure2) => closure1.serializedText === closure2.serializedText;\n\nmodule.exports = {\n    buildClosure,\n    sameClosure\n};\n","'use strict';\n\nlet {\n    reduce, filter\n} = require('bolzano');\n\nlet {\n    buildClosure\n} = require('./closure');\n\n/**\n * jump\n *\n * A→αX.β => A→α.Xβ\n *\n * J = go(I, X) = closure({A→αX.β | A→α.Xβ ϵ I})\n *\n * if one viable prefix of A→αX.β  of I is ρ=δα, then A→α.Xβ in J has viable prefix δαX.\n *\n * @param I\n *    [head, body, dotPosition]\n *\n * @param X\n *    symbol\n *\n * @param productions\n */\nmodule.exports = (grammer, LR1Grammer) => {\n    let getStartItems = (I, X) => {\n        let nextSymbolX = filter(I.items, (item) => {\n            return item.getNextSymbol() === X;\n        });\n\n        let startItems = reduce(nextSymbolX, (prev, item) => { // eslint-disable-line\n            if (item.restIsNotEmpty()) {\n                prev.push(item.nextPositionItem());\n            }\n\n            return prev;\n        }, []);\n\n        return startItems;\n    };\n\n    return (I, X) => {\n        let targetClosure = null;\n\n        I.cache_GOTO = I.cache_GOTO || {};\n\n        if (I.cache_GOTO[X]) {\n            targetClosure = I.cache_GOTO[X];\n        } else {\n            let startItems = getStartItems(I, X);\n\n            targetClosure = buildClosure(\n                startItems,\n\n                grammer,\n\n                LR1Grammer\n            );\n\n            I.cache_GOTO[X] = targetClosure;\n        }\n\n        return targetClosure;\n    };\n};\n","'use strict';\n\n/**\n * LR ananlysis algorithm\n *\n * input: grammer G's analysis table and a string ω\n * output: if ω ϵ L(G), get the bottom-up analysis, otherwise error\n *\n * - init: (S₀, a₁a₂...an$)\n *\n * - assume current configuration is (S₀X₁S₁...Sm, aiai₊₁...an$)\n *\n *    (1) if action[Sm, ai] = shift S, S = GOTO[Sm, ai], then we got new configuration:\n *          (S₀X₁S₁..XmSm ai S, ai₊₁...an$)\n *    (2) if action[Sm, ai] = reduce by A → β, |β| = r,then:\n *          S = GOTO[Sm₋r, A];\n *          (S₀X₁S₁...Xm₋rSm₋rAS, aiai₊₁...an$)\n *    (3) if action[Sm, ai] = accept, success\n *    (4) if action[Sm, ai] = error, error\n */\n\nlet {\n    END_SYMBOL, EXPAND_START_SYMBOL\n} = require('../base/constant');\n\nlet {\n    initAST,\n    reduceAST,\n    appendToken\n} = require('../reduceAst');\n\n/**\n * configuration = [stack, tokens]\n *\n * stack = [S₀X₁S₁...XmSm], Xi ϵ T U N, Si stands for state\n *\n * @param action function (state, termalSymbol) -> shift | reduce | accept | error\n *      return of action function, is a object: {type, production, errorMsg}\n *      production = [head, body:[]]\n */\nmodule.exports = (ACTION, GOTO, {\n    reduceHandler,\n    acceptHandler\n} = {}) => {\n    // initial configuration\n    let configuration = initConfiguration();\n\n    // initial ast\n    let ast = initAST(EXPAND_START_SYMBOL);\n\n    let action = (state, token) => {\n        let act = ACTION[state][token.name];\n        if (!act) {\n            return {\n                type: 'error',\n                errorMsg: `unexpected symbol (token.name) ${token.name}, token (token.text) is ${token.text}. Try to find ACTION from state ${state}.`\n            };\n        } else {\n            return act;\n        }\n    };\n\n    let goTo = (state, token) => {\n        let nextState = GOTO[state][token.name];\n        if (nextState === undefined) {\n            throw new Error(`fail to goto state from ${state} and symbol (token.name) is ${token.name}, token (token.text) is ${token.text}. Try to do GOTO from state ${state}, but next state not exists.`);\n        }\n        return nextState;\n    };\n\n    let analysis = () => {\n        let topState = getTopState(configuration);\n        let token = getNextInputToken(configuration);\n        // look up action\n        let ret = action(topState, token);\n\n        switch (ret.type) {\n            case 'shift':\n                shift(configuration, ret.state, token);\n                ast = appendToken(ast, token);\n                break;\n            case 'reduce':\n                // reduce production\n                ast = reduce(ast, ret.production, configuration, goTo, reduceHandler);\n                break;\n            case 'error':\n                // error handle\n                throw new Error(ret.errorMsg);\n            case 'accept':\n                // clear configration\n                configuration[1] = [];\n                acceptHandler && acceptHandler(ast); // accept handle\n                break;\n            default:\n                throw new Error(`unexpected action type ${ret.type}, when try to recoginise from [${topState}, ${token.name}]. Token is ${token.text}`);\n        }\n    };\n\n    /**\n     * @param token Object\n     *   accept token as stream\n     *   token = {\n     *        name,\n     *        other...\n     *   }\n     *\n     *   if toke is null, means end of input\n     */\n    return (token) => {\n        if (token === null) {\n            // check state of the configuration\n            configuration[1].push({\n                name: END_SYMBOL\n            });\n            while (configuration[1].length) {\n                analysis();\n            }\n\n            return ast;\n        } else {\n            // add token to configuration\n            configuration[1].push(token);\n            while (configuration[1].length > 1) {\n                analysis();\n            }\n        }\n    };\n};\n\nlet initConfiguration = () => {\n    // initial configuration\n    return [\n        [0], // stack\n        [] // input\n    ];\n};\n\n// (S₀X₁S₁..XmSm, aiai₊₁...an$) -> (S₀X₁S₁..XmSm ai S, ai₊₁...an$)\n// S = GOTO(Sm, ai);\nlet shift = (configuration, state, token) => {\n    let stack = configuration[0];\n    let tokens = configuration[1];\n    stack.push(token, state);\n    tokens.shift();\n};\n\n// (S₀X₁S₁..XmSm, aiai₊₁...an$) -> (S₀X₁S₁...Xm₋rSm₋rAS, aiai₊₁...an$)\n// A → β, r = |β|\n// S = GOTO(Sm₋r, A)\nlet reduce = (ast, [head, body], configuration, goTo, reduceHandler) => {\n    let stack = configuration[0];\n    let reducedTokens = [];\n    for (let i = 0; i < body.length; i++) {\n        stack.pop(); // pop state\n        reducedTokens.push(stack.pop()); // pop token\n    }\n    let top = getTopState(configuration);\n    stack.push(head);\n    stack.push(goTo(top, {\n        name: head,\n        text: `[none terminal symbol] ${head}`\n    }));\n\n    let {newAst, midNode} = reduceAST(ast,\n        ast.children.length - body.length, // start position\n        ast.children.length - 1, // end position\n        head);\n\n    reduceHandler && reduceHandler([head, body], midNode, reducedTokens, ast);\n    return newAst;\n};\n\nlet getTopState = (configuration) => {\n    let stack = configuration[0];\n    return stack[stack.length - 1];\n};\n\nlet getNextInputToken = (configuration) => {\n    let tokens = configuration[1];\n    return tokens[0];\n};\n","'use strict';\n\nlet First = require('./first');\n\nlet {\n    union, reduce, filter, flat, map\n} = require('bolzano');\n\nlet LR1Itemer = (grammer) => {\n    let {\n        END_SYMBOL,\n        isNoneTerminalSymbol,\n        getProductionsOf\n    } = grammer;\n\n    let first = First(grammer);\n\n    let buildLR1Item = (production, dotPosition, forwards) => {\n        let {\n            getHead, getBody, isTerminalSymbol, isEndSymbol\n        } = grammer;\n\n        // [A → α.Bβ, a]\n        let getNextSymbol = () => {\n            return getBody(production)[dotPosition];\n        };\n\n        let getForwards = () => forwards;\n\n        let afterNextRest = () => getBody(production).slice(dotPosition + 1);\n\n        let list = () => [getHead(production), getBody(production), dotPosition, forwards];\n\n        // change the forwards\n        let concatForwards = (newForwards) => {\n            return buildLR1Item(production, dotPosition, union(forwards, newForwards));\n        };\n\n        let adjoints = null;\n\n        // [A → α.Bβ, a], FIRST(βa)\n        let getAdjoints = () => {\n            if (adjoints === null) {\n                let beta = afterNextRest();\n                let forwards = getForwards();\n\n                let ret = reduce(forwards, (prev, letter) => {\n                    let firstSet = beta.length ? first(beta.concat([letter])) : [letter];\n                    return prev.concat(filter(firstSet, (item) => isTerminalSymbol(item) || isEndSymbol(item)));\n                }, []);\n\n                adjoints = ret;\n\n                return ret;\n            } else {\n                return adjoints;\n            }\n        };\n\n        // rest = ε && a = $\n        let isReducedItem = () => {\n            return !afterNextRest().length && getForwards().length === 1 && isEndSymbol(getForwards()[0]);\n        };\n\n        let restIsNotEmpty = () => getBody(production).length && dotPosition < getBody(production).length;\n\n        let nextPositionItem = () => {\n            return buildLR1Item(production, dotPosition + 1, forwards, grammer);\n        };\n\n        let getGrammer = () => grammer;\n\n        // [A → α., a] ϵ Ii, A≠S`\n        let isReduceItem = () => {\n            return dotPosition === getBody(production).length;\n        };\n\n        let getProduction = () => production;\n\n        let serializeId = null;\n\n        let serialize = () => {\n            if (serializeId === null) {\n                serializeId = JSON.stringify([production, dotPosition, forwards.sort()]);\n            }\n            return serializeId;\n        };\n\n        let serializePrefixId = null;\n        let serializePrefix = () => {\n            if (serializePrefixId === null) {\n                serializePrefixId = JSON.stringify([production, dotPosition]);\n            }\n\n            return serializePrefixId;\n        };\n\n        return {\n            getNextSymbol,\n            getProduction,\n            getForwards,\n            afterNextRest,\n            list,\n            concatForwards,\n            getAdjoints,\n            isReducedItem,\n            restIsNotEmpty,\n            nextPositionItem,\n            getGrammer,\n            isReduceItem,\n            serialize,\n            serializePrefix\n        };\n    };\n\n    // S` -> S.\n    var acceptItem = () => {\n        return buildLR1Item([grammer.EXPAND_START_SYMBOL, [grammer.startSymbol]], 1, [grammer.END_SYMBOL]);\n    };\n\n    let isAcceptItem = (item) => {\n        return sameItem(acceptItem(item.getGrammer()), item);\n    };\n\n    var sameItem = (item1, item2) => {\n        return item1.serialize() === item2.serialize();\n    };\n\n    let initItem = () => {\n        let item = buildLR1Item(\n            [grammer.EXPAND_START_SYMBOL, [grammer.startSymbol]],\n            0, [grammer.END_SYMBOL]\n        );\n\n        return item;\n    };\n\n    let fromList = ([head, body, dotPosition, forwards]) => {\n        return buildLR1Item([head, body], dotPosition, forwards);\n    };\n\n    /**\n     * [B → .γ, b]\n     */\n    let supItem = (production, symbol) => {\n        return buildLR1Item(production, 0, [symbol]);\n    };\n\n    let expandCacheMap = {};\n    let expandItem = (item) => {\n        let serializeId = item.serialize();\n\n        if (expandCacheMap[serializeId]) {\n            return expandCacheMap[serializeId].slice(0);\n        }\n\n        let {\n            getNextSymbol,\n            getAdjoints,\n            isReducedItem\n        } = item;\n        let next = getNextSymbol();\n\n        if (!next || !isNoneTerminalSymbol(next)) return [];\n\n        let nextProductions = getProductionsOf(next);\n\n        let newItems = flat(map(nextProductions, (production) => isReducedItem() ? [\n            supItem(production, END_SYMBOL)\n        ] : map(getAdjoints(), (b) => supItem(production, b))));\n\n        expandCacheMap[serializeId] = newItems;\n\n        return newItems;\n    };\n\n    return {\n        expandItem,\n        buildLR1Item,\n        isAcceptItem,\n        sameItem,\n        initItem,\n        fromList,\n        supItem\n    };\n};\n\nmodule.exports = {\n    LR1Itemer\n};\n","'use strict';\n\nmodule.exports = {\n    END_SYMBOL: '$',\n    EXPAND_START_SYMBOL: 'S`',\n    EPSILON: null\n};\n","'use strict';\n\n/**\n * context free grammer\n *    terminal symbol\n *    non-terminal symbol\n *    begin symbol\n *    production\n *    left -> right\n *\n * production = [head, body]\n *\n * TODO validate\n */\n\nconst {\n    END_SYMBOL, EXPAND_START_SYMBOL, EPSILON\n} = require('./constant');\n\n/**\n * context free grammer is read-only\n */\n\nmodule.exports = ({\n    startSymbol,\n    T, N,\n    productions\n}) => {\n    let symbols = T.concat(N);\n\n    // cache\n    let noneTerminalProductionMap = getNoneTerminalProductionMap(productions);\n    let terminalMap = listToExistMap(T);\n    let noneTerminalMap = listToExistMap(N);\n\n    let isTerminalSymbol = (symbol) => !!terminalMap[symbol];\n    let isNoneTerminalSymbol = (symbol) => !!noneTerminalMap[symbol];\n\n    /**\n     * get all the productions startSymbol with none terminal symbol\n     */\n    let getProductionsOf = (noneTerminal) => noneTerminalProductionMap[noneTerminal];\n\n    // A -> ε\n    let isEmptyProduction = (production) => { // eslint-disable-body\n        return !getBody(production).length;\n    };\n\n    let getBody = (production) => production[1];\n\n    let getHead = (production) => production[0];\n\n    let isEndSymbol = (v) => v === END_SYMBOL;\n\n    let getBodyId = (body) => JSON.stringify(body);\n\n    return {\n        isTerminalSymbol,\n        isNoneTerminalSymbol,\n        getProductionsOf,\n        isEmptyProduction,\n        getBody,\n        getBodyId,\n        getHead,\n        EPSILON,\n        END_SYMBOL,\n        EXPAND_START_SYMBOL,\n        startSymbol,\n        productions,\n        isEndSymbol,\n        symbols,\n        N\n    };\n};\n\nlet listToExistMap = (arr) => {\n    let map = {};\n    let tLen = arr.length;\n    for (let i = 0; i < tLen; i++) {\n        map[arr[i]] = true;\n    }\n    return map;\n};\n\n/**\n * get the production map, key is none terminal symbol, keys is the set of producitons\n */\nlet getNoneTerminalProductionMap = (producitons) => {\n    let productionMap = {};\n\n    let productionLen = producitons.length;\n    for (let i = 0; i < productionLen; i++) {\n        let production = producitons[i];\n        let head = production[0];\n        productionMap[head] = productionMap[head] || [];\n        productionMap[head].push(production);\n    }\n\n    return productionMap;\n};\n","'use strict';\n\nlet {\n    contain, union, reduce, difference, forEach\n} = require('bolzano');\n\nlet {\n    isArray\n} = require('basetype');\n\nmodule.exports = (grammer) => {\n    // cache first set\n    let firstMap = {};\n\n    /**\n     * first set of sentential form\n     *\n     * α ϵ (T U N)*\n     *\n     * FIRST(α) = { a | α *=> a..., a ϵ T }\n     *\n     * if α *=> ε, then ε ϵ FIRST(α)\n     *\n     * A → ε => ['A', []]\n     *\n     * using null stand for ε\n     */\n\n    let first = (X) => {\n        if (firstMap[X]) return firstMap[X];\n        let ret = firstSet(X);\n        firstMap[X] = ret;\n        return ret;\n    };\n\n    let firstSet = (X) => {\n        let {\n            isTerminalSymbol,\n            getProductionsOf,\n            isEmptyProduction,\n            getBody,\n            EPSILON\n        } = grammer;\n\n        if (isTerminalSymbol(X)) {\n            return [X];\n        } else {\n            // find all productions start with X\n            let ps = getProductionsOf(X);\n\n            return reduce(ps, (prev, production) => {\n                let body = getBody(production);\n\n                if (isEmptyProduction(production)) {\n                    return union(prev, [EPSILON]); // union ε\n                } else {\n                    if (isTerminalSymbol(body[0])) {\n                        return union(prev, [body[0]]);\n                    } else {\n                        return union(prev, firstList(body, grammer));\n                    }\n                }\n            }, []);\n        }\n    };\n\n    let firstListMap = {};\n    /**\n     * [...ab...]\n     */\n    let firstList = (body) => {\n        let {\n            EPSILON, getBodyId\n        } = grammer;\n\n        let bodyId = getBodyId(body);\n        if (firstListMap[bodyId]) {\n            return firstListMap[bodyId];\n        }\n\n        let ret = [];\n        forEach(body, (y, index) => {\n            let set = first(y);\n\n            ret = union(ret, difference(set, [EPSILON]));\n            if (!contain(set, EPSILON)) { // stop\n                return true;\n            }\n\n            if (index === body.length - 1) {\n                ret = union(ret, [EPSILON]);\n            }\n        });\n\n        firstListMap[bodyId] = ret;\n        return ret;\n    };\n\n    return (alpha) => {\n        if (isArray(alpha)) {\n            return firstList(alpha);\n        } else {\n            return first(alpha);\n        }\n    };\n};\n","'use strict';\n\n/**\n * syntax analysis\n *\n * background knowledge\n *\n * 1. context free grammer\n *    terminal symbol\n *    non-terminal symbol\n *    begin symbol\n *    production\n *          left -> right\n * 2. shift-in reduce\n */\n\nlet LR = require('./LR');\nlet LR1Table = require('./LR/LR1/LR1Table');\nlet ctxFreeGrammer = require('./base/ctxFreeGrammer');\nlet {\n    forEach\n} = require('bolzano');\n\n/**\n * just used for testing\n */\nlet parse = (g, handlers) => {\n    let {\n        ACTION, GOTO\n    } = LR1Table(ctxFreeGrammer(g));\n\n    return (tokens) => {\n        let parser = LR(ACTION, GOTO, handlers);\n        forEach(tokens, parser);\n        return parser(null);\n    };\n};\n\nlet buildLR1Table = (g) => {\n    let grammer = ctxFreeGrammer(g);\n    return LR1Table(grammer);\n};\n\nmodule.exports = {\n    LR, LR1Table, parse, ctxFreeGrammer, buildLR1Table\n};\n","'use strict';\n\n/**\n * reduce production to generate a AST\n *\n * s *rm=> αAω *rm=> αβω\n *\n * reduce from αβω to αAω by A → β\n *\n * current AST:\n *           S\n *        /  |  \\\n *       /  / \\  \\\n *      α    β    ω\n *     / \\  / \\  / \\\n *     ...  ...  ...\n *\n * reduce by A → β\n *\n * result AST:\n *           S\n *        /  |  \\\n *       /   A   \\\n *      /   / \\   \\\n *     α     β     ω\n *    / \\   / \\   / \\\n *    ...   ...   ...\n *\n * AST data structure\n * node = {\n *      type: terminal | none-terminal,\n *      symbol,\n *      token,\n *      children: [node]\n * }\n *\n * reduce start point: a token list\n * reduce end point: S → r\n *\n * 1. init AST from a list of token\n *\n * 2. reduce production to expand AST\n */\n\nlet {\n    map\n} = require('bolzano');\n\nconst TERMINAL_TYPE = 'terminal';\nconst NONE_TERMINAL_TYPE = 'none-terminal';\n\n/**\n * @param startSymbol String\n * @param tokens Array\n *\n * @return ast Object\n *\n * tokens = [{\n *     name,\n *     text\n * }]\n */\nlet initAST = (startSymbol, tokens = []) => {\n    return {\n        type: NONE_TERMINAL_TYPE,\n        symbol: startSymbol,\n        children: map(tokens, tokenToLeaf)\n    };\n};\n\nlet tokenToLeaf = (token) => {\n    return {\n        type: TERMINAL_TYPE,\n        symbol: token.name,\n        token\n    };\n};\n\n/**\n * s *rm=> αAω *rm=> αβω\n *\n * reduce from αβω to αAω by A → β\n *\n * @param ast\n * @param start\n * @param end\n * @param leftSymbol\n *\n * @return ast\n *\n * β = ast.children[start] ~ ast.children[end]\n *\n * 1. remove β from ast, replace with A\n * 2. make every elements of β as A's child\n */\nlet reduceAST = (ast, start = 0, end = 0, leftSymbol) => {\n    // generate a new middle node, which will hang beta nodes\n    let midNode = {\n        type: NONE_TERMINAL_TYPE,\n        symbol: leftSymbol\n    };\n\n    let beta = ast.children.splice(start, end - start + 1, midNode);\n    midNode.children = beta;\n\n    return {newAst: ast, midNode};\n};\n\n/**\n * @param ast\n * @param token\n */\nlet appendToken = (ast, token) => {\n    ast.children.push(tokenToLeaf(token));\n    return ast;\n};\n\nmodule.exports = {\n    initAST,\n    reduceAST,\n    appendToken\n};\n","'use strict';\n\nlet {\n    stringGraph,\n    numberGraph\n} = require('cl-fsm/apply/json');\n\nlet {\n    buildFSM\n} = require('stream-token-parser');\n\nlet FSM = require('cl-fsm');\nlet {\n    stateGraphDSL\n} = FSM;\n\nlet {\n    g,\n    c,\n    union,\n    sequence,\n    range,\n    circle\n} = stateGraphDSL;\n\nlet whitespace = union(' ', '\\f', '\\n', '\\r', '\\t', '\\v', '\\u00a0', '\\u1680', '\\u180e', '\\u2000-', '\\u200a', '\\u2028', '\\u2029', '\\u202f', '\\u205f', '\\u3000', '\\ufeff');\n\n// .abcbf\n// .0\n// ._\nlet nodeName = g(sequence(\n    '.',\n    union('_', '%', range('a', 'z'), range('A', 'Z'), range('0', '9')),\n    circle(union('_', '%', range('a', 'z'), range('A', 'Z'), range('0', '9')))\n));\n\nlet variableName = g(sequence(\n    union('_', range('a', 'z'), range('A', 'Z')),\n    circle(union('_', range('a', 'z'), range('A', 'Z'), range('0', '9')))\n));\n\nlet nodeNameVariable = g(sequence(\n    '.',\n    '[',\n\n    circle(whitespace, g(sequence(\n        union('_', range('a', 'z'), range('A', 'Z')),\n\n        circle(union('_', range('a', 'z'), range('A', 'Z'), range('0', '9')),\n            circle(whitespace,\n                g(c(']'))\n            ),\n        ))))\n));\n\nmodule.exports = [\n\n    {\n        priority: 1,\n        match: 'true',\n        name: 'true'\n    }, {\n        priority: 1,\n        match: 'false',\n        name: 'false'\n    }, {\n        priority: 1,\n        match: 'null',\n        name: 'null'\n    }, {\n        priority: 1,\n        match: buildFSM(stringGraph),\n        name: 'string'\n    }, {\n        priority: 1,\n        match: buildFSM(numberGraph),\n        name: 'number'\n    },\n\n    {\n        priority: 1,\n        match: buildFSM(nodeName),\n        name: 'nodeName'\n    },\n    {\n        priority: 1,\n        match: buildFSM(nodeNameVariable),\n        name: 'nodeNameVariable'\n    },\n    {\n        priority: 1,\n        match: buildFSM(variableName),\n        name: 'variableName'\n    },\n    {\n        priority: 1,\n        match: '=',\n        name: 'assign'\n    },\n    {\n        priority: 1,\n        match: '-',\n        name: 'delete'\n    },\n    {\n        priority: 1,\n        match: '+',\n        name: 'append'\n    },\n    {\n        priority: 1,\n        match: ';',\n        name: 'semicolon'\n    },\n    {\n        priority: 1,\n        match: '(',\n        name: 'leftBracket'\n    },\n    {\n        priority: 1,\n        match: ')',\n        name: 'rightBracket'\n    },\n    {\n        priority: 1,\n        match: ',',\n        name: 'comma'\n    },\n    {\n        priority: 1,\n        match: buildFSM(g(\n            c(whitespace)\n        )),\n        name: 'whitespace'\n    }\n];\n","module.exports = require('./src');\n","'use strict';\n\nlet {\n    autoId,\n    isObject,\n\n    modifySuccess,\n    removeNoneExist,\n    removeSuccess\n} = require('./util');\n\nmodule.exports = (jsonData, {\n    missingValue = undefined\n} = {}) => {\n    let queryByPath = (path) => {\n        let cur = jsonData;\n        for (let i = 0; i < path.length; i++) {\n            if (!isObject(cur)) {\n                return missingValue;\n            } else {\n                if (cur.hasOwnProperty(path[i])) {\n                    cur = cur[path[i]];\n                } else {\n                    return missingValue;\n                }\n            }\n        }\n\n        return cur;\n    };\n\n    let setByPath = (path, value) => {\n        let parent = jsonData;\n\n        for (let i = 0; i < path.length - 1; i++) {\n            let part = path[i];\n            let next = parent[part];\n            if (!isObject(next)) { // if is not object, just override to a empty object\n                next = {}; // create a new middle node\n                parent[part] = next;\n            }\n            parent = next;\n        }\n\n        parent[path[path.length - 1]] = value; // set value\n        return modifySuccess(path, value);\n    };\n\n    return {\n        queryByPath,\n\n        setByPath,\n\n        removeByPath: (path) => {\n            let parentPath = path.slice(0, path.length - 1);\n            let lastKey = path[path.length - 1];\n            let parent = queryByPath(parentPath);\n            if (parent === missingValue || !isObject(parent) || !parent.hasOwnProperty(lastKey)) {\n                return removeNoneExist(path);\n            } else {\n                delete parent[lastKey];\n                return removeSuccess(path);\n            }\n        },\n\n        appendByPath: (path, value) => {\n            return setByPath(path.concat([autoId()]), value);\n        }\n    };\n};\n","'use strict';\n\nlet uuidv4 = require('uuid/v4');\n\nlet autoId = () => {\n    let time = new Date().getTime(); // used to sort by time\n    // generate id\n    return `_gid_${time}_${uuidv4().replace(/-/g, '_')}`;\n};\n\nlet isObject = v => v && typeof v === 'object';\n\nconst O_T_MODIFY = 'update';\nconst O_T_REMOVE = 'delete';\nconst T_SUCCESS = 'success';\n\nconst ERR_T_REMOVE_NONE_EXIST = 'remove_none_exist';\n\nlet modifySuccess = (path, value) => {\n    return {\n        operationType: O_T_MODIFY,\n        resultType: T_SUCCESS,\n\n        path,\n        value: value && value.toString()\n    };\n};\n\nlet removeNoneExist = (path) => {\n    return {\n        operationType: O_T_REMOVE,\n        resultType: ERR_T_REMOVE_NONE_EXIST,\n\n        path\n    };\n};\n\nlet removeSuccess = (path) => {\n    return {\n        operationType: O_T_REMOVE,\n        resultType: T_SUCCESS,\n\n        path\n    };\n};\n\nmodule.exports = {\n    autoId,\n    isObject,\n\n    modifySuccess,\n    removeNoneExist,\n    removeSuccess\n};\n","module.exports={\"GOTO\":[{\"PROGRAM\":11,\"EXPRESSION_LIST\":12,\"EXPRESSION\":13,\"UPDATE_EXPRESSION\":14,\"QUERY_EXPRESSION\":15,\"PATH\":16,\"ATOM_DATA\":17},{\"PATH\":20},{\"PATH\":23},{},{\"PATH\":25},{\"PATH\":26},{},{},{},{},{},{},{},{},{},{},{},{},{\"PATH\":29},{\"PATH\":30},{},{\"PATH\":31},{\"PATH\":32},{},{\"QUERY_EXPRESSION\":43,\"QUERY_EXPRESSION_LIST\":44,\"PATH\":45,\"ATOM_DATA\":46},{},{},{\"EXPRESSION_LIST\":47,\"EXPRESSION\":13,\"UPDATE_EXPRESSION\":14,\"QUERY_EXPRESSION\":15,\"PATH\":16,\"ATOM_DATA\":17},{\"QUERY_EXPRESSION\":48,\"PATH\":49,\"ATOM_DATA\":17},{},{},{},{},{\"QUERY_EXPRESSION\":50,\"PATH\":49,\"ATOM_DATA\":17},{},{},{\"PATH\":52},{\"PATH\":53},{},{},{},{},{},{},{},{},{},{},{},{},{},{\"QUERY_EXPRESSION\":43,\"QUERY_EXPRESSION_LIST\":57,\"PATH\":45,\"ATOM_DATA\":46},{},{},{\"QUERY_EXPRESSION\":43,\"QUERY_EXPRESSION_LIST\":58,\"PATH\":45,\"ATOM_DATA\":46},{},{},{},{},{}],\"ACTION\":[{\"$\":{\"type\":\"reduce\",\"production\":[\"EXPRESSION\",[]]},\"semicolon\":{\"type\":\"reduce\",\"production\":[\"EXPRESSION\",[]]},\"variableName\":{\"type\":\"shift\",\"state\":3},\"delete\":{\"type\":\"shift\",\"state\":1},\"append\":{\"type\":\"shift\",\"state\":2},\"true\":{\"type\":\"shift\",\"state\":6},\"false\":{\"type\":\"shift\",\"state\":7},\"null\":{\"type\":\"shift\",\"state\":8},\"string\":{\"type\":\"shift\",\"state\":9},\"number\":{\"type\":\"shift\",\"state\":10},\"nodeName\":{\"type\":\"shift\",\"state\":4},\"nodeNameVariable\":{\"type\":\"shift\",\"state\":5}},{\"nodeName\":{\"type\":\"shift\",\"state\":18},\"nodeNameVariable\":{\"type\":\"shift\",\"state\":19}},{\"nodeName\":{\"type\":\"shift\",\"state\":21},\"nodeNameVariable\":{\"type\":\"shift\",\"state\":22}},{\"$\":{\"type\":\"reduce\",\"production\":[\"QUERY_EXPRESSION\",[\"variableName\"]]},\"semicolon\":{\"type\":\"reduce\",\"production\":[\"QUERY_EXPRESSION\",[\"variableName\"]]},\"leftBracket\":{\"type\":\"shift\",\"state\":24}},{\"$\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeName\"]]},\"assign\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeName\"]]},\"semicolon\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeName\"]]},\"nodeName\":{\"type\":\"shift\",\"state\":4},\"nodeNameVariable\":{\"type\":\"shift\",\"state\":5}},{\"$\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeNameVariable\"]]},\"assign\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeNameVariable\"]]},\"semicolon\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeNameVariable\"]]},\"nodeName\":{\"type\":\"shift\",\"state\":4},\"nodeNameVariable\":{\"type\":\"shift\",\"state\":5}},{\"$\":{\"type\":\"reduce\",\"production\":[\"ATOM_DATA\",[\"true\"]]},\"semicolon\":{\"type\":\"reduce\",\"production\":[\"ATOM_DATA\",[\"true\"]]}},{\"$\":{\"type\":\"reduce\",\"production\":[\"ATOM_DATA\",[\"false\"]]},\"semicolon\":{\"type\":\"reduce\",\"production\":[\"ATOM_DATA\",[\"false\"]]}},{\"$\":{\"type\":\"reduce\",\"production\":[\"ATOM_DATA\",[\"null\"]]},\"semicolon\":{\"type\":\"reduce\",\"production\":[\"ATOM_DATA\",[\"null\"]]}},{\"$\":{\"type\":\"reduce\",\"production\":[\"ATOM_DATA\",[\"string\"]]},\"semicolon\":{\"type\":\"reduce\",\"production\":[\"ATOM_DATA\",[\"string\"]]}},{\"$\":{\"type\":\"reduce\",\"production\":[\"ATOM_DATA\",[\"number\"]]},\"semicolon\":{\"type\":\"reduce\",\"production\":[\"ATOM_DATA\",[\"number\"]]}},{\"$\":{\"type\":\"accept\"}},{\"$\":{\"type\":\"reduce\",\"production\":[\"PROGRAM\",[\"EXPRESSION_LIST\"]]}},{\"$\":{\"type\":\"reduce\",\"production\":[\"EXPRESSION_LIST\",[\"EXPRESSION\"]]},\"semicolon\":{\"type\":\"shift\",\"state\":27}},{\"$\":{\"type\":\"reduce\",\"production\":[\"EXPRESSION\",[\"UPDATE_EXPRESSION\"]]},\"semicolon\":{\"type\":\"reduce\",\"production\":[\"EXPRESSION\",[\"UPDATE_EXPRESSION\"]]}},{\"$\":{\"type\":\"reduce\",\"production\":[\"EXPRESSION\",[\"QUERY_EXPRESSION\"]]},\"semicolon\":{\"type\":\"reduce\",\"production\":[\"EXPRESSION\",[\"QUERY_EXPRESSION\"]]}},{\"$\":{\"type\":\"reduce\",\"production\":[\"QUERY_EXPRESSION\",[\"PATH\"]]},\"semicolon\":{\"type\":\"reduce\",\"production\":[\"QUERY_EXPRESSION\",[\"PATH\"]]},\"assign\":{\"type\":\"shift\",\"state\":28}},{\"$\":{\"type\":\"reduce\",\"production\":[\"QUERY_EXPRESSION\",[\"ATOM_DATA\"]]},\"semicolon\":{\"type\":\"reduce\",\"production\":[\"QUERY_EXPRESSION\",[\"ATOM_DATA\"]]}},{\"$\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeName\"]]},\"semicolon\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeName\"]]},\"nodeName\":{\"type\":\"shift\",\"state\":18},\"nodeNameVariable\":{\"type\":\"shift\",\"state\":19}},{\"$\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeNameVariable\"]]},\"semicolon\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeNameVariable\"]]},\"nodeName\":{\"type\":\"shift\",\"state\":18},\"nodeNameVariable\":{\"type\":\"shift\",\"state\":19}},{\"$\":{\"type\":\"reduce\",\"production\":[\"UPDATE_EXPRESSION\",[\"delete\",\"PATH\"]]},\"semicolon\":{\"type\":\"reduce\",\"production\":[\"UPDATE_EXPRESSION\",[\"delete\",\"PATH\"]]}},{\"assign\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeName\"]]},\"nodeName\":{\"type\":\"shift\",\"state\":21},\"nodeNameVariable\":{\"type\":\"shift\",\"state\":22}},{\"assign\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeNameVariable\"]]},\"nodeName\":{\"type\":\"shift\",\"state\":21},\"nodeNameVariable\":{\"type\":\"shift\",\"state\":22}},{\"assign\":{\"type\":\"shift\",\"state\":33}},{\"rightBracket\":{\"type\":\"shift\",\"state\":35},\"variableName\":{\"type\":\"shift\",\"state\":34},\"true\":{\"type\":\"shift\",\"state\":38},\"false\":{\"type\":\"shift\",\"state\":39},\"null\":{\"type\":\"shift\",\"state\":40},\"string\":{\"type\":\"shift\",\"state\":41},\"number\":{\"type\":\"shift\",\"state\":42},\"nodeName\":{\"type\":\"shift\",\"state\":36},\"nodeNameVariable\":{\"type\":\"shift\",\"state\":37}},{\"$\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeName\",\"PATH\"]]},\"assign\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeName\",\"PATH\"]]},\"semicolon\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeName\",\"PATH\"]]}},{\"$\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeNameVariable\",\"PATH\"]]},\"assign\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeNameVariable\",\"PATH\"]]},\"semicolon\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeNameVariable\",\"PATH\"]]}},{\"$\":{\"type\":\"reduce\",\"production\":[\"EXPRESSION\",[]]},\"semicolon\":{\"type\":\"reduce\",\"production\":[\"EXPRESSION\",[]]},\"variableName\":{\"type\":\"shift\",\"state\":3},\"delete\":{\"type\":\"shift\",\"state\":1},\"append\":{\"type\":\"shift\",\"state\":2},\"true\":{\"type\":\"shift\",\"state\":6},\"false\":{\"type\":\"shift\",\"state\":7},\"null\":{\"type\":\"shift\",\"state\":8},\"string\":{\"type\":\"shift\",\"state\":9},\"number\":{\"type\":\"shift\",\"state\":10},\"nodeName\":{\"type\":\"shift\",\"state\":4},\"nodeNameVariable\":{\"type\":\"shift\",\"state\":5}},{\"variableName\":{\"type\":\"shift\",\"state\":3},\"true\":{\"type\":\"shift\",\"state\":6},\"false\":{\"type\":\"shift\",\"state\":7},\"null\":{\"type\":\"shift\",\"state\":8},\"string\":{\"type\":\"shift\",\"state\":9},\"number\":{\"type\":\"shift\",\"state\":10},\"nodeName\":{\"type\":\"shift\",\"state\":18},\"nodeNameVariable\":{\"type\":\"shift\",\"state\":19}},{\"$\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeName\",\"PATH\"]]},\"semicolon\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeName\",\"PATH\"]]}},{\"$\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeNameVariable\",\"PATH\"]]},\"semicolon\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeNameVariable\",\"PATH\"]]}},{\"assign\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeName\",\"PATH\"]]}},{\"assign\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeNameVariable\",\"PATH\"]]}},{\"variableName\":{\"type\":\"shift\",\"state\":3},\"true\":{\"type\":\"shift\",\"state\":6},\"false\":{\"type\":\"shift\",\"state\":7},\"null\":{\"type\":\"shift\",\"state\":8},\"string\":{\"type\":\"shift\",\"state\":9},\"number\":{\"type\":\"shift\",\"state\":10},\"nodeName\":{\"type\":\"shift\",\"state\":18},\"nodeNameVariable\":{\"type\":\"shift\",\"state\":19}},{\"comma\":{\"type\":\"reduce\",\"production\":[\"QUERY_EXPRESSION\",[\"variableName\"]]},\"rightBracket\":{\"type\":\"reduce\",\"production\":[\"QUERY_EXPRESSION\",[\"variableName\"]]},\"leftBracket\":{\"type\":\"shift\",\"state\":51}},{\"$\":{\"type\":\"reduce\",\"production\":[\"QUERY_EXPRESSION\",[\"variableName\",\"leftBracket\",\"rightBracket\"]]},\"semicolon\":{\"type\":\"reduce\",\"production\":[\"QUERY_EXPRESSION\",[\"variableName\",\"leftBracket\",\"rightBracket\"]]}},{\"comma\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeName\"]]},\"rightBracket\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeName\"]]},\"nodeName\":{\"type\":\"shift\",\"state\":36},\"nodeNameVariable\":{\"type\":\"shift\",\"state\":37}},{\"comma\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeNameVariable\"]]},\"rightBracket\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeNameVariable\"]]},\"nodeName\":{\"type\":\"shift\",\"state\":36},\"nodeNameVariable\":{\"type\":\"shift\",\"state\":37}},{\"comma\":{\"type\":\"reduce\",\"production\":[\"ATOM_DATA\",[\"true\"]]},\"rightBracket\":{\"type\":\"reduce\",\"production\":[\"ATOM_DATA\",[\"true\"]]}},{\"comma\":{\"type\":\"reduce\",\"production\":[\"ATOM_DATA\",[\"false\"]]},\"rightBracket\":{\"type\":\"reduce\",\"production\":[\"ATOM_DATA\",[\"false\"]]}},{\"comma\":{\"type\":\"reduce\",\"production\":[\"ATOM_DATA\",[\"null\"]]},\"rightBracket\":{\"type\":\"reduce\",\"production\":[\"ATOM_DATA\",[\"null\"]]}},{\"comma\":{\"type\":\"reduce\",\"production\":[\"ATOM_DATA\",[\"string\"]]},\"rightBracket\":{\"type\":\"reduce\",\"production\":[\"ATOM_DATA\",[\"string\"]]}},{\"comma\":{\"type\":\"reduce\",\"production\":[\"ATOM_DATA\",[\"number\"]]},\"rightBracket\":{\"type\":\"reduce\",\"production\":[\"ATOM_DATA\",[\"number\"]]}},{\"rightBracket\":{\"type\":\"reduce\",\"production\":[\"QUERY_EXPRESSION_LIST\",[\"QUERY_EXPRESSION\"]]},\"comma\":{\"type\":\"shift\",\"state\":54}},{\"rightBracket\":{\"type\":\"shift\",\"state\":55}},{\"comma\":{\"type\":\"reduce\",\"production\":[\"QUERY_EXPRESSION\",[\"PATH\"]]},\"rightBracket\":{\"type\":\"reduce\",\"production\":[\"QUERY_EXPRESSION\",[\"PATH\"]]}},{\"comma\":{\"type\":\"reduce\",\"production\":[\"QUERY_EXPRESSION\",[\"ATOM_DATA\"]]},\"rightBracket\":{\"type\":\"reduce\",\"production\":[\"QUERY_EXPRESSION\",[\"ATOM_DATA\"]]}},{\"$\":{\"type\":\"reduce\",\"production\":[\"EXPRESSION_LIST\",[\"EXPRESSION\",\"semicolon\",\"EXPRESSION_LIST\"]]}},{\"$\":{\"type\":\"reduce\",\"production\":[\"UPDATE_EXPRESSION\",[\"PATH\",\"assign\",\"QUERY_EXPRESSION\"]]},\"semicolon\":{\"type\":\"reduce\",\"production\":[\"UPDATE_EXPRESSION\",[\"PATH\",\"assign\",\"QUERY_EXPRESSION\"]]}},{\"$\":{\"type\":\"reduce\",\"production\":[\"QUERY_EXPRESSION\",[\"PATH\"]]},\"semicolon\":{\"type\":\"reduce\",\"production\":[\"QUERY_EXPRESSION\",[\"PATH\"]]}},{\"$\":{\"type\":\"reduce\",\"production\":[\"UPDATE_EXPRESSION\",[\"append\",\"PATH\",\"assign\",\"QUERY_EXPRESSION\"]]},\"semicolon\":{\"type\":\"reduce\",\"production\":[\"UPDATE_EXPRESSION\",[\"append\",\"PATH\",\"assign\",\"QUERY_EXPRESSION\"]]}},{\"rightBracket\":{\"type\":\"shift\",\"state\":56},\"variableName\":{\"type\":\"shift\",\"state\":34},\"true\":{\"type\":\"shift\",\"state\":38},\"false\":{\"type\":\"shift\",\"state\":39},\"null\":{\"type\":\"shift\",\"state\":40},\"string\":{\"type\":\"shift\",\"state\":41},\"number\":{\"type\":\"shift\",\"state\":42},\"nodeName\":{\"type\":\"shift\",\"state\":36},\"nodeNameVariable\":{\"type\":\"shift\",\"state\":37}},{\"comma\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeName\",\"PATH\"]]},\"rightBracket\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeName\",\"PATH\"]]}},{\"comma\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeNameVariable\",\"PATH\"]]},\"rightBracket\":{\"type\":\"reduce\",\"production\":[\"PATH\",[\"nodeNameVariable\",\"PATH\"]]}},{\"variableName\":{\"type\":\"shift\",\"state\":34},\"true\":{\"type\":\"shift\",\"state\":38},\"false\":{\"type\":\"shift\",\"state\":39},\"null\":{\"type\":\"shift\",\"state\":40},\"string\":{\"type\":\"shift\",\"state\":41},\"number\":{\"type\":\"shift\",\"state\":42},\"nodeName\":{\"type\":\"shift\",\"state\":36},\"nodeNameVariable\":{\"type\":\"shift\",\"state\":37}},{\"$\":{\"type\":\"reduce\",\"production\":[\"QUERY_EXPRESSION\",[\"variableName\",\"leftBracket\",\"QUERY_EXPRESSION_LIST\",\"rightBracket\"]]},\"semicolon\":{\"type\":\"reduce\",\"production\":[\"QUERY_EXPRESSION\",[\"variableName\",\"leftBracket\",\"QUERY_EXPRESSION_LIST\",\"rightBracket\"]]}},{\"comma\":{\"type\":\"reduce\",\"production\":[\"QUERY_EXPRESSION\",[\"variableName\",\"leftBracket\",\"rightBracket\"]]},\"rightBracket\":{\"type\":\"reduce\",\"production\":[\"QUERY_EXPRESSION\",[\"variableName\",\"leftBracket\",\"rightBracket\"]]}},{\"rightBracket\":{\"type\":\"shift\",\"state\":59}},{\"rightBracket\":{\"type\":\"reduce\",\"production\":[\"QUERY_EXPRESSION_LIST\",[\"QUERY_EXPRESSION\",\"comma\",\"QUERY_EXPRESSION_LIST\"]]}},{\"comma\":{\"type\":\"reduce\",\"production\":[\"QUERY_EXPRESSION\",[\"variableName\",\"leftBracket\",\"QUERY_EXPRESSION_LIST\",\"rightBracket\"]]},\"rightBracket\":{\"type\":\"reduce\",\"production\":[\"QUERY_EXPRESSION\",[\"variableName\",\"leftBracket\",\"QUERY_EXPRESSION_LIST\",\"rightBracket\"]]}}]}","module.exports = {\n    P_PROGRAM: 'PROGRAM := EXPRESSION_LIST',\n\n    P_EXPRESSION_LIST_0: 'EXPRESSION_LIST := EXPRESSION',\n    P_EXPRESSION_LIST_1: 'EXPRESSION_LIST := EXPRESSION semicolon EXPRESSION_LIST',\n\n    P_EXPRESSION_0: 'EXPRESSION := QUERY_EXPRESSION',\n    P_EXPRESSION_1: 'EXPRESSION := UPDATE_EXPRESSION',\n    P_EXPRESSION_2: 'EXPRESSION := ',\n\n    P_UPDATE_EXPRESSION_0: 'UPDATE_EXPRESSION := PATH assign QUERY_EXPRESSION',\n    P_UPDATE_EXPRESSION_1: 'UPDATE_EXPRESSION := delete PATH',\n    P_UPDATE_EXPRESSION_2: 'UPDATE_EXPRESSION := append PATH assign QUERY_EXPRESSION',\n\n    P_QUERY_EXPRESSION_0: 'QUERY_EXPRESSION := ATOM_DATA',\n    P_QUERY_EXPRESSION_1: 'QUERY_EXPRESSION := variableName',\n    P_QUERY_EXPRESSION_2: 'QUERY_EXPRESSION := PATH',\n    P_QUERY_EXPRESSION_3: 'QUERY_EXPRESSION := variableName leftBracket rightBracket',\n    P_QUERY_EXPRESSION_4: 'QUERY_EXPRESSION := variableName leftBracket QUERY_EXPRESSION_LIST rightBracket',\n\n    P_QUERY_EXPRESSION_LIST_0: 'QUERY_EXPRESSION_LIST := QUERY_EXPRESSION',\n    P_QUERY_EXPRESSION_LIST_1: 'QUERY_EXPRESSION_LIST := QUERY_EXPRESSION comma QUERY_EXPRESSION_LIST',\n\n    P_PATH_0: 'PATH := nodeName',\n    P_PATH_1: 'PATH := nodeName PATH',\n    P_PATH_2: 'PATH := nodeNameVariable',\n    P_PATH_3: 'PATH := nodeNameVariable PATH',\n\n    P_ATOM_DATA_0: 'ATOM_DATA := true',\n    P_ATOM_DATA_1: 'ATOM_DATA := false',\n    P_ATOM_DATA_2: 'ATOM_DATA := null',\n    P_ATOM_DATA_3: 'ATOM_DATA := string',\n    P_ATOM_DATA_4: 'ATOM_DATA := number',\n\n    T_ATOM: 'atom',\n    T_PATH: 'path',\n    T_FUNCTION: 'function',\n    T_VARIABLE_NAME: 'variableName',\n    T_ASSIGN: 'assign',\n    T_DELETE: 'delete',\n    T_APPEND: 'append',\n    T_NODE_NAME: 'nodeName',\n    T_NODE_NAME_VARIABLE: 'nodeNameVariable',\n\n    A_DEFAULT: 'default'\n};\n","'use strict';\n\nlet parser = require('./parser');\nlet {\n    checkAST,\n    runTimeCheck,\n    getVariable\n} = require('./stub');\n\nlet {\n    T_ATOM,\n    T_PATH,\n    T_ASSIGN,\n    T_DELETE,\n    T_APPEND,\n    T_VARIABLE_NAME,\n    T_FUNCTION,\n    T_NODE_NAME,\n    T_NODE_NAME_VARIABLE\n} = require('./const');\n\nlet executeAST = (ast, {\n    queryByPath,\n    setByPath,\n    removeByPath,\n    appendByPath,\n    variableMap = {},\n    variableStub = {},\n    skipCheck = false\n}) => {\n    // TODO check params\n    // check variableStub\n\n    if (!skipCheck) {\n        runTimeCheck(variableStub, variableMap);\n    }\n\n    let open = [];\n    for (let i = 0; i < ast.length; i++) {\n        open.unshift({\n            node: ast[i],\n            visited: false\n        });\n    }\n\n    let valueStack = [];\n\n    while (open.length) {\n        let top = open[open.length - 1];\n        let topNode = top.node;\n        if (topNode.type === T_ATOM) {\n            valueStack.push(topNode.value);\n            open.pop();\n        } else if (topNode.type === T_VARIABLE_NAME) { // pickup variable\n            let variableName = topNode.value;\n            let variableValue = getVariable(variableName, variableMap, variableStub);\n            valueStack.push(variableValue);\n            open.pop();\n        } else if (topNode.type === T_PATH) {\n            valueStack.push(queryByPath(resolvePath(topNode.value, variableMap)));\n            open.pop();\n        } else if (topNode.type === T_FUNCTION) {\n            let {\n                funName,\n                params\n            } = topNode.value;\n\n            if (top.visited) {\n                // get value from value stack\n                let paramValues = [];\n                for (let i = 0; i < params.length; i++) {\n                    paramValues.push(valueStack.pop());\n                }\n                valueStack.push(variableMap[funName](...paramValues));\n                open.pop();\n            } else {\n                top.visited = true;\n                for (let i = 0; i < params.length; i++) {\n                    open.push({\n                        node: params[i],\n                        visited: false\n                    });\n                }\n            }\n        } else if (topNode.type === T_ASSIGN) {\n            let {\n                path,\n                value\n            } = topNode.value;\n\n            if (top.visited) {\n                let assignValue = valueStack.pop();\n                valueStack.push(setByPath(resolvePath(path.value, variableMap), assignValue));\n                open.pop();\n            } else {\n                top.visited = true;\n                open.push({\n                    node: value,\n                    visited: false\n                });\n            }\n        } else if (topNode.type === T_DELETE) {\n            let {\n                path\n            } = topNode.value;\n\n            valueStack.push(removeByPath(resolvePath(path.value, variableMap)));\n            open.pop();\n        } else if (topNode.type === T_APPEND) {\n            let {\n                path,\n                value\n            } = topNode.value;\n\n            if (top.visited) {\n                let assignValue = valueStack.pop();\n                valueStack.push(appendByPath(resolvePath(path.value, variableMap), assignValue));\n                open.pop();\n            } else {\n                top.visited = true;\n                open.push({\n                    node: value,\n                    visited: false\n                });\n            }\n        }\n    }\n\n    return valueStack[valueStack.length - 1];\n};\n\nlet resolvePath = (path, variableMap) => {\n    let ret = [];\n    for (let i = 0; i < path.length; i++) {\n        let {\n            type,\n            value\n        } = path[i];\n        if (type === T_NODE_NAME) {\n            ret.push(value);\n        } else if (type === T_NODE_NAME_VARIABLE) {\n            ret.push(variableMap[value]);\n        }\n    }\n\n    return ret;\n};\n\nlet parseStrToAst = (str) => {\n    let handleChunk = parser();\n    if (str) {\n        handleChunk(str);\n    }\n    return handleChunk(null);\n};\n\nmodule.exports = {\n    parser,\n    parseStrToAst,\n    executeAST,\n    checkAST\n};\n","'use strict';\n\nlet streamTokenSpliter = require('stream-token-parser');\nlet {\n    LR\n} = require('syntaxer');\nlet {\n    getProductionId,\n    processTokens,\n} = require('./util');\nlet tokenTypes = require('../grammer/tokenTypes');\nlet {\n    ACTION,\n    GOTO\n} = require('../res/lr1Table');\n\nlet {\n    P_PROGRAM,\n\n    P_EXPRESSION_LIST_0,\n    P_EXPRESSION_LIST_1,\n\n    P_EXPRESSION_0,\n    P_EXPRESSION_1,\n    P_EXPRESSION_2,\n\n    P_UPDATE_EXPRESSION_0,\n    P_UPDATE_EXPRESSION_1,\n    P_UPDATE_EXPRESSION_2,\n\n    P_QUERY_EXPRESSION_0,\n    P_QUERY_EXPRESSION_1,\n    P_QUERY_EXPRESSION_2,\n    P_QUERY_EXPRESSION_3,\n    P_QUERY_EXPRESSION_4,\n\n    P_QUERY_EXPRESSION_LIST_0,\n    P_QUERY_EXPRESSION_LIST_1,\n\n    P_PATH_0,\n    P_PATH_1,\n    P_PATH_2,\n    P_PATH_3,\n\n    P_ATOM_DATA_0,\n    P_ATOM_DATA_1,\n    P_ATOM_DATA_2,\n    P_ATOM_DATA_3,\n    P_ATOM_DATA_4,\n\n    T_ATOM,\n    T_PATH,\n    T_ASSIGN,\n    T_DELETE,\n    T_APPEND,\n    T_VARIABLE_NAME,\n    T_FUNCTION,\n    T_NODE_NAME,\n    T_NODE_NAME_VARIABLE\n} = require('./const');\n\nmodule.exports = () => {\n    let tokenSpliter = streamTokenSpliter.parser(tokenTypes);\n\n    // TODO optimization AST\n    let lrParse = LR(ACTION, GOTO, {\n        // when reduce prodcution, translate at the sametime\n        reduceHandler: (production, midNode) => {\n            switch (getProductionId(production)) {\n                case P_PROGRAM:\n                    midNode.value = midNode.children[0].value;\n                    break;\n\n                case P_EXPRESSION_LIST_0:\n                    midNode.value = midNode.children[0].value === null ? [] : [midNode.children[0].value];\n                    break;\n\n                case P_EXPRESSION_LIST_1:\n                    midNode.value = (midNode.children[0].value === null ? [] : [midNode.children[0].value]).concat(midNode.children[2].value);\n                    break;\n\n                case P_EXPRESSION_0:\n                    midNode.value = midNode.children[0].value;\n                    break;\n\n                case P_EXPRESSION_1:\n                    midNode.value = midNode.children[0].value;\n                    break;\n\n                case P_EXPRESSION_2: // empty situation\n                    midNode.value = null;\n                    break;\n\n                case P_UPDATE_EXPRESSION_0:\n                    midNode.value = {\n                        type: T_ASSIGN,\n                        value: {\n                            path: midNode.children[0].value,\n                            value: midNode.children[2].value\n                        }\n                    };\n                    break;\n\n                case P_UPDATE_EXPRESSION_1:\n                    midNode.value = {\n                        type: T_DELETE,\n                        value: {\n                            path: midNode.children[1].value,\n                        }\n                    };\n                    break;\n\n                case P_UPDATE_EXPRESSION_2:\n                    midNode.value = {\n                        type: T_APPEND,\n                        value: {\n                            path: midNode.children[1].value,\n                            value: midNode.children[3].value\n                        }\n                    };\n                    break;\n\n                case P_QUERY_EXPRESSION_0:\n                    midNode.value = midNode.children[0].value;\n                    break;\n\n                case P_QUERY_EXPRESSION_1:\n                    midNode.value = {\n                        type: T_VARIABLE_NAME,\n                        value: midNode.children[0].token.text\n                    };\n                    break;\n\n                case P_QUERY_EXPRESSION_2:\n                    midNode.value = midNode.children[0].value;\n                    break;\n\n                case P_QUERY_EXPRESSION_3:\n                    midNode.value = {\n                        type: T_FUNCTION,\n                        value: {\n                            funName: midNode.children[0].token.text,\n                            params: []\n                        }\n                    };\n                    break;\n\n                case P_QUERY_EXPRESSION_4:\n                    midNode.value = {\n                        type: 'function',\n                        value: {\n                            funName: midNode.children[0].token.text,\n                            params: midNode.children[2].value\n                        }\n                    };\n                    break;\n\n                case P_QUERY_EXPRESSION_LIST_0:\n                    midNode.value = [midNode.children[0].value];\n                    break;\n\n                case P_QUERY_EXPRESSION_LIST_1:\n                    midNode.value = [midNode.children[0].value].concat(midNode.children[2].value);\n                    break;\n\n                case P_PATH_0:\n                    midNode.value = {\n                        type: T_PATH,\n                        value: [{\n                            type: T_NODE_NAME,\n                            value: midNode.children[0].token.text.substring(1)\n                        }]\n                    };\n                    break;\n\n                case P_PATH_1:\n                    midNode.value = {\n                        type: T_PATH,\n                        value: [{\n                            type: T_NODE_NAME,\n                            value: midNode.children[0].token.text.substring(1)\n                        }].concat(midNode.children[1].value.value)\n                    };\n                    break;\n\n                case P_PATH_2:\n                    var nodeNameVarTxt = midNode.children[0].token.text;\n                    midNode.value = {\n                        type: T_PATH,\n                        value: [{\n                            type: T_NODE_NAME_VARIABLE,\n                            value: nodeNameVarTxt.substring(2, nodeNameVarTxt.length - 1).trim()\n                        }]\n                    };\n                    break;\n\n                case P_PATH_3:\n                    var nodeNameVarTxt2 = midNode.children[0].token.text;\n                    midNode.value = {\n                        type: T_PATH,\n                        value: [{\n                            type: T_NODE_NAME_VARIABLE,\n                            value: nodeNameVarTxt2.substring(2, nodeNameVarTxt2.length - 1).trim()\n                        }].concat(midNode.children[1].value.value)\n                    };\n                    break;\n\n                case P_ATOM_DATA_0:\n                    midNode.value = {\n                        type: T_ATOM,\n                        value: true\n                    };\n                    break;\n\n                case P_ATOM_DATA_1:\n                    midNode.value = {\n                        type: T_ATOM,\n                        value: false\n                    };\n                    break;\n\n                case P_ATOM_DATA_2:\n                    midNode.value = {\n                        type: T_ATOM,\n                        value: null\n                    };\n                    break;\n\n                case P_ATOM_DATA_3:\n                    var text = midNode.children[0].token.text;\n                    midNode.value = {\n                        type: T_ATOM,\n                        value: JSON.parse(text)\n                    };\n                    break;\n\n                case P_ATOM_DATA_4:\n                    var numText = midNode.children[0].token.text;\n                    midNode.value = {\n                        type: T_ATOM,\n                        value: Number(numText)\n                    };\n                    break;\n            }\n        }\n    });\n\n    // handle chunk data\n    return (chunk) => {\n        let str = chunk && chunk.toString();\n        let tokens = processTokens(tokenSpliter(str));\n\n        for (let i = 0; i < tokens.length; i++) {\n            lrParse(tokens[i]);\n        }\n\n        // means finished chunks\n        if (chunk === null) {\n            let ast = lrParse(null);\n            return ast.children[0].value;\n        }\n    };\n};\n","'use strict';\n\n\n// TODO reuse pfc-compiler\n\nlet {\n    isObject,\n    isFunction,\n    isString\n} = require('./util');\n\nlet {\n    T_ASSIGN,\n    T_DELETE,\n    T_VARIABLE_NAME,\n    T_FUNCTION,\n    T_PATH,\n    T_NODE_NAME_VARIABLE,\n\n    A_DEFAULT\n} = require('./const');\n\n/**\n *\n * variableStub = {\n *    [variableName]: {\n *       type,\n *       default,  // default value of variable\n *       validate // function used to check dynamic\n *    }\n * }\n *\n *\n * TODO restraints checking\n */\n\n// static check\nlet checkAST = (ast, {\n    variableStub = {}\n} = {}) => {\n    let open = ast.slice(0);\n\n    while (open.length) {\n        let top = open.pop();\n        let midType = top.type;\n\n        if (midType === T_VARIABLE_NAME) {\n            let varName = top.value;\n            // must exist\n            if (!variableStub.hasOwnProperty(varName)) {\n                throw new Error(`missing variable ${varName} in [${Object.keys(variableStub).join(', ')}]`);\n            }\n        } else if (midType === T_FUNCTION) { // function\n            let {\n                funName,\n                params\n            } = top.value;\n            let stub = variableStub[funName];\n            if (!isObject(stub) || stub.type !== T_FUNCTION) {\n                throw new Error(`missing function ${funName}, please check your variable map. Current variable map has keys [${Object.keys(variableStub).join(', ')}].`);\n            }\n            // push params\n            let paramLen = params.length;\n            for (let i = 0; i < paramLen; i++) {\n                open.push(params[i]);\n            }\n        } else if (midType === T_ASSIGN) {\n            open.push(top.value.path);\n            open.push(top.value.value);\n        } else if (midType === T_DELETE) {\n            open.push(top.value.path);\n        } else if (midType === T_PATH) {\n            let path = top.value;\n            for (let i = 0; i < path.length; i++) {\n                let {\n                    type,\n                    value\n                } = path[i];\n                if (type === T_NODE_NAME_VARIABLE) {\n                    let stub = variableStub[value];\n\n                    if (!isObject(stub) || stub.type !== T_NODE_NAME_VARIABLE) {\n                        throw new Error(`missing type attribute ${T_NODE_NAME_VARIABLE} for ${value}, please check your variable map. Current variable map has keys [${Object.keys(variableStub).join(', ')}].`);\n                    }\n                }\n            }\n        }\n    }\n};\n\nlet runTimeCheck = (variableStub, variableMap) => {\n    for (let name in variableStub) {\n        let stub = variableStub[name];\n        // missing check\n        if (!variableMap.hasOwnProperty(name) && !stub.hasOwnProperty(A_DEFAULT)) {\n            throw new Error(`missing variable ${name} in variableMap whick keys are [${Object.keys(variableMap).join(', ')}].`);\n        }\n\n        // type match\n        if (stub.type === T_FUNCTION && !isFunction(variableMap[name])) {\n            throw new Error(`variable ${name} is not function as expected, please check your variable map. Current variable map has keys [${Object.keys(variableMap).join(', ')}].`);\n        }\n\n        if (stub.type === T_NODE_NAME_VARIABLE && !isString(variableMap[name])) {\n            throw new Error(`variable ${name} is not string as expected, please check your variable map. Current variable map has keys [${Object.keys(variableMap).join(', ')}].`);\n        }\n    }\n};\n\nlet getVariable = (name, variableMap, variableStub) => {\n    let stub = variableStub[name] || {};\n    let value = null;\n    if (variableMap.hasOwnProperty(name)) {\n        value = variableMap[name];\n    } else {\n        // try to using default\n        if (!stub.hasOwnProperty(A_DEFAULT)) {\n            throw new Error(`missing variable ${name}.`);\n        } else {\n            value = stub[A_DEFAULT];\n        }\n    }\n\n    if (isObject(stub) && isFunction(stub.validate)) { // dynamic validation\n        stub.validate(value);\n    }\n\n    return value;\n};\n\nmodule.exports = {\n    checkAST,\n    runTimeCheck,\n    getVariable\n};\n","let getProductionId = (production) => {\n    return `${production[0]} := ${production[1].join(' ')}`;\n};\n\n// ignore whitespace\nlet processTokens = (rawTokens) => {\n    let tokens = [];\n    for (let i = 0; i < rawTokens.length; i++) {\n        let {\n            text,\n            tokenType\n        } = rawTokens[i];\n\n        let name = tokenType.name;\n\n        if (name !== 'whitespace') { // ignore white space\n            tokens.push({\n                text,\n                name\n            });\n        }\n    }\n\n    return tokens;\n};\n\nlet isObject = v => v && typeof v === 'object';\n\nlet isFunction = v => typeof v === 'function';\n\nlet isString = v => typeof v === 'string';\n\nmodule.exports = {\n    getProductionId,\n    processTokens,\n    isObject,\n    isFunction,\n    isString\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar punycode = require('punycode');\nvar util = require('./util');\n\nexports.parse = urlParse;\nexports.resolve = urlResolve;\nexports.resolveObject = urlResolveObject;\nexports.format = urlFormat;\n\nexports.Url = Url;\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = ['\\''].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n    hostEndingChars = ['/', '?', '#'],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    unsafeProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    },\n    querystring = require('querystring');\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && util.isObject(url) && url instanceof Url) return url;\n\n  var u = new Url;\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n  if (!util.isString(url)) {\n    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n  }\n\n  // Copy chrome, IE, opera backslash-handling behavior.\n  // Back slashes before the query string get converted to forward slashes\n  // See: https://code.google.com/p/chromium/issues/detail?id=25916\n  var queryIndex = url.indexOf('?'),\n      splitter =\n          (queryIndex !== -1 && queryIndex < url.indexOf('#')) ? '?' : '#',\n      uSplit = url.split(splitter),\n      slashRegex = /\\\\/g;\n  uSplit[0] = uSplit[0].replace(slashRegex, '/');\n  url = uSplit.join(splitter);\n\n  var rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.path = rest;\n      this.href = rest;\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n        if (parseQueryString) {\n          this.query = querystring.parse(this.search.substr(1));\n        } else {\n          this.query = this.search.substr(1);\n        }\n      } else if (parseQueryString) {\n        this.search = '';\n        this.query = {};\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (var i = 0; i < hostEndingChars.length; i++) {\n      var hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (var i = 0; i < nonHostChars.length; i++) {\n      var hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1)\n      hostEnd = rest.length;\n\n    this.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost();\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (var i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) continue;\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      // IDNA Support: Returns a punycoded representation of \"domain\".\n      // It only converts parts of the domain name that\n      // have non-ASCII characters, i.e. it doesn't matter if\n      // you call it with a domain that already is ASCII-only.\n      this.hostname = punycode.toASCII(this.hostname);\n    }\n\n    var p = this.port ? ':' + this.port : '';\n    var h = this.hostname || '';\n    this.host = h + p;\n    this.href += this.host;\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  // now rest is set to the post-host stuff.\n  // chop off any delim chars.\n  if (!unsafeProtocol[lowerProto]) {\n\n    // First, make 100% sure that any \"autoEscape\" chars get\n    // escaped, even if encodeURIComponent doesn't think they\n    // need to be.\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      if (rest.indexOf(ae) === -1)\n        continue;\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    this.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    this.search = '';\n    this.query = {};\n  }\n  if (rest) this.pathname = rest;\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '/';\n  }\n\n  //to support http.request\n  if (this.pathname || this.search) {\n    var p = this.pathname || '';\n    var s = this.search || '';\n    this.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  this.href = this.format();\n  return this;\n};\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  // ensure it's an object, and not a string url.\n  // If it's an obj, this is a no-op.\n  // this way, you can call url_format() on strings\n  // to clean up potentially wonky urls.\n  if (util.isString(obj)) obj = urlParse(obj);\n  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);\n  return obj.format();\n}\n\nUrl.prototype.format = function() {\n  var auth = this.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = this.protocol || '',\n      pathname = this.pathname || '',\n      hash = this.hash || '',\n      host = false,\n      query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (this.hostname.indexOf(':') === -1 ?\n        this.hostname :\n        '[' + this.hostname + ']');\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query &&\n      util.isObject(this.query) &&\n      Object.keys(this.query).length) {\n    query = querystring.stringify(this.query);\n  }\n\n  var search = this.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\n  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n  // unless they had them to begin with.\n  if (this.slashes ||\n      (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n  if (search && search.charAt(0) !== '?') search = '?' + search;\n\n  pathname = pathname.replace(/[?#]/g, function(match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function(relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) return relative;\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function(relative) {\n  if (util.isString(relative)) {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  var tkeys = Object.keys(this);\n  for (var tk = 0; tk < tkeys.length; tk++) {\n    var tkey = tkeys[tk];\n    result[tkey] = this[tkey];\n  }\n\n  // hash is always overridden, no matter what.\n  // even href=\"\" will remove it.\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    var rkeys = Object.keys(relative);\n    for (var rk = 0; rk < rkeys.length; rk++) {\n      var rkey = rkeys[rk];\n      if (rkey !== 'protocol')\n        result[rkey] = relative[rkey];\n    }\n\n    //urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] &&\n        result.hostname && !result.pathname) {\n      result.path = result.pathname = '/';\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    // if it's a known url protocol, then changing\n    // the protocol does weird things\n    // first, if it's not file:, then we MUST have a host,\n    // and if there was a path\n    // to begin with, then we MUST have a path.\n    // if it is file:, then the host is dropped,\n    // because that's known to be hostless.\n    // anything else is assumed to be absolute.\n    if (!slashedProtocol[relative.protocol]) {\n      var keys = Object.keys(relative);\n      for (var v = 0; v < keys.length; v++) {\n        var k = keys[v];\n        result[k] = relative[k];\n      }\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      var relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift()));\n      if (!relative.host) relative.host = '';\n      if (!relative.hostname) relative.hostname = '';\n      if (relPath[0] !== '') relPath.unshift('');\n      if (relPath.length < 2) relPath.unshift('');\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n      isRelAbs = (\n          relative.host ||\n          relative.pathname && relative.pathname.charAt(0) === '/'\n      ),\n      mustEndAbs = (isRelAbs || isSourceAbs ||\n                    (result.host && relative.pathname)),\n      removeAllDots = mustEndAbs,\n      srcPath = result.pathname && result.pathname.split('/') || [],\n      relPath = relative.pathname && relative.pathname.split('/') || [],\n      psychotic = result.protocol && !slashedProtocol[result.protocol];\n\n  // if the url is a non-slashed url, then relative\n  // links like ../.. should be able\n  // to crawl up to the hostname, as well.  This is strange.\n  // result.protocol has already been set by now.\n  // Later on, put the first path part into the host field.\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') srcPath[0] = result.host;\n      else srcPath.unshift(result.host);\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') relPath[0] = relative.host;\n        else relPath.unshift(relative.host);\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = (relative.host || relative.host === '') ?\n                  relative.host : result.host;\n    result.hostname = (relative.hostname || relative.hostname === '') ?\n                      relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    // it's relative\n    // throw away the existing file, and take the new path instead.\n    if (!srcPath) srcPath = [];\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (!util.isNullOrUndefined(relative.search)) {\n    // just pull out the search.\n    // like href='?foo'.\n    // Put this after the other two cases because it simplifies the booleans\n    if (psychotic) {\n      result.hostname = result.host = srcPath.shift();\n      //occationaly the auth can get stuck only in host\n      //this especially happens in cases like\n      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n      var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                       result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.host = result.hostname = authInHost.shift();\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    //to support http.request\n    if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n      result.path = (result.pathname ? result.pathname : '') +\n                    (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    // no path at all.  easy.\n    // we've already handled the other stuff above.\n    result.pathname = null;\n    //to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  // if a url ENDs in . or .., then it must get a trailing slash.\n  // however, if it ends in anything else non-slashy,\n  // then it must NOT get a trailing slash.\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (\n      (result.host || relative.host || srcPath.length > 1) &&\n      (last === '.' || last === '..') || last === '');\n\n  // strip single dots, resolve double dots to parent dir\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last === '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' &&\n      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' ||\n      (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = result.host = isAbsolute ? '' :\n                                    srcPath.length ? srcPath.shift() : '';\n    //occationaly the auth can get stuck only in host\n    //this especially happens in cases like\n    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n    var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                     result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.host = result.hostname = authInHost.shift();\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (!srcPath.length) {\n    result.pathname = null;\n    result.path = null;\n  } else {\n    result.pathname = srcPath.join('/');\n  }\n\n  //to support request.http\n  if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n    result.path = (result.pathname ? result.pathname : '') +\n                  (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function() {\n  var host = this.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) this.hostname = host;\n};\n","'use strict';\n\nmodule.exports = {\n  isString: function(arg) {\n    return typeof(arg) === 'string';\n  },\n  isObject: function(arg) {\n    return typeof(arg) === 'object' && arg !== null;\n  },\n  isNull: function(arg) {\n    return arg === null;\n  },\n  isNullOrUndefined: function(arg) {\n    return arg == null;\n  }\n};\n","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([bth[buf[i++]], bth[buf[i++]], \n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]]]).join('');\n}\n\nmodule.exports = bytesToUuid;\n","// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n// implementation. Also, find the complete implementation of crypto on IE11.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n"],"sourceRoot":""}